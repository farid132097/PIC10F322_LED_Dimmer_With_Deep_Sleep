

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jun 21 14:57:46 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	10F322
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Version 2.32
    33                           ; Generated 23/11/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC10F322 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     0019                     	;# 
    95     001A                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0020                     	;# 
   102     0020                     	;# 
   103     0021                     	;# 
   104     0022                     	;# 
   105     0022                     	;# 
   106     0023                     	;# 
   107     0024                     	;# 
   108     0025                     	;# 
   109     0026                     	;# 
   110     0027                     	;# 
   111     0027                     	;# 
   112     0028                     	;# 
   113     0029                     	;# 
   114     002A                     	;# 
   115     002A                     	;# 
   116     002B                     	;# 
   117     002C                     	;# 
   118     002D                     	;# 
   119     002E                     	;# 
   120     0030                     	;# 
   121     0031                     	;# 
   122     0032                     	;# 
   123     0033                     	;# 
   124     0034                     	;# 
   125     0035                     	;# 
   126     0036                     	;# 
   127     0037                     	;# 
   128     0038                     	;# 
   129     0039                     	;# 
   130     003A                     	;# 
   131     003B                     	;# 
   132     003C                     	;# 
   133     003D                     	;# 
   134     003E                     	;# 
   135     003F                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0020                     	;# 
   171     0020                     	;# 
   172     0021                     	;# 
   173     0022                     	;# 
   174     0022                     	;# 
   175     0023                     	;# 
   176     0024                     	;# 
   177     0025                     	;# 
   178     0026                     	;# 
   179     0027                     	;# 
   180     0027                     	;# 
   181     0028                     	;# 
   182     0029                     	;# 
   183     002A                     	;# 
   184     002A                     	;# 
   185     002B                     	;# 
   186     002C                     	;# 
   187     002D                     	;# 
   188     002E                     	;# 
   189     0030                     	;# 
   190     0031                     	;# 
   191     0032                     	;# 
   192     0033                     	;# 
   193     0034                     	;# 
   194     0035                     	;# 
   195     0036                     	;# 
   196     0037                     	;# 
   197     0038                     	;# 
   198     0039                     	;# 
   199     003A                     	;# 
   200     003B                     	;# 
   201     003C                     	;# 
   202     003D                     	;# 
   203     003E                     	;# 
   204     003F                     	;# 
   205     0000                     	;# 
   206     0001                     	;# 
   207     0002                     	;# 
   208     0003                     	;# 
   209     0004                     	;# 
   210     0005                     	;# 
   211     0006                     	;# 
   212     0007                     	;# 
   213     0008                     	;# 
   214     0009                     	;# 
   215     000A                     	;# 
   216     000B                     	;# 
   217     000C                     	;# 
   218     000D                     	;# 
   219     000E                     	;# 
   220     000F                     	;# 
   221     0010                     	;# 
   222     0011                     	;# 
   223     0012                     	;# 
   224     0013                     	;# 
   225     0014                     	;# 
   226     0015                     	;# 
   227     0016                     	;# 
   228     0016                     	;# 
   229     0017                     	;# 
   230     0018                     	;# 
   231     0019                     	;# 
   232     0019                     	;# 
   233     001A                     	;# 
   234     001B                     	;# 
   235     001C                     	;# 
   236     001D                     	;# 
   237     001E                     	;# 
   238     001F                     	;# 
   239     0020                     	;# 
   240     0020                     	;# 
   241     0021                     	;# 
   242     0022                     	;# 
   243     0022                     	;# 
   244     0023                     	;# 
   245     0024                     	;# 
   246     0025                     	;# 
   247     0026                     	;# 
   248     0027                     	;# 
   249     0027                     	;# 
   250     0028                     	;# 
   251     0029                     	;# 
   252     002A                     	;# 
   253     002A                     	;# 
   254     002B                     	;# 
   255     002C                     	;# 
   256     002D                     	;# 
   257     002E                     	;# 
   258     0030                     	;# 
   259     0031                     	;# 
   260     0032                     	;# 
   261     0033                     	;# 
   262     0034                     	;# 
   263     0035                     	;# 
   264     0036                     	;# 
   265     0037                     	;# 
   266     0038                     	;# 
   267     0039                     	;# 
   268     003A                     	;# 
   269     003B                     	;# 
   270     003C                     	;# 
   271     003D                     	;# 
   272     003E                     	;# 
   273     003F                     	;# 
   274     0000                     	;# 
   275     0001                     	;# 
   276     0002                     	;# 
   277     0003                     	;# 
   278     0004                     	;# 
   279     0005                     	;# 
   280     0006                     	;# 
   281     0007                     	;# 
   282     0008                     	;# 
   283     0009                     	;# 
   284     000A                     	;# 
   285     000B                     	;# 
   286     000C                     	;# 
   287     000D                     	;# 
   288     000E                     	;# 
   289     000F                     	;# 
   290     0010                     	;# 
   291     0011                     	;# 
   292     0012                     	;# 
   293     0013                     	;# 
   294     0014                     	;# 
   295     0015                     	;# 
   296     0016                     	;# 
   297     0016                     	;# 
   298     0017                     	;# 
   299     0018                     	;# 
   300     0019                     	;# 
   301     0019                     	;# 
   302     001A                     	;# 
   303     001B                     	;# 
   304     001C                     	;# 
   305     001D                     	;# 
   306     001E                     	;# 
   307     001F                     	;# 
   308     0020                     	;# 
   309     0020                     	;# 
   310     0021                     	;# 
   311     0022                     	;# 
   312     0022                     	;# 
   313     0023                     	;# 
   314     0024                     	;# 
   315     0025                     	;# 
   316     0026                     	;# 
   317     0027                     	;# 
   318     0027                     	;# 
   319     0028                     	;# 
   320     0029                     	;# 
   321     002A                     	;# 
   322     002A                     	;# 
   323     002B                     	;# 
   324     002C                     	;# 
   325     002D                     	;# 
   326     002E                     	;# 
   327     0030                     	;# 
   328     0031                     	;# 
   329     0032                     	;# 
   330     0033                     	;# 
   331     0034                     	;# 
   332     0035                     	;# 
   333     0036                     	;# 
   334     0037                     	;# 
   335     0038                     	;# 
   336     0039                     	;# 
   337     003A                     	;# 
   338     003B                     	;# 
   339     003C                     	;# 
   340     003D                     	;# 
   341     003E                     	;# 
   342     003F                     	;# 
   343     0005                     _PORTA	set	5
   344     000E                     _OPTION_REG	set	14
   345     000B                     _INTCON	set	11
   346     003E                     _VREGCON	set	62
   347     001D                     _FVRCON	set	29
   348     001F                     _ADCON	set	31
   349     0009                     _WPUA	set	9
   350     0013                     _T2CON	set	19
   351     000C                     _PIR1	set	12
   352     0011                     _TMR2	set	17
   353     0012                     _PR2	set	18
   354     0019                     _PWM2CON	set	25
   355     0008                     _ANSELA	set	8
   356     0006                     _TRISA	set	6
   357     0007                     _LATA	set	7
   358     0017                     _PWM2DCL	set	23
   359     0018                     _PWM2DCH	set	24
   360                           
   361                           	psect	cinit
   362     000B                     start_initialization:	
   363                           ; #config settings
   364                           
   365     000B                     __initialization:
   366                           
   367                           ; Clear objects allocated to BANK0
   368     000B  01DA               	clrf	__pbssBANK0& (0+127)
   369     000C  01DB               	clrf	(__pbssBANK0+1)& (0+127)
   370     000D  01DC               	clrf	(__pbssBANK0+2)& (0+127)
   371     000E                     end_of_initialization:	
   372                           ;End of C runtime variable initialization code
   373                           
   374     000E                     __end_of__initialization:
   375     000E  0183               	clrf	3
   376     000F  2928               	ljmp	_main	;jump to C main() function
   377                           
   378                           	psect	bssBANK0
   379     005A                     __pbssBANK0:
   380     005A                     _Button_State:
   381     005A                     	ds	1
   382     005B                     _sleep_mode:
   383     005B                     	ds	1
   384     005C                     _executed:
   385     005C                     	ds	1
   386                           
   387                           	psect	cstackCOMMON
   388     0000                     __pcstackCOMMON:
   389     0000                     ??_Sleep_Init:
   390     0000                     ??_Button_Get_State:	
   391                           ; 1 bytes @ 0x0
   392                           
   393     0000                     ??_PWM_Off:	
   394                           ; 1 bytes @ 0x0
   395                           
   396     0000                     ??_PWM_On_20_Percent_Duty_Cycle:	
   397                           ; 1 bytes @ 0x0
   398                           
   399     0000                     ??_PWM_On_50_Percent_Duty_Cycle:	
   400                           ; 1 bytes @ 0x0
   401                           
   402     0000                     ??_PWM_On_100_Percent_Duty_Cycle:	
   403                           ; 1 bytes @ 0x0
   404                           
   405     0000                     ??_main:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0000                     ??_PWM_Get_Execution_Status:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0000                     ??_PWM_Set_Execution_Status:	
   412                           ; 1 bytes @ 0x0
   413                           
   414     0000                     ??_PWM_Clear_Execution_Status:	
   415                           ; 1 bytes @ 0x0
   416                           
   417                           
   418                           	psect	cstackBANK0
   419     0040                     __pcstackBANK0:	
   420                           ; 1 bytes @ 0x0
   421                           
   422     0040                     ?_Button_Init:
   423     0040                     ?_Sleep_Init:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0040                     ?_Button_Get_State:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0040                     ?_PWM_Off:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0040                     ?_PWM_On_20_Percent_Duty_Cycle:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0040                     ?_PWM_On_50_Percent_Duty_Cycle:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0040                     ?_PWM_On_100_Percent_Duty_Cycle:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0040                     ?_Button_ISR_Executables:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0040                     ?_main:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0040                     ?_ISRs:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0040                     ?_PWM_Get_Execution_Status:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0040                     ?_PWM_Set_Execution_Status:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0040                     ?_PWM_Clear_Execution_Status:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0040                     ?_PWM_Enable:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0040                     ?_PWM_Disable:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0040                     ?_Sleep_Unused_GPIO_Config:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0040                     ?_Button_Pressed:	
   469                           ; 1 bytes @ 0x0
   470                           
   471     0040                     ??_Button_Pressed:	
   472                           ; 1 bytes @ 0x0
   473                           
   474                           
   475                           ; 1 bytes @ 0x0
   476     0040                     	ds	1
   477     0041                     ??_Button_ISR_Executables:
   478                           
   479                           ; 1 bytes @ 0x1
   480     0041                     	ds	1
   481     0042                     ??_ISRs:
   482                           
   483                           ; 1 bytes @ 0x2
   484     0042                     	ds	2
   485     0044                     ??_Button_Init:
   486     0044                     ??_PWM_Enable:	
   487                           ; 1 bytes @ 0x4
   488                           
   489     0044                     ??_PWM_Disable:	
   490                           ; 1 bytes @ 0x4
   491                           
   492     0044                     ??_Sleep_Unused_GPIO_Config:	
   493                           ; 1 bytes @ 0x4
   494                           
   495     0044                     ?___lmul:	
   496                           ; 1 bytes @ 0x4
   497                           
   498     0044                     ?___lldiv:	
   499                           ; 4 bytes @ 0x4
   500                           
   501     0044                     ___lmul@multiplier:	
   502                           ; 4 bytes @ 0x4
   503                           
   504     0044                     ___lldiv@divisor:	
   505                           ; 4 bytes @ 0x4
   506                           
   507                           
   508                           ; 4 bytes @ 0x4
   509     0044                     	ds	4
   510     0048                     ___lmul@multiplicand:
   511     0048                     ___lldiv@dividend:	
   512                           ; 4 bytes @ 0x8
   513                           
   514                           
   515                           ; 4 bytes @ 0x8
   516     0048                     	ds	4
   517     004C                     ??___lmul:
   518     004C                     ??___lldiv:	
   519                           ; 1 bytes @ 0xC
   520                           
   521                           
   522                           ; 1 bytes @ 0xC
   523     004C                     	ds	1
   524     004D                     ___lmul@product:
   525     004D                     ___lldiv@quotient:	
   526                           ; 4 bytes @ 0xD
   527                           
   528                           
   529                           ; 4 bytes @ 0xD
   530     004D                     	ds	4
   531     0051                     ___lldiv@counter:
   532                           
   533                           ; 1 bytes @ 0x11
   534     0051                     	ds	1
   535     0052                     ?_PWM_Set_Duty:
   536     0052                     PWM_Set_Duty@duty:	
   537                           ; 1 bytes @ 0x12
   538                           
   539                           
   540                           ; 4 bytes @ 0x12
   541     0052                     	ds	4
   542     0056                     ??_PWM_Set_Duty:
   543                           
   544                           ; 1 bytes @ 0x16
   545     0056                     	ds	2
   546     0058                     PWM_Set_Duty@temp:
   547                           
   548                           ; 2 bytes @ 0x18
   549     0058                     	ds	2
   550                           
   551                           	psect	maintext
   552     0128                     __pmaintext:	
   553 ;;
   554 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   555 ;;
   556 ;; *************** function _main *****************
   557 ;; Defined at:
   558 ;;		line 18 in file "main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : B00/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0
   572 ;;      Params:         0       0
   573 ;;      Locals:         0       0
   574 ;;      Temps:          0       0
   575 ;;      Totals:         0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels required when called: 7
   578 ;; This function calls:
   579 ;;		_Button_Get_State
   580 ;;		_Button_Init
   581 ;;		_PWM_Off
   582 ;;		_PWM_On_100_Percent_Duty_Cycle
   583 ;;		_PWM_On_20_Percent_Duty_Cycle
   584 ;;		_PWM_On_50_Percent_Duty_Cycle
   585 ;;		_Sleep_Init
   586 ;; This function is called by:
   587 ;;		Startup code after reset
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591     0128                     _main:	
   592                           ;psect for function _main
   593                           
   594     0128                     l961:	
   595                           ;incstack = 0
   596                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   597                           
   598                           
   599                           ;main.c: 20: Button_Init();
   600     0128  21C5               	fcall	_Button_Init
   601                           
   602                           ;main.c: 21: Sleep_Init();
   603     0129  21D9               	fcall	_Sleep_Init
   604     012A                     l963:
   605                           
   606                           ;main.c: 25: if(Button_Get_State() == 0){
   607     012A  21F9               	fcall	_Button_Get_State
   608     012B  3A00               	xorlw	0
   609     012C  1D03               	skipz
   610     012D  292F               	goto	u451
   611     012E  2930               	goto	u450
   612     012F                     u451:
   613     012F  2933               	goto	l967
   614     0130                     u450:
   615     0130                     l965:
   616                           
   617                           ;main.c: 26: PWM_Off();
   618     0130  21D0               	fcall	_PWM_Off
   619     0131  0063               	sleep	;# 
   620                           
   621                           ;main.c: 28: }else if( Button_Get_State() == 1){
   622     0132  292A               	goto	l963
   623     0133                     l967:
   624     0133  21F9               	fcall	_Button_Get_State
   625     0134  3A01               	xorlw	1
   626     0135  1D03               	skipz
   627     0136  2938               	goto	u461
   628     0137  2939               	goto	u460
   629     0138                     u461:
   630     0138  293B               	goto	l971
   631     0139                     u460:
   632     0139                     l969:
   633                           
   634                           ;main.c: 29: PWM_On_20_Percent_Duty_Cycle();
   635     0139  218E               	fcall	_PWM_On_20_Percent_Duty_Cycle
   636                           
   637                           ;main.c: 30: }else if( Button_Get_State() == 2){
   638     013A  292A               	goto	l963
   639     013B                     l971:
   640     013B  21F9               	fcall	_Button_Get_State
   641     013C  3A02               	xorlw	2
   642     013D  1D03               	skipz
   643     013E  2940               	goto	u471
   644     013F  2941               	goto	u470
   645     0140                     u471:
   646     0140  2943               	goto	l975
   647     0141                     u470:
   648     0141                     l973:
   649                           
   650                           ;main.c: 31: PWM_On_50_Percent_Duty_Cycle();
   651     0141  217B               	fcall	_PWM_On_50_Percent_Duty_Cycle
   652                           
   653                           ;main.c: 32: }else if( Button_Get_State() == 3){
   654     0142  292A               	goto	l963
   655     0143                     l975:
   656     0143  21F9               	fcall	_Button_Get_State
   657     0144  3A03               	xorlw	3
   658     0145  1D03               	skipz
   659     0146  2948               	goto	u481
   660     0147  2949               	goto	u480
   661     0148                     u481:
   662     0148  294B               	goto	l23
   663     0149                     u480:
   664     0149                     l977:
   665                           
   666                           ;main.c: 33: PWM_On_100_Percent_Duty_Cycle();
   667     0149  21A1               	fcall	_PWM_On_100_Percent_Duty_Cycle
   668     014A  292A               	goto	l963
   669     014B                     l23:
   670     014B  292A               	goto	l963
   671     014C  280A               	ljmp	start
   672     014D                     __end_of_main:
   673                           
   674                           	psect	text1
   675     01D9                     __ptext1:	
   676 ;; *************** function _Sleep_Init *****************
   677 ;; Defined at:
   678 ;;		line 78 in file "sleep.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, status,2, status,0, pclath, cstack
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0
   692 ;;      Params:         0       0
   693 ;;      Locals:         0       0
   694 ;;      Temps:          0       0
   695 ;;      Totals:         0       0
   696 ;;Total ram usage:        0 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; Hardware stack levels required when called: 5
   699 ;; This function calls:
   700 ;;		_Sleep_Unused_GPIO_Config
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706     01D9                     _Sleep_Init:	
   707                           ;psect for function _Sleep_Init
   708                           
   709     01D9                     l929:	
   710                           ;incstack = 0
   711                           ; Regs used in _Sleep_Init: [wreg+status,2+status,0+pclath+cstack]
   712                           
   713                           
   714                           ;sleep.c: 79: WPUA = (1<<3);
   715     01D9  3008               	movlw	8
   716     01DA  0089               	movwf	9	;volatile
   717     01DB                     l931:
   718                           
   719                           ;sleep.c: 83: ADCON = 0x00;
   720     01DB  019F               	clrf	31	;volatile
   721     01DC                     l933:
   722                           
   723                           ;sleep.c: 84: FVRCON = 0x00;
   724     01DC  019D               	clrf	29	;volatile
   725                           
   726                           ;sleep.c: 85: VREGCON = 0x02;
   727     01DD  3002               	movlw	2
   728     01DE  00BE               	movwf	62	;volatile
   729     01DF                     l935:
   730                           
   731                           ;sleep.c: 86: Sleep_Unused_GPIO_Config();
   732     01DF  21EF               	fcall	_Sleep_Unused_GPIO_Config
   733     01E0                     l113:
   734     01E0  0008               	return
   735     01E1                     __end_of_Sleep_Init:
   736                           
   737                           	psect	text2
   738     01EF                     __ptext2:	
   739 ;; *************** function _Sleep_Unused_GPIO_Config *****************
   740 ;; Defined at:
   741 ;;		line 72 in file "sleep.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0
   755 ;;      Params:         0       0
   756 ;;      Locals:         0       0
   757 ;;      Temps:          0       1
   758 ;;      Totals:         0       1
   759 ;;Total ram usage:        1 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 4
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_Sleep_Init
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769     01EF                     _Sleep_Unused_GPIO_Config:	
   770                           ;psect for function _Sleep_Unused_GPIO_Config
   771                           
   772     01EF                     l909:	
   773                           ;incstack = 0
   774                           ; Regs used in _Sleep_Unused_GPIO_Config: [wreg+status,2+status,0]
   775                           
   776                           
   777                           ;sleep.c: 75: LATA &=~ 1;
   778     01EF  30FE               	movlw	254
   779     01F0  00C4               	movwf	??_Sleep_Unused_GPIO_Config
   780     01F1  0844               	movf	??_Sleep_Unused_GPIO_Config,w
   781     01F2  0587               	andwf	7,f	;volatile
   782     01F3                     l110:
   783     01F3  0008               	return
   784     01F4                     __end_of_Sleep_Unused_GPIO_Config:
   785                           
   786                           	psect	text3
   787     017B                     __ptext3:	
   788 ;; *************** function _PWM_On_50_Percent_Duty_Cycle *****************
   789 ;; Defined at:
   790 ;;		line 75 in file "pwm.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, status,2, status,0, pclath, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0
   804 ;;      Params:         0       0
   805 ;;      Locals:         0       0
   806 ;;      Temps:          0       0
   807 ;;      Totals:         0       0
   808 ;;Total ram usage:        0 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; Hardware stack levels required when called: 6
   811 ;; This function calls:
   812 ;;		_PWM_Disable
   813 ;;		_PWM_Enable
   814 ;;		_PWM_Get_Execution_Status
   815 ;;		_PWM_Set_Duty
   816 ;;		_PWM_Set_Execution_Status
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822     017B                     _PWM_On_50_Percent_Duty_Cycle:	
   823                           ;psect for function _PWM_On_50_Percent_Duty_Cycle
   824                           
   825     017B                     l949:	
   826                           ;incstack = 0
   827                           ; Regs used in _PWM_On_50_Percent_Duty_Cycle: [wreg+status,2+status,0+pclath+cstack]
   828                           
   829                           
   830                           ;pwm.c: 76: if(PWM_Get_Execution_Status()==0){
   831     017B  21F7               	fcall	_PWM_Get_Execution_Status
   832     017C  3A00               	xorlw	0
   833     017D  1D03               	skipz
   834     017E  2980               	goto	u431
   835     017F  2981               	goto	u430
   836     0180                     u431:
   837     0180  298D               	goto	l89
   838     0181                     u430:
   839     0181                     l951:
   840                           
   841                           ;pwm.c: 77: PWM_Disable();
   842     0181  2167               	fcall	_PWM_Disable
   843                           
   844                           ;pwm.c: 78: PWM_Enable();
   845     0182  214D               	fcall	_PWM_Enable
   846                           
   847                           ;pwm.c: 79: PWM_Set_Duty(50);
   848     0183  3000               	movlw	0
   849     0184  00D5               	movwf	PWM_Set_Duty@duty+3
   850     0185  3000               	movlw	0
   851     0186  00D4               	movwf	PWM_Set_Duty@duty+2
   852     0187  3000               	movlw	0
   853     0188  00D3               	movwf	PWM_Set_Duty@duty+1
   854     0189  3032               	movlw	50
   855     018A  00D2               	movwf	PWM_Set_Duty@duty
   856     018B  2010               	fcall	_PWM_Set_Duty
   857                           
   858                           ;pwm.c: 80: PWM_Set_Execution_Status();
   859     018C  21F4               	fcall	_PWM_Set_Execution_Status
   860     018D                     l89:
   861     018D  0008               	return
   862     018E                     __end_of_PWM_On_50_Percent_Duty_Cycle:
   863                           
   864                           	psect	text4
   865     018E                     __ptext4:	
   866 ;; *************** function _PWM_On_20_Percent_Duty_Cycle *****************
   867 ;; Defined at:
   868 ;;		line 66 in file "pwm.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0, pclath, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMMON   BANK0
   882 ;;      Params:         0       0
   883 ;;      Locals:         0       0
   884 ;;      Temps:          0       0
   885 ;;      Totals:         0       0
   886 ;;Total ram usage:        0 bytes
   887 ;; Hardware stack levels used: 1
   888 ;; Hardware stack levels required when called: 6
   889 ;; This function calls:
   890 ;;		_PWM_Disable
   891 ;;		_PWM_Enable
   892 ;;		_PWM_Get_Execution_Status
   893 ;;		_PWM_Set_Duty
   894 ;;		_PWM_Set_Execution_Status
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900     018E                     _PWM_On_20_Percent_Duty_Cycle:	
   901                           ;psect for function _PWM_On_20_Percent_Duty_Cycle
   902                           
   903     018E                     l945:	
   904                           ;incstack = 0
   905                           ; Regs used in _PWM_On_20_Percent_Duty_Cycle: [wreg+status,2+status,0+pclath+cstack]
   906                           
   907                           
   908                           ;pwm.c: 67: if(PWM_Get_Execution_Status()==0){
   909     018E  21F7               	fcall	_PWM_Get_Execution_Status
   910     018F  3A00               	xorlw	0
   911     0190  1D03               	skipz
   912     0191  2993               	goto	u421
   913     0192  2994               	goto	u420
   914     0193                     u421:
   915     0193  29A0               	goto	l85
   916     0194                     u420:
   917     0194                     l947:
   918                           
   919                           ;pwm.c: 68: PWM_Disable();
   920     0194  2167               	fcall	_PWM_Disable
   921                           
   922                           ;pwm.c: 69: PWM_Enable();
   923     0195  214D               	fcall	_PWM_Enable
   924                           
   925                           ;pwm.c: 70: PWM_Set_Duty(20);
   926     0196  3000               	movlw	0
   927     0197  00D5               	movwf	PWM_Set_Duty@duty+3
   928     0198  3000               	movlw	0
   929     0199  00D4               	movwf	PWM_Set_Duty@duty+2
   930     019A  3000               	movlw	0
   931     019B  00D3               	movwf	PWM_Set_Duty@duty+1
   932     019C  3014               	movlw	20
   933     019D  00D2               	movwf	PWM_Set_Duty@duty
   934     019E  2010               	fcall	_PWM_Set_Duty
   935                           
   936                           ;pwm.c: 71: PWM_Set_Execution_Status();
   937     019F  21F4               	fcall	_PWM_Set_Execution_Status
   938     01A0                     l85:
   939     01A0  0008               	return
   940     01A1                     __end_of_PWM_On_20_Percent_Duty_Cycle:
   941                           
   942                           	psect	text5
   943     01A1                     __ptext5:	
   944 ;; *************** function _PWM_On_100_Percent_Duty_Cycle *****************
   945 ;; Defined at:
   946 ;;		line 84 in file "pwm.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0
   960 ;;      Params:         0       0
   961 ;;      Locals:         0       0
   962 ;;      Temps:          0       0
   963 ;;      Totals:         0       0
   964 ;;Total ram usage:        0 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 6
   967 ;; This function calls:
   968 ;;		_PWM_Disable
   969 ;;		_PWM_Enable
   970 ;;		_PWM_Get_Execution_Status
   971 ;;		_PWM_Set_Duty
   972 ;;		_PWM_Set_Execution_Status
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978     01A1                     _PWM_On_100_Percent_Duty_Cycle:	
   979                           ;psect for function _PWM_On_100_Percent_Duty_Cycle
   980                           
   981     01A1                     l953:	
   982                           ;incstack = 0
   983                           ; Regs used in _PWM_On_100_Percent_Duty_Cycle: [wreg+status,2+status,0+pclath+cstack]
   984                           
   985                           
   986                           ;pwm.c: 85: if(PWM_Get_Execution_Status()==0){
   987     01A1  21F7               	fcall	_PWM_Get_Execution_Status
   988     01A2  3A00               	xorlw	0
   989     01A3  1D03               	skipz
   990     01A4  29A6               	goto	u441
   991     01A5  29A7               	goto	u440
   992     01A6                     u441:
   993     01A6  29B3               	goto	l93
   994     01A7                     u440:
   995     01A7                     l955:
   996                           
   997                           ;pwm.c: 86: PWM_Disable();
   998     01A7  2167               	fcall	_PWM_Disable
   999                           
  1000                           ;pwm.c: 87: PWM_Enable();
  1001     01A8  214D               	fcall	_PWM_Enable
  1002                           
  1003                           ;pwm.c: 88: PWM_Set_Duty(95);
  1004     01A9  3000               	movlw	0
  1005     01AA  00D5               	movwf	PWM_Set_Duty@duty+3
  1006     01AB  3000               	movlw	0
  1007     01AC  00D4               	movwf	PWM_Set_Duty@duty+2
  1008     01AD  3000               	movlw	0
  1009     01AE  00D3               	movwf	PWM_Set_Duty@duty+1
  1010     01AF  305F               	movlw	95
  1011     01B0  00D2               	movwf	PWM_Set_Duty@duty
  1012     01B1  2010               	fcall	_PWM_Set_Duty
  1013                           
  1014                           ;pwm.c: 89: PWM_Set_Execution_Status();
  1015     01B2  21F4               	fcall	_PWM_Set_Execution_Status
  1016     01B3                     l93:
  1017     01B3  0008               	return
  1018     01B4                     __end_of_PWM_On_100_Percent_Duty_Cycle:
  1019                           
  1020                           	psect	text6
  1021     0010                     __ptext6:	
  1022 ;; *************** function _PWM_Set_Duty *****************
  1023 ;; Defined at:
  1024 ;;		line 24 in file "pwm.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  duty            4   18[BANK0 ] unsigned long 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  temp            2   24[BANK0 ] unsigned int 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, pclath, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0
  1038 ;;      Params:         0       4
  1039 ;;      Locals:         0       2
  1040 ;;      Temps:          0       2
  1041 ;;      Totals:         0       8
  1042 ;;Total ram usage:        8 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; Hardware stack levels required when called: 5
  1045 ;; This function calls:
  1046 ;;		___lldiv
  1047 ;;		___lmul
  1048 ;; This function is called by:
  1049 ;;		_PWM_On_20_Percent_Duty_Cycle
  1050 ;;		_PWM_On_50_Percent_Duty_Cycle
  1051 ;;		_PWM_On_100_Percent_Duty_Cycle
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055     0010                     _PWM_Set_Duty:	
  1056                           ;psect for function _PWM_Set_Duty
  1057                           
  1058     0010                     l863:	
  1059                           ;incstack = 0
  1060                           ; Regs used in _PWM_Set_Duty: [wreg+status,2+status,0+pclath+cstack]
  1061                           
  1062                           
  1063                           ;pwm.c: 25: if(duty>100){
  1064     0010  0855               	movf	PWM_Set_Duty@duty+3,w
  1065     0011  1D03               	btfss	3,2
  1066     0012  2821               	goto	u370
  1067     0013  0854               	movf	PWM_Set_Duty@duty+2,w
  1068     0014  1D03               	btfss	3,2
  1069     0015  2821               	goto	u370
  1070     0016  0853               	movf	PWM_Set_Duty@duty+1,w
  1071     0017  1D03               	btfss	3,2
  1072     0018  2821               	goto	u370
  1073     0019  3065               	movlw	101
  1074     001A  0252               	subwf	PWM_Set_Duty@duty,w
  1075     001B  1D03               	skipz
  1076     001C  281D               	goto	u373
  1077     001D                     u373:
  1078     001D  1C03               	btfss	3,0
  1079     001E  2820               	goto	u371
  1080     001F  2821               	goto	u370
  1081     0020                     u371:
  1082     0020  2829               	goto	l869
  1083     0021                     u370:
  1084     0021                     l865:
  1085                           
  1086                           ;pwm.c: 26: duty=100;
  1087     0021  3000               	movlw	0
  1088     0022  00D5               	movwf	PWM_Set_Duty@duty+3
  1089     0023  3000               	movlw	0
  1090     0024  00D4               	movwf	PWM_Set_Duty@duty+2
  1091     0025  3000               	movlw	0
  1092     0026  00D3               	movwf	PWM_Set_Duty@duty+1
  1093     0027  3064               	movlw	100
  1094     0028  00D2               	movwf	PWM_Set_Duty@duty
  1095     0029                     l869:	
  1096                           ;pwm.c: 27: }else if(duty<0){
  1097                           
  1098                           
  1099                           ;pwm.c: 29: };pwm.c: 30: duty*=1023;
  1100     0029  3000               	movlw	0
  1101     002A  00C7               	movwf	___lmul@multiplier+3
  1102     002B  3000               	movlw	0
  1103     002C  00C6               	movwf	___lmul@multiplier+2
  1104     002D  3003               	movlw	3
  1105     002E  00C5               	movwf	___lmul@multiplier+1
  1106     002F  30FF               	movlw	255
  1107     0030  00C4               	movwf	___lmul@multiplier
  1108     0031  0855               	movf	PWM_Set_Duty@duty+3,w
  1109     0032  00CB               	movwf	___lmul@multiplicand+3
  1110     0033  0854               	movf	PWM_Set_Duty@duty+2,w
  1111     0034  00CA               	movwf	___lmul@multiplicand+2
  1112     0035  0853               	movf	PWM_Set_Duty@duty+1,w
  1113     0036  00C9               	movwf	___lmul@multiplicand+1
  1114     0037  0852               	movf	PWM_Set_Duty@duty,w
  1115     0038  00C8               	movwf	___lmul@multiplicand
  1116     0039  20E2               	fcall	___lmul
  1117     003A  0847               	movf	?___lmul+3,w
  1118     003B  00D5               	movwf	PWM_Set_Duty@duty+3
  1119     003C  0846               	movf	?___lmul+2,w
  1120     003D  00D4               	movwf	PWM_Set_Duty@duty+2
  1121     003E  0845               	movf	?___lmul+1,w
  1122     003F  00D3               	movwf	PWM_Set_Duty@duty+1
  1123     0040  0844               	movf	?___lmul,w
  1124     0041  00D2               	movwf	PWM_Set_Duty@duty
  1125     0042                     l871:
  1126                           
  1127                           ;pwm.c: 31: duty/=100;
  1128     0042  3000               	movlw	0
  1129     0043  00C7               	movwf	___lldiv@divisor+3
  1130     0044  3000               	movlw	0
  1131     0045  00C6               	movwf	___lldiv@divisor+2
  1132     0046  3000               	movlw	0
  1133     0047  00C5               	movwf	___lldiv@divisor+1
  1134     0048  3064               	movlw	100
  1135     0049  00C4               	movwf	___lldiv@divisor
  1136     004A  0855               	movf	PWM_Set_Duty@duty+3,w
  1137     004B  00CB               	movwf	___lldiv@dividend+3
  1138     004C  0854               	movf	PWM_Set_Duty@duty+2,w
  1139     004D  00CA               	movwf	___lldiv@dividend+2
  1140     004E  0853               	movf	PWM_Set_Duty@duty+1,w
  1141     004F  00C9               	movwf	___lldiv@dividend+1
  1142     0050  0852               	movf	PWM_Set_Duty@duty,w
  1143     0051  00C8               	movwf	___lldiv@dividend
  1144     0052  207C               	fcall	___lldiv
  1145     0053  0847               	movf	?___lldiv+3,w
  1146     0054  00D5               	movwf	PWM_Set_Duty@duty+3
  1147     0055  0846               	movf	?___lldiv+2,w
  1148     0056  00D4               	movwf	PWM_Set_Duty@duty+2
  1149     0057  0845               	movf	?___lldiv+1,w
  1150     0058  00D3               	movwf	PWM_Set_Duty@duty+1
  1151     0059  0844               	movf	?___lldiv,w
  1152     005A  00D2               	movwf	PWM_Set_Duty@duty
  1153                           
  1154                           ;pwm.c: 33: uint16_t temp=duty;
  1155     005B  0853               	movf	PWM_Set_Duty@duty+1,w
  1156     005C  00D9               	movwf	PWM_Set_Duty@temp+1
  1157     005D  0852               	movf	PWM_Set_Duty@duty,w
  1158     005E  00D8               	movwf	PWM_Set_Duty@temp
  1159                           
  1160                           ;pwm.c: 34: temp&=0x3FF;
  1161     005F  30FF               	movlw	255
  1162     0060  05D8               	andwf	PWM_Set_Duty@temp,f
  1163     0061  3003               	movlw	3
  1164     0062  05D9               	andwf	PWM_Set_Duty@temp+1,f
  1165     0063                     l873:
  1166                           
  1167                           ;pwm.c: 35: PWM2DCH=(temp>>2);
  1168     0063  0859               	movf	PWM_Set_Duty@temp+1,w
  1169     0064  00D7               	movwf	??_PWM_Set_Duty+1
  1170     0065  0858               	movf	PWM_Set_Duty@temp,w
  1171     0066  00D6               	movwf	??_PWM_Set_Duty
  1172     0067  1003               	clrc
  1173     0068  0CD7               	rrf	??_PWM_Set_Duty+1,f
  1174     0069  0CD6               	rrf	??_PWM_Set_Duty,f
  1175     006A  1003               	clrc
  1176     006B  0CD7               	rrf	??_PWM_Set_Duty+1,f
  1177     006C  0CD6               	rrf	??_PWM_Set_Duty,f
  1178     006D  0856               	movf	??_PWM_Set_Duty,w
  1179     006E  0098               	movwf	24	;volatile
  1180     006F                     l875:
  1181                           
  1182                           ;pwm.c: 36: PWM2DCL=(temp&0x03)<<6;
  1183     006F  0858               	movf	PWM_Set_Duty@temp,w
  1184     0070  3903               	andlw	3
  1185     0071  00D6               	movwf	??_PWM_Set_Duty
  1186     0072  3005               	movlw	5
  1187     0073                     u385:
  1188     0073  1003               	clrc
  1189     0074  0DD6               	rlf	??_PWM_Set_Duty,f
  1190     0075  3EFF               	addlw	-1
  1191     0076  1D03               	skipz
  1192     0077  2873               	goto	u385
  1193     0078  1003               	clrc
  1194     0079  0D56               	rlf	??_PWM_Set_Duty,w
  1195     007A  0097               	movwf	23	;volatile
  1196     007B                     l75:
  1197     007B  0008               	return
  1198     007C                     __end_of_PWM_Set_Duty:
  1199                           
  1200                           	psect	text7
  1201     00E2                     __ptext7:	
  1202 ;; *************** function ___lmul *****************
  1203 ;; Defined at:
  1204 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  multiplier      4    4[BANK0 ] unsigned long 
  1207 ;;  multiplicand    4    8[BANK0 ] unsigned long 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  product         4   13[BANK0 ] unsigned long 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  4    4[BANK0 ] unsigned long 
  1212 ;; Registers used:
  1213 ;;		wreg, status,2, status,0
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0
  1219 ;;      Params:         0       8
  1220 ;;      Locals:         0       4
  1221 ;;      Temps:          0       1
  1222 ;;      Totals:         0      13
  1223 ;;Total ram usage:       13 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; Hardware stack levels required when called: 4
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_PWM_Set_Duty
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233     00E2                     ___lmul:	
  1234                           ;psect for function ___lmul
  1235                           
  1236     00E2                     l819:	
  1237                           ;incstack = 0
  1238                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1239                           
  1240     00E2  3000               	movlw	0
  1241     00E3  00D0               	movwf	___lmul@product+3
  1242     00E4  3000               	movlw	0
  1243     00E5  00CF               	movwf	___lmul@product+2
  1244     00E6  3000               	movlw	0
  1245     00E7  00CE               	movwf	___lmul@product+1
  1246     00E8  3000               	movlw	0
  1247     00E9  00CD               	movwf	___lmul@product
  1248     00EA                     l821:
  1249     00EA  1C44               	btfss	___lmul@multiplier,0
  1250     00EB  28ED               	goto	u251
  1251     00EC  28EE               	goto	u250
  1252     00ED                     u251:
  1253     00ED  2905               	goto	l825
  1254     00EE                     u250:
  1255     00EE                     l823:
  1256     00EE  0848               	movf	___lmul@multiplicand,w
  1257     00EF  07CD               	addwf	___lmul@product,f
  1258     00F0  0849               	movf	___lmul@multiplicand+1,w
  1259     00F1  1103               	clrz
  1260     00F2  1803               	skipnc
  1261     00F3  3E01               	addlw	1
  1262     00F4  1903               	skipnz
  1263     00F5  28F7               	goto	u261
  1264     00F6  07CE               	addwf	___lmul@product+1,f
  1265     00F7                     u261:
  1266     00F7  084A               	movf	___lmul@multiplicand+2,w
  1267     00F8  1103               	clrz
  1268     00F9  1803               	skipnc
  1269     00FA  3E01               	addlw	1
  1270     00FB  1903               	skipnz
  1271     00FC  28FE               	goto	u262
  1272     00FD  07CF               	addwf	___lmul@product+2,f
  1273     00FE                     u262:
  1274     00FE  084B               	movf	___lmul@multiplicand+3,w
  1275     00FF  1103               	clrz
  1276     0100  1803               	skipnc
  1277     0101  3E01               	addlw	1
  1278     0102  1903               	skipnz
  1279     0103  2905               	goto	u263
  1280     0104  07D0               	addwf	___lmul@product+3,f
  1281     0105                     u263:
  1282     0105                     l825:
  1283     0105  3001               	movlw	1
  1284     0106  00CC               	movwf	??___lmul
  1285     0107                     u275:
  1286     0107  1003               	clrc
  1287     0108  0DC8               	rlf	___lmul@multiplicand,f
  1288     0109  0DC9               	rlf	___lmul@multiplicand+1,f
  1289     010A  0DCA               	rlf	___lmul@multiplicand+2,f
  1290     010B  0DCB               	rlf	___lmul@multiplicand+3,f
  1291     010C  0BCC               	decfsz	??___lmul,f
  1292     010D  2907               	goto	u275
  1293     010E                     l827:
  1294     010E  3001               	movlw	1
  1295     010F                     u285:
  1296     010F  1003               	clrc
  1297     0110  0CC7               	rrf	___lmul@multiplier+3,f
  1298     0111  0CC6               	rrf	___lmul@multiplier+2,f
  1299     0112  0CC5               	rrf	___lmul@multiplier+1,f
  1300     0113  0CC4               	rrf	___lmul@multiplier,f
  1301     0114  3EFF               	addlw	-1
  1302     0115  1D03               	skipz
  1303     0116  290F               	goto	u285
  1304     0117  0847               	movf	___lmul@multiplier+3,w
  1305     0118  0446               	iorwf	___lmul@multiplier+2,w
  1306     0119  0445               	iorwf	___lmul@multiplier+1,w
  1307     011A  0444               	iorwf	___lmul@multiplier,w
  1308     011B  1D03               	skipz
  1309     011C  291E               	goto	u291
  1310     011D  291F               	goto	u290
  1311     011E                     u291:
  1312     011E  28EA               	goto	l821
  1313     011F                     u290:
  1314     011F                     l829:
  1315     011F  0850               	movf	___lmul@product+3,w
  1316     0120  00C7               	movwf	?___lmul+3
  1317     0121  084F               	movf	___lmul@product+2,w
  1318     0122  00C6               	movwf	?___lmul+2
  1319     0123  084E               	movf	___lmul@product+1,w
  1320     0124  00C5               	movwf	?___lmul+1
  1321     0125  084D               	movf	___lmul@product,w
  1322     0126  00C4               	movwf	?___lmul
  1323     0127                     l161:
  1324     0127  0008               	return
  1325     0128                     __end_of___lmul:
  1326                           
  1327                           	psect	text8
  1328     007C                     __ptext8:	
  1329 ;; *************** function ___lldiv *****************
  1330 ;; Defined at:
  1331 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  divisor         4    4[BANK0 ] unsigned long 
  1334 ;;  dividend        4    8[BANK0 ] unsigned long 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  quotient        4   13[BANK0 ] unsigned long 
  1337 ;;  counter         1   17[BANK0 ] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  4    4[BANK0 ] unsigned long 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMMON   BANK0
  1347 ;;      Params:         0       8
  1348 ;;      Locals:         0       5
  1349 ;;      Temps:          0       1
  1350 ;;      Totals:         0      14
  1351 ;;Total ram usage:       14 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 4
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_PWM_Set_Duty
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361     007C                     ___lldiv:	
  1362                           ;psect for function ___lldiv
  1363                           
  1364     007C                     l833:	
  1365                           ;incstack = 0
  1366                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1367                           
  1368     007C  3000               	movlw	0
  1369     007D  00D0               	movwf	___lldiv@quotient+3
  1370     007E  3000               	movlw	0
  1371     007F  00CF               	movwf	___lldiv@quotient+2
  1372     0080  3000               	movlw	0
  1373     0081  00CE               	movwf	___lldiv@quotient+1
  1374     0082  3000               	movlw	0
  1375     0083  00CD               	movwf	___lldiv@quotient
  1376     0084  0847               	movf	___lldiv@divisor+3,w
  1377     0085  0446               	iorwf	___lldiv@divisor+2,w
  1378     0086  0445               	iorwf	___lldiv@divisor+1,w
  1379     0087  0444               	iorwf	___lldiv@divisor,w
  1380     0088  1903               	skipnz
  1381     0089  288B               	goto	u301
  1382     008A  288C               	goto	u300
  1383     008B                     u301:
  1384     008B  28D9               	goto	l853
  1385     008C                     u300:
  1386     008C                     l835:
  1387     008C  01D1               	clrf	___lldiv@counter
  1388     008D  0AD1               	incf	___lldiv@counter,f
  1389     008E  289C               	goto	l839
  1390     008F                     l837:
  1391     008F  3001               	movlw	1
  1392     0090  00CC               	movwf	??___lldiv
  1393     0091                     u315:
  1394     0091  1003               	clrc
  1395     0092  0DC4               	rlf	___lldiv@divisor,f
  1396     0093  0DC5               	rlf	___lldiv@divisor+1,f
  1397     0094  0DC6               	rlf	___lldiv@divisor+2,f
  1398     0095  0DC7               	rlf	___lldiv@divisor+3,f
  1399     0096  0BCC               	decfsz	??___lldiv,f
  1400     0097  2891               	goto	u315
  1401     0098  3001               	movlw	1
  1402     0099  00CC               	movwf	??___lldiv
  1403     009A  084C               	movf	??___lldiv,w
  1404     009B  07D1               	addwf	___lldiv@counter,f
  1405     009C                     l839:
  1406     009C  1FC7               	btfss	___lldiv@divisor+3,7
  1407     009D  289F               	goto	u321
  1408     009E  28A0               	goto	u320
  1409     009F                     u321:
  1410     009F  288F               	goto	l837
  1411     00A0                     u320:
  1412     00A0                     l841:
  1413     00A0  3001               	movlw	1
  1414     00A1  00CC               	movwf	??___lldiv
  1415     00A2                     u335:
  1416     00A2  1003               	clrc
  1417     00A3  0DCD               	rlf	___lldiv@quotient,f
  1418     00A4  0DCE               	rlf	___lldiv@quotient+1,f
  1419     00A5  0DCF               	rlf	___lldiv@quotient+2,f
  1420     00A6  0DD0               	rlf	___lldiv@quotient+3,f
  1421     00A7  0BCC               	decfsz	??___lldiv,f
  1422     00A8  28A2               	goto	u335
  1423     00A9                     l843:
  1424     00A9  0847               	movf	___lldiv@divisor+3,w
  1425     00AA  024B               	subwf	___lldiv@dividend+3,w
  1426     00AB  1D03               	skipz
  1427     00AC  28B7               	goto	u345
  1428     00AD  0846               	movf	___lldiv@divisor+2,w
  1429     00AE  024A               	subwf	___lldiv@dividend+2,w
  1430     00AF  1D03               	skipz
  1431     00B0  28B7               	goto	u345
  1432     00B1  0845               	movf	___lldiv@divisor+1,w
  1433     00B2  0249               	subwf	___lldiv@dividend+1,w
  1434     00B3  1D03               	skipz
  1435     00B4  28B7               	goto	u345
  1436     00B5  0844               	movf	___lldiv@divisor,w
  1437     00B6  0248               	subwf	___lldiv@dividend,w
  1438     00B7                     u345:
  1439     00B7  1C03               	skipc
  1440     00B8  28BA               	goto	u341
  1441     00B9  28BB               	goto	u340
  1442     00BA                     u341:
  1443     00BA  28CA               	goto	l849
  1444     00BB                     u340:
  1445     00BB                     l845:
  1446     00BB  0844               	movf	___lldiv@divisor,w
  1447     00BC  02C8               	subwf	___lldiv@dividend,f
  1448     00BD  0845               	movf	___lldiv@divisor+1,w
  1449     00BE  1C03               	skipc
  1450     00BF  0F45               	incfsz	___lldiv@divisor+1,w
  1451     00C0  02C9               	subwf	___lldiv@dividend+1,f
  1452     00C1  0846               	movf	___lldiv@divisor+2,w
  1453     00C2  1C03               	skipc
  1454     00C3  0F46               	incfsz	___lldiv@divisor+2,w
  1455     00C4  02CA               	subwf	___lldiv@dividend+2,f
  1456     00C5  0847               	movf	___lldiv@divisor+3,w
  1457     00C6  1C03               	skipc
  1458     00C7  0F47               	incfsz	___lldiv@divisor+3,w
  1459     00C8  02CB               	subwf	___lldiv@dividend+3,f
  1460     00C9                     l847:
  1461     00C9  144D               	bsf	___lldiv@quotient,0
  1462     00CA                     l849:
  1463     00CA  3001               	movlw	1
  1464     00CB                     u355:
  1465     00CB  1003               	clrc
  1466     00CC  0CC7               	rrf	___lldiv@divisor+3,f
  1467     00CD  0CC6               	rrf	___lldiv@divisor+2,f
  1468     00CE  0CC5               	rrf	___lldiv@divisor+1,f
  1469     00CF  0CC4               	rrf	___lldiv@divisor,f
  1470     00D0  3EFF               	addlw	-1
  1471     00D1  1D03               	skipz
  1472     00D2  28CB               	goto	u355
  1473     00D3                     l851:
  1474     00D3  3001               	movlw	1
  1475     00D4  02D1               	subwf	___lldiv@counter,f
  1476     00D5  1D03               	btfss	3,2
  1477     00D6  28D8               	goto	u361
  1478     00D7  28D9               	goto	u360
  1479     00D8                     u361:
  1480     00D8  28A0               	goto	l841
  1481     00D9                     u360:
  1482     00D9                     l853:
  1483     00D9  0850               	movf	___lldiv@quotient+3,w
  1484     00DA  00C7               	movwf	?___lldiv+3
  1485     00DB  084F               	movf	___lldiv@quotient+2,w
  1486     00DC  00C6               	movwf	?___lldiv+2
  1487     00DD  084E               	movf	___lldiv@quotient+1,w
  1488     00DE  00C5               	movwf	?___lldiv+1
  1489     00DF  084D               	movf	___lldiv@quotient,w
  1490     00E0  00C4               	movwf	?___lldiv
  1491     00E1                     l183:
  1492     00E1  0008               	return
  1493     00E2                     __end_of___lldiv:
  1494                           
  1495                           	psect	text9
  1496     014D                     __ptext9:	
  1497 ;; *************** function _PWM_Enable *****************
  1498 ;; Defined at:
  1499 ;;		line 39 in file "pwm.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0
  1513 ;;      Params:         0       0
  1514 ;;      Locals:         0       0
  1515 ;;      Temps:          0       1
  1516 ;;      Totals:         0       1
  1517 ;;Total ram usage:        1 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 4
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_PWM_On_20_Percent_Duty_Cycle
  1524 ;;		_PWM_On_50_Percent_Duty_Cycle
  1525 ;;		_PWM_On_100_Percent_Duty_Cycle
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529     014D                     _PWM_Enable:	
  1530                           ;psect for function _PWM_Enable
  1531                           
  1532     014D                     l877:	
  1533                           ;incstack = 0
  1534                           ; Regs used in _PWM_Enable: [wreg+status,2+status,0]
  1535                           
  1536                           
  1537                           ;pwm.c: 40: LATA &=~ (1<<1);
  1538     014D  30FD               	movlw	253
  1539     014E  00C4               	movwf	??_PWM_Enable
  1540     014F  0844               	movf	??_PWM_Enable,w
  1541     0150  0587               	andwf	7,f	;volatile
  1542     0151                     l879:
  1543                           
  1544                           ;pwm.c: 41: TRISA |= (1<<1);
  1545     0151  1486               	bsf	6,1	;volatile
  1546     0152                     l881:
  1547                           
  1548                           ;pwm.c: 42: ANSELA |= (1<<1);
  1549     0152  1488               	bsf	8,1	;volatile
  1550     0153                     l883:
  1551                           
  1552                           ;pwm.c: 43: PWM2CON = (1<<6)|(1<<7);
  1553     0153  30C0               	movlw	192
  1554     0154  0099               	movwf	25	;volatile
  1555     0155                     l885:
  1556                           
  1557                           ;pwm.c: 44: PWM2DCH = 0x7F;
  1558     0155  307F               	movlw	127
  1559     0156  0098               	movwf	24	;volatile
  1560     0157                     l887:
  1561                           
  1562                           ;pwm.c: 45: PWM2DCL = 0xC0;
  1563     0157  30C0               	movlw	192
  1564     0158  0097               	movwf	23	;volatile
  1565     0159                     l889:
  1566                           
  1567                           ;pwm.c: 46: PR2 = 0xFF;
  1568     0159  30FF               	movlw	255
  1569     015A  0092               	movwf	18	;volatile
  1570     015B                     l891:
  1571                           
  1572                           ;pwm.c: 47: TMR2 = 0x00;
  1573     015B  0191               	clrf	17	;volatile
  1574     015C                     l893:
  1575                           
  1576                           ;pwm.c: 48: PIR1 &=~ (1<<1);
  1577     015C  30FD               	movlw	253
  1578     015D  00C4               	movwf	??_PWM_Enable
  1579     015E  0844               	movf	??_PWM_Enable,w
  1580     015F  058C               	andwf	12,f	;volatile
  1581     0160                     l895:
  1582                           
  1583                           ;pwm.c: 49: T2CON = (1<<2);
  1584     0160  3004               	movlw	4
  1585     0161  0093               	movwf	19	;volatile
  1586     0162                     l897:
  1587                           
  1588                           ;pwm.c: 50: TRISA &=~ (1<<1);
  1589     0162  30FD               	movlw	253
  1590     0163  00C4               	movwf	??_PWM_Enable
  1591     0164  0844               	movf	??_PWM_Enable,w
  1592     0165  0586               	andwf	6,f	;volatile
  1593     0166                     l78:
  1594     0166  0008               	return
  1595     0167                     __end_of_PWM_Enable:
  1596                           
  1597                           	psect	text10
  1598     01D0                     __ptext10:	
  1599 ;; *************** function _PWM_Off *****************
  1600 ;; Defined at:
  1601 ;;		line 93 in file "pwm.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0, pclath, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0
  1615 ;;      Params:         0       0
  1616 ;;      Locals:         0       0
  1617 ;;      Temps:          0       0
  1618 ;;      Totals:         0       0
  1619 ;;Total ram usage:        0 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; Hardware stack levels required when called: 5
  1622 ;; This function calls:
  1623 ;;		_PWM_Disable
  1624 ;;		_PWM_Get_Execution_Status
  1625 ;;		_PWM_Set_Execution_Status
  1626 ;; This function is called by:
  1627 ;;		_main
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631     01D0                     _PWM_Off:	
  1632                           ;psect for function _PWM_Off
  1633                           
  1634     01D0                     l941:	
  1635                           ;incstack = 0
  1636                           ; Regs used in _PWM_Off: [wreg+status,2+status,0+pclath+cstack]
  1637                           
  1638                           
  1639                           ;pwm.c: 94: if(PWM_Get_Execution_Status()==0){
  1640     01D0  21F7               	fcall	_PWM_Get_Execution_Status
  1641     01D1  3A00               	xorlw	0
  1642     01D2  1D03               	skipz
  1643     01D3  29D5               	goto	u411
  1644     01D4  29D6               	goto	u410
  1645     01D5                     u411:
  1646     01D5  29D8               	goto	l97
  1647     01D6                     u410:
  1648     01D6                     l943:
  1649                           
  1650                           ;pwm.c: 95: PWM_Disable();
  1651     01D6  2167               	fcall	_PWM_Disable
  1652                           
  1653                           ;pwm.c: 96: PWM_Set_Execution_Status();
  1654     01D7  21F4               	fcall	_PWM_Set_Execution_Status
  1655     01D8                     l97:
  1656     01D8  0008               	return
  1657     01D9                     __end_of_PWM_Off:
  1658                           
  1659                           	psect	text11
  1660     01F4                     __ptext11:	
  1661 ;; *************** function _PWM_Set_Execution_Status *****************
  1662 ;; Defined at:
  1663 ;;		line 16 in file "pwm.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0
  1677 ;;      Params:         0       0
  1678 ;;      Locals:         0       0
  1679 ;;      Temps:          0       0
  1680 ;;      Totals:         0       0
  1681 ;;Total ram usage:        0 bytes
  1682 ;; Hardware stack levels used: 1
  1683 ;; Hardware stack levels required when called: 4
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_PWM_On_20_Percent_Duty_Cycle
  1688 ;;		_PWM_On_50_Percent_Duty_Cycle
  1689 ;;		_PWM_On_100_Percent_Duty_Cycle
  1690 ;;		_PWM_Off
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694     01F4                     _PWM_Set_Execution_Status:	
  1695                           ;psect for function _PWM_Set_Execution_Status
  1696                           
  1697     01F4                     l861:	
  1698                           ;incstack = 0
  1699                           ; Regs used in _PWM_Set_Execution_Status: [wreg]
  1700                           
  1701                           
  1702                           ;pwm.c: 17: executed=1;
  1703     01F4  3001               	movlw	1
  1704     01F5  00DC               	movwf	_executed	;volatile
  1705     01F6                     l66:
  1706     01F6  0008               	return
  1707     01F7                     __end_of_PWM_Set_Execution_Status:
  1708                           
  1709                           	psect	text12
  1710     01F7                     __ptext12:	
  1711 ;; *************** function _PWM_Get_Execution_Status *****************
  1712 ;; Defined at:
  1713 ;;		line 12 in file "pwm.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      unsigned char 
  1720 ;; Registers used:
  1721 ;;		wreg
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0
  1727 ;;      Params:         0       0
  1728 ;;      Locals:         0       0
  1729 ;;      Temps:          0       0
  1730 ;;      Totals:         0       0
  1731 ;;Total ram usage:        0 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 4
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_PWM_On_20_Percent_Duty_Cycle
  1738 ;;		_PWM_On_50_Percent_Duty_Cycle
  1739 ;;		_PWM_On_100_Percent_Duty_Cycle
  1740 ;;		_PWM_Off
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744     01F7                     _PWM_Get_Execution_Status:	
  1745                           ;psect for function _PWM_Get_Execution_Status
  1746                           
  1747     01F7                     l857:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _PWM_Get_Execution_Status: [wreg]
  1750                           
  1751                           
  1752                           ;pwm.c: 13: return executed;
  1753     01F7  085C               	movf	_executed,w	;volatile
  1754     01F8                     l63:
  1755     01F8  0008               	return
  1756     01F9                     __end_of_PWM_Get_Execution_Status:
  1757                           
  1758                           	psect	text13
  1759     0167                     __ptext13:	
  1760 ;; *************** function _PWM_Disable *****************
  1761 ;; Defined at:
  1762 ;;		line 53 in file "pwm.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0
  1776 ;;      Params:         0       0
  1777 ;;      Locals:         0       0
  1778 ;;      Temps:          0       1
  1779 ;;      Totals:         0       1
  1780 ;;Total ram usage:        1 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 4
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_PWM_On_20_Percent_Duty_Cycle
  1787 ;;		_PWM_On_50_Percent_Duty_Cycle
  1788 ;;		_PWM_On_100_Percent_Duty_Cycle
  1789 ;;		_PWM_Off
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793     0167                     _PWM_Disable:	
  1794                           ;psect for function _PWM_Disable
  1795                           
  1796     0167                     l899:	
  1797                           ;incstack = 0
  1798                           ; Regs used in _PWM_Disable: [wreg+status,2+status,0]
  1799                           
  1800                           
  1801                           ;pwm.c: 54: TRISA |= (1<<1);
  1802     0167  1486               	bsf	6,1	;volatile
  1803     0168                     l901:
  1804                           
  1805                           ;pwm.c: 55: PWM2DCH = 0;
  1806     0168  0198               	clrf	24	;volatile
  1807                           
  1808                           ;pwm.c: 56: PWM2DCL = 0;
  1809     0169  0197               	clrf	23	;volatile
  1810                           
  1811                           ;pwm.c: 57: PWM2CON = 0;
  1812     016A  0199               	clrf	25	;volatile
  1813                           
  1814                           ;pwm.c: 58: PR2 = 0;
  1815     016B  0192               	clrf	18	;volatile
  1816                           
  1817                           ;pwm.c: 59: TMR2 = 0;
  1818     016C  0191               	clrf	17	;volatile
  1819                           
  1820                           ;pwm.c: 60: T2CON = 0;
  1821     016D  0193               	clrf	19	;volatile
  1822     016E                     l903:
  1823                           
  1824                           ;pwm.c: 61: LATA &=~ (1<<1);
  1825     016E  30FD               	movlw	253
  1826     016F  00C4               	movwf	??_PWM_Disable
  1827     0170  0844               	movf	??_PWM_Disable,w
  1828     0171  0587               	andwf	7,f	;volatile
  1829     0172                     l905:
  1830                           
  1831                           ;pwm.c: 62: ANSELA &=~ (1<<1);
  1832     0172  30FD               	movlw	253
  1833     0173  00C4               	movwf	??_PWM_Disable
  1834     0174  0844               	movf	??_PWM_Disable,w
  1835     0175  0588               	andwf	8,f	;volatile
  1836     0176                     l907:
  1837                           
  1838                           ;pwm.c: 63: TRISA &=~ (1<<1);
  1839     0176  30FD               	movlw	253
  1840     0177  00C4               	movwf	??_PWM_Disable
  1841     0178  0844               	movf	??_PWM_Disable,w
  1842     0179  0586               	andwf	6,f	;volatile
  1843     017A                     l81:
  1844     017A  0008               	return
  1845     017B                     __end_of_PWM_Disable:
  1846                           
  1847                           	psect	text14
  1848     01C5                     __ptext14:	
  1849 ;; *************** function _Button_Init *****************
  1850 ;; Defined at:
  1851 ;;		line 39 in file "button.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;		None
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, status,2, status,0
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMMON   BANK0
  1865 ;;      Params:         0       0
  1866 ;;      Locals:         0       0
  1867 ;;      Temps:          0       1
  1868 ;;      Totals:         0       1
  1869 ;;Total ram usage:        1 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 4
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_main
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879     01C5                     _Button_Init:	
  1880                           ;psect for function _Button_Init
  1881                           
  1882     01C5                     l919:	
  1883                           ;incstack = 0
  1884                           ; Regs used in _Button_Init: [wreg+status,2+status,0]
  1885                           
  1886                           
  1887                           ;button.c: 40: TRISA =(1<<2);
  1888     01C5  3004               	movlw	4
  1889     01C6  0086               	movwf	6	;volatile
  1890     01C7                     l921:
  1891                           
  1892                           ;button.c: 41: ANSELA=0x00;
  1893     01C7  0188               	clrf	8	;volatile
  1894     01C8                     l923:
  1895                           
  1896                           ;button.c: 42: INTCON = 0;
  1897     01C8  018B               	clrf	11	;volatile
  1898     01C9                     l925:
  1899                           
  1900                           ;button.c: 43: OPTION_REG&=~0xC0;
  1901     01C9  303F               	movlw	63
  1902     01CA  00C4               	movwf	??_Button_Init
  1903     01CB  0844               	movf	??_Button_Init,w
  1904     01CC  058E               	andwf	14,f	;volatile
  1905     01CD                     l927:
  1906                           
  1907                           ;button.c: 44: INTCON=0x90;
  1908     01CD  3090               	movlw	144
  1909     01CE  008B               	movwf	11	;volatile
  1910     01CF                     l130:
  1911     01CF  0008               	return
  1912     01D0                     __end_of_Button_Init:
  1913                           
  1914                           	psect	text15
  1915     01F9                     __ptext15:	
  1916 ;; *************** function _Button_Get_State *****************
  1917 ;; Defined at:
  1918 ;;		line 56 in file "button.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      unsigned char 
  1925 ;; Registers used:
  1926 ;;		wreg
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMMON   BANK0
  1932 ;;      Params:         0       0
  1933 ;;      Locals:         0       0
  1934 ;;      Temps:          0       0
  1935 ;;      Totals:         0       0
  1936 ;;Total ram usage:        0 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 4
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946     01F9                     _Button_Get_State:	
  1947                           ;psect for function _Button_Get_State
  1948                           
  1949     01F9                     l937:	
  1950                           ;incstack = 0
  1951                           ; Regs used in _Button_Get_State: [wreg]
  1952                           
  1953                           
  1954                           ;button.c: 57: return Button_State;
  1955     01F9  085A               	movf	_Button_State,w	;volatile
  1956     01FA                     l140:
  1957     01FA  0008               	return
  1958     01FB                     __end_of_Button_Get_State:
  1959                           
  1960                           	psect	text16
  1961     01E1                     __ptext16:	
  1962 ;; *************** function _ISRs *****************
  1963 ;; Defined at:
  1964 ;;		line 38 in file "main.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0
  1978 ;;      Params:         0       0
  1979 ;;      Locals:         0       0
  1980 ;;      Temps:          0       2
  1981 ;;      Totals:         0       2
  1982 ;;Total ram usage:        2 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 3
  1985 ;; This function calls:
  1986 ;;		_Button_ISR_Executables
  1987 ;; This function is called by:
  1988 ;;		Interrupt level 1
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992     01E1                     _ISRs:	
  1993                           ;psect for function _ISRs
  1994                           
  1995     01E1                     i1l979:
  1996                           
  1997                           ;main.c: 39: Button_ISR_Executables();
  1998     01E1  21E9               	fcall	_Button_ISR_Executables
  1999     01E2                     i1l36:
  2000     01E2  0843               	movf	??_ISRs+1,w
  2001     01E3  008A               	movwf	10
  2002     01E4  0E42               	swapf	??_ISRs,w
  2003     01E5  0083               	movwf	3
  2004     01E6  0EFE               	swapf	btemp,f
  2005     01E7  0E7E               	swapf	btemp,w
  2006     01E8  0009               	retfie
  2007     01E9                     __end_of_ISRs:
  2008                           
  2009                           	psect	intentry
  2010     0004                     __pintentry:	
  2011                           ;incstack = 0
  2012                           ; Regs used in _ISRs: [wreg+status,2+status,0+pclath+cstack]
  2013                           
  2014     0004                     interrupt_function:
  2015     007E                     saved_w	set	btemp
  2016     0004  00FE               	movwf	btemp
  2017     0005  0E03               	swapf	3,w
  2018     0006  00C2               	movwf	??_ISRs
  2019     0007  080A               	movf	10,w
  2020     0008  00C3               	movwf	??_ISRs+1
  2021     0009  29E1               	ljmp	_ISRs
  2022                           
  2023                           	psect	text17
  2024     01E9                     __ptext17:	
  2025 ;; *************** function _Button_ISR_Executables *****************
  2026 ;; Defined at:
  2027 ;;		line 60 in file "button.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;		None
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0, pclath, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0
  2041 ;;      Params:         0       0
  2042 ;;      Locals:         0       0
  2043 ;;      Temps:          0       1
  2044 ;;      Totals:         0       1
  2045 ;;Total ram usage:        1 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 2
  2048 ;; This function calls:
  2049 ;;		_Button_Pressed
  2050 ;; This function is called by:
  2051 ;;		_ISRs
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055     01E9                     _Button_ISR_Executables:	
  2056                           ;psect for function _Button_ISR_Executables
  2057                           
  2058     01E9                     i1l957:	
  2059                           ;incstack = 0
  2060                           ; Regs used in _Button_ISR_Executables: [wreg+status,2+status,0+pclath+cstack]
  2061                           
  2062                           
  2063                           ;button.c: 61: Button_Pressed();
  2064     01E9  21B4               	fcall	_Button_Pressed
  2065     01EA                     i1l959:
  2066                           
  2067                           ;button.c: 62: INTCON&=~0x02;
  2068     01EA  30FD               	movlw	253
  2069     01EB  00C1               	movwf	??_Button_ISR_Executables
  2070     01EC  0841               	movf	??_Button_ISR_Executables,w
  2071     01ED  058B               	andwf	11,f	;volatile
  2072     01EE                     i1l143:
  2073     01EE  0008               	return
  2074     01EF                     __end_of_Button_ISR_Executables:
  2075                           
  2076                           	psect	text18
  2077     01B4                     __ptext18:	
  2078 ;; *************** function _Button_Pressed *****************
  2079 ;; Defined at:
  2080 ;;		line 47 in file "button.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0, pclath, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0
  2094 ;;      Params:         0       0
  2095 ;;      Locals:         0       0
  2096 ;;      Temps:          0       1
  2097 ;;      Totals:         0       1
  2098 ;;Total ram usage:        1 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; Hardware stack levels required when called: 1
  2101 ;; This function calls:
  2102 ;;		_PWM_Clear_Execution_Status
  2103 ;; This function is called by:
  2104 ;;		_Button_ISR_Executables
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108     01B4                     _Button_Pressed:	
  2109                           ;psect for function _Button_Pressed
  2110                           
  2111     01B4                     i1l911:	
  2112                           ;incstack = 0
  2113                           ; Regs used in _Button_Pressed: [wreg+status,2+status,0+pclath+cstack]
  2114                           
  2115                           
  2116                           ;button.c: 48: Button_State++;
  2117     01B4  3001               	movlw	1
  2118     01B5  00C0               	movwf	??_Button_Pressed
  2119     01B6  0840               	movf	??_Button_Pressed,w
  2120     01B7  07DA               	addwf	_Button_State,f	;volatile
  2121     01B8                     i1l913:
  2122                           
  2123                           ;button.c: 49: if(Button_State>2){
  2124     01B8  3003               	movlw	3
  2125     01B9  025A               	subwf	_Button_State,w	;volatile
  2126     01BA  1C03               	skipc
  2127     01BB  29BD               	goto	u39_21
  2128     01BC  29BE               	goto	u39_20
  2129     01BD                     u39_21:
  2130     01BD  29BF               	goto	i1l134
  2131     01BE                     u39_20:
  2132     01BE                     i1l915:
  2133                           
  2134                           ;button.c: 50: Button_State=0;
  2135     01BE  01DA               	clrf	_Button_State	;volatile
  2136     01BF                     i1l134:
  2137     01BF  1905               	btfsc	5,2	;volatile
  2138     01C0  29C2               	goto	u40_21
  2139     01C1  29C3               	goto	u40_20
  2140     01C2                     u40_21:
  2141     01C2  29BF               	goto	i1l134
  2142     01C3                     u40_20:
  2143     01C3                     i1l917:
  2144                           
  2145                           ;button.c: 53: PWM_Clear_Execution_Status();
  2146     01C3  21FB               	fcall	_PWM_Clear_Execution_Status
  2147     01C4                     i1l137:
  2148     01C4  0008               	return
  2149     01C5                     __end_of_Button_Pressed:
  2150                           
  2151                           	psect	text19
  2152     01FB                     __ptext19:	
  2153 ;; *************** function _PWM_Clear_Execution_Status *****************
  2154 ;; Defined at:
  2155 ;;		line 20 in file "pwm.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		status,2
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0
  2169 ;;      Params:         0       0
  2170 ;;      Locals:         0       0
  2171 ;;      Temps:          0       0
  2172 ;;      Totals:         0       0
  2173 ;;Total ram usage:        0 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_Button_Pressed
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182     01FB                     _PWM_Clear_Execution_Status:	
  2183                           ;psect for function _PWM_Clear_Execution_Status
  2184                           
  2185     01FB                     i1l817:	
  2186                           ;incstack = 0
  2187                           ; Regs used in _PWM_Clear_Execution_Status: [status,2]
  2188                           
  2189                           
  2190                           ;pwm.c: 21: executed=0;
  2191     01FB  01DC               	clrf	_executed	;volatile
  2192     01FC                     i1l69:
  2193     01FC  0008               	return
  2194     01FD                     __end_of_PWM_Clear_Execution_Status:
  2195     007E                     btemp	set	126	;btemp
  2196     007E                     wtemp0	set	126
  2197                           
  2198                           	psect	config
  2199                           
  2200                           ;Config register CONFIG @ 0x2007
  2201                           ;	Oscillator Selection bits
  2202                           ;	FOSC = INTOSC, INTOSC oscillator: CLKIN function disabled
  2203                           ;	Brown-out Reset Enable
  2204                           ;	BOREN = OFF, Brown-out Reset disabled
  2205                           ;	Watchdog Timer Enable
  2206                           ;	WDTE = OFF, WDT disabled
  2207                           ;	Power-up Timer Enable bit
  2208                           ;	PWRTE = OFF, PWRT disabled
  2209                           ;	MCLR Pin Function Select bit
  2210                           ;	MCLRE = ON, MCLR pin function is MCLR
  2211                           ;	Code Protection bit
  2212                           ;	CP = OFF, Program memory code protection is disabled
  2213                           ;	Low-Voltage Programming Enable
  2214                           ;	LVP = ON, Low-voltage programming enabled
  2215                           ;	Brown-out Reset Selection bits
  2216                           ;	LPBOR = OFF, BOR disabled
  2217                           ;	Brown-out Reset Voltage Selection
  2218                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2219                           ;	Flash Memory Self-Write Protection
  2220                           ;	WRT = OFF, Write protection off
  2221     2007                     	org	8199
  2222     2007  3DE0               	dw	15840

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     26      29

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRs in COMMON

    None.

Critical Paths under _main in BANK0

    _Sleep_Init->_Sleep_Unused_GPIO_Config
    _PWM_On_50_Percent_Duty_Cycle->_PWM_Set_Duty
    _PWM_On_20_Percent_Duty_Cycle->_PWM_Set_Duty
    _PWM_On_100_Percent_Duty_Cycle->_PWM_Set_Duty
    _PWM_Set_Duty->___lldiv
    _PWM_Off->_PWM_Disable

Critical Paths under _ISRs in BANK0

    _ISRs->_Button_ISR_Executables
    _Button_ISR_Executables->_Button_Pressed

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2772
                   _Button_Get_State
                        _Button_Init
                            _PWM_Off
      _PWM_On_100_Percent_Duty_Cycle
       _PWM_On_20_Percent_Duty_Cycle
       _PWM_On_50_Percent_Duty_Cycle
                         _Sleep_Init
 ---------------------------------------------------------------------------------
 (1) _Sleep_Init                                           0     0      0       0
           _Sleep_Unused_GPIO_Config
 ---------------------------------------------------------------------------------
 (2) _Sleep_Unused_GPIO_Config                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_On_50_Percent_Duty_Cycle                         0     0      0     924
                        _PWM_Disable
                         _PWM_Enable
           _PWM_Get_Execution_Status
                       _PWM_Set_Duty
           _PWM_Set_Execution_Status
 ---------------------------------------------------------------------------------
 (1) _PWM_On_20_Percent_Duty_Cycle                         0     0      0     924
                        _PWM_Disable
                         _PWM_Enable
           _PWM_Get_Execution_Status
                       _PWM_Set_Duty
           _PWM_Set_Execution_Status
 ---------------------------------------------------------------------------------
 (1) _PWM_On_100_Percent_Duty_Cycle                        0     0      0     924
                        _PWM_Disable
                         _PWM_Enable
           _PWM_Get_Execution_Status
                       _PWM_Set_Duty
           _PWM_Set_Execution_Status
 ---------------------------------------------------------------------------------
 (2) _PWM_Set_Duty                                         8     4      4     924
                                             18 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              4 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _PWM_Enable                                           1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_Off                                              0     0      0       0
                        _PWM_Disable
           _PWM_Get_Execution_Status
           _PWM_Set_Execution_Status
 ---------------------------------------------------------------------------------
 (2) _PWM_Set_Execution_Status                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Get_Execution_Status                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Disable                                          1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Button_Init                                          1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Button_Get_State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISRs                                                 2     2      0       0
                                              2 BANK0      2     2      0
             _Button_ISR_Executables
 ---------------------------------------------------------------------------------
 (5) _Button_ISR_Executables                               1     1      0       0
                                              1 BANK0      1     1      0
                     _Button_Pressed
 ---------------------------------------------------------------------------------
 (6) _Button_Pressed                                       1     1      0       0
                                              0 BANK0      1     1      0
         _PWM_Clear_Execution_Status
 ---------------------------------------------------------------------------------
 (7) _PWM_Clear_Execution_Status                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Button_Get_State
   _Button_Init
   _PWM_Off
     _PWM_Disable
     _PWM_Get_Execution_Status
     _PWM_Set_Execution_Status
   _PWM_On_100_Percent_Duty_Cycle
     _PWM_Disable
     _PWM_Enable
     _PWM_Get_Execution_Status
     _PWM_Set_Duty
       ___lldiv
       ___lmul
     _PWM_Set_Execution_Status
   _PWM_On_20_Percent_Duty_Cycle
     _PWM_Disable
     _PWM_Enable
     _PWM_Get_Execution_Status
     _PWM_Set_Duty
     _PWM_Set_Execution_Status
   _PWM_On_50_Percent_Duty_Cycle
     _PWM_Disable
     _PWM_Enable
     _PWM_Get_Execution_Status
     _PWM_Set_Duty
     _PWM_Set_Execution_Status
   _Sleep_Init
     _Sleep_Unused_GPIO_Config

 _ISRs (ROOT)
   _Button_ISR_Executables
     _Button_Pressed
       _PWM_Clear_Execution_Status

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               3E     1A      1D       3       46.8%
ABS                  0      0      1D       4        0.0%
DATA                 0      0      1D       5        0.0%
BITBANK0            3E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jun 21 14:57:46 2023

               _Button_ISR_Executables 01E9                             _PWM_Enable 014D  
                                   l23 014B                                     l63 01F8  
                                   l81 017A                                     l66 01F6  
                                   l75 007B                                     l93 01B3  
                                   l85 01A0                                     l78 0166  
                                   l97 01D8                                     l89 018D  
                          _PWM_Disable 0167                                    l110 01F3  
                                  l113 01E0                                    l130 01CF  
                                  l140 01FA                                    l161 0127  
                                  l183 00E1                                    l901 0168  
                                  l821 00EA                                    l903 016E  
                                  l823 00EE                                    l921 01C7  
                                  l905 0172                                    l841 00A0  
                                  l833 007C                                    l825 0105  
                                  l923 01C8                                    l907 0176  
                                  l851 00D3                                    l843 00A9  
                                  l835 008C                                    l827 010E  
                                  l819 00E2                                    l931 01DB  
                                  l925 01C9                                    l861 01F4  
                                  l941 01D0                                    l845 00BB  
                                  l837 008F                                    l853 00D9  
                                  l829 011F                                    l909 01EF  
                                  l933 01DC                                    l927 01CD  
                                  l919 01C5                                    l943 01D6  
                                  l847 00C9                                    l839 009C  
                                  l871 0042                                    l863 0010  
                                  l951 0181                                    l935 01DF  
                                  l937 01F9                                    l857 01F7  
                                  l881 0152                                    l849 00CA  
                                  l873 0063                                    l865 0021  
                                  l953 01A1                                    l945 018E  
                                  l929 01D9                                    l961 0128  
                                  l891 015B                                    l883 0153  
                                  l875 006F                                    l955 01A7  
                                  l947 0194                                    l971 013B  
                                  l963 012A                                    l893 015C  
                                  l885 0155                                    l877 014D  
                                  l869 0029                                    l949 017B  
                                  l973 0141                                    l965 0130  
                                  l895 0160                                    l887 0157  
                                  l879 0151                                    l975 0143  
                                  l967 0133                                    l897 0162  
                                  l889 0159                                    l977 0149  
                                  l969 0139                                    l899 0167  
                                  u300 008C                                    u301 008B  
                                  u320 00A0                                    u321 009F  
                                  u410 01D6                                    u250 00EE  
                                  u411 01D5                                    u315 0091  
                                  u251 00ED                                    u340 00BB  
                                  u420 0194                                    u341 00BA  
                                  u261 00F7                                    u421 0193  
                                  u262 00FE                                    u430 0181  
                                  _PR2 0012                                    u335 00A2  
                                  u263 0105                                    u431 0180  
                                  u360 00D9                                    u440 01A7  
                                  u361 00D8                                    u345 00B7  
                                  u441 01A6                                    u290 011F  
                                  u370 0021                                    u450 0130  
                                  u355 00CB                                    u291 011E  
                                  u275 0107                                    u371 0020  
                                  u451 012F                                    u460 0139  
                                  u285 010F                                    u373 001D  
                                  u461 0138                                    u470 0141  
                                  u471 0140                                    u480 0149  
                                  u385 0073                                    u481 0148  
                                 _LATA 0007                                   i1l36 01E2  
                                 _PIR1 000C                                   i1l69 01FC  
                                 _TMR2 0011                                   _ISRs 01E1  
                                 _WPUA 0009                                   _main 0128  
                                 btemp 007E                        __end_of_PWM_Off 01D9  
                                 start 000A                           _PWM_Set_Duty 0010  
 __end_of_PWM_On_20_Percent_Duty_Cycle 01A1           _PWM_On_20_Percent_Duty_Cycle 018E  
 __end_of_PWM_On_50_Percent_Duty_Cycle 018E           _PWM_On_50_Percent_Duty_Cycle 017B  
                                ?_ISRs 0040                          ??_Button_Init 0044  
                     _Button_Get_State 01F9                                  ?_main 0040  
                                _ADCON 001F                        __end_of___lldiv 00E2  
                                _T2CON 0013                       PWM_Set_Duty@duty 0052  
                                i1l134 01BF                                  i1l143 01EE  
                                i1l137 01C4                       PWM_Set_Duty@temp 0058  
                                i1l911 01B4                                  i1l817 01FB  
                                i1l913 01B8                                  i1l915 01BE  
                                i1l917 01C3                                  i1l957 01E9  
                                i1l959 01EA                                  i1l979 01E1  
                                u40_20 01C3                                  u40_21 01C2  
                                _PORTA 0005                                  u39_20 01BE  
                                u39_21 01BD                                  _TRISA 0006  
                  ___lmul@multiplicand 0048                                  pclath 000A  
                                status 0003                                  wtemp0 007E  
                         __end_of_ISRs 01E9        ??_PWM_On_100_Percent_Duty_Cycle 0000  
                      __initialization 000B                           __end_of_main 014D  
                          ?_PWM_Enable 0040                                 ??_ISRs 0042  
                               ??_main 0000                    __end_of_Button_Init 01D0  
   __end_of_PWM_Clear_Execution_Status 01FD             _PWM_Clear_Execution_Status 01FB  
                               _ANSELA 0008                              ??_PWM_Off 0000  
           ??_Sleep_Unused_GPIO_Config 0044                                 _INTCON 000B  
                               _FVRCON 001D                             _Sleep_Init 01D9  
                               ___lmul 00E2                              ??___lldiv 004C  
                               saved_w 007E                __end_of__initialization 000E  
              ?_Button_ISR_Executables 0040                         __pcstackCOMMON 0000  
            ?_PWM_Get_Execution_Status 0040  __end_of_PWM_On_100_Percent_Duty_Cycle 01B4  
        _PWM_On_100_Percent_Duty_Cycle 01A1              ?_PWM_Set_Execution_Status 0040  
                         ?_PWM_Disable 0040                            _Button_Init 01C5  
                       _Button_Pressed 01B4                             __pbssBANK0 005A  
             __end_of_Button_Get_State 01FB         __end_of_Button_ISR_Executables 01EF  
                          ?_Sleep_Init 0040                             __pmaintext 0128  
                              ?___lmul 0044                             __pintentry 0004  
               __end_of_Button_Pressed 01C5                         ___lmul@product 004D  
                              _PWM2DCH 0018                                _PWM2DCL 0017  
                              _PWM2CON 0019                                _VREGCON 003E  
                              _PWM_Off 01D0                           ??_PWM_Enable 0044  
                              ___lldiv 007C                        ?_Button_Pressed 0040  
                              __ptext1 01D9                                __ptext2 01EF  
                              __ptext3 017B                                __ptext4 018E  
                              __ptext5 01A1                                __ptext6 0010  
                              __ptext7 00E2                                __ptext8 007C  
                              __ptext9 014D            ?_PWM_Clear_Execution_Status 0040  
                 end_of_initialization 000E                     __end_of_PWM_Enable 0167  
                      ___lldiv@divisor 0044                        ___lldiv@counter 0051  
                           _sleep_mode 005B       __end_of_PWM_Get_Execution_Status 01F9  
     __end_of_PWM_Set_Execution_Status 01F7                         __end_of___lmul 0128  
            ?_Sleep_Unused_GPIO_Config 0040                           ?_Button_Init 0040  
        ?_PWM_On_20_Percent_Duty_Cycle 0040          ?_PWM_On_50_Percent_Duty_Cycle 0040  
                  start_initialization 000B                           _Button_State 005A  
                    ?_Button_Get_State 0040                          ?_PWM_Set_Duty 0052  
                         ??_Sleep_Init 0000                     ??_Button_Get_State 0000  
                             ??___lmul 004C                              ___latbits 0000  
                        __pcstackBANK0 0040                     __end_of_Sleep_Init 01E1  
                             ?_PWM_Off 0040                         ??_PWM_Set_Duty 0056  
             _PWM_Get_Execution_Status 01F7                       ??_Button_Pressed 0040  
             _PWM_Set_Execution_Status 01F4                               ?___lldiv 0044  
       ??_PWM_On_20_Percent_Duty_Cycle 0000         ??_PWM_On_50_Percent_Duty_Cycle 0000  
                    interrupt_function 0004               ??_Button_ISR_Executables 0041  
                    ___lmul@multiplier 0044       __end_of_Sleep_Unused_GPIO_Config 01F4  
                        ??_PWM_Disable 0044                   __end_of_PWM_Set_Duty 007C  
       ?_PWM_On_100_Percent_Duty_Cycle 0040                               __ptext10 01D0  
                             __ptext11 01F4                               __ptext12 01F7  
                             __ptext13 0167                               __ptext14 01C5  
                             __ptext15 01F9                               __ptext16 01E1  
                             __ptext17 01E9                               __ptext18 01B4  
                             __ptext19 01FB                               _executed 005C  
                  __end_of_PWM_Disable 017B             ??_PWM_Get_Execution_Status 0000  
                             intlevel1 0000             ??_PWM_Set_Execution_Status 0000  
                     ___lldiv@dividend 0048               _Sleep_Unused_GPIO_Config 01EF  
                           _OPTION_REG 000E                       ___lldiv@quotient 004D  
         ??_PWM_Clear_Execution_Status 0000  
