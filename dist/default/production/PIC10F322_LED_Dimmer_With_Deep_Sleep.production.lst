

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jun 21 11:07:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	10F322
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Version 2.32
    33                           ; Generated 23/11/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC10F322 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     0019                     	;# 
    95     001A                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0020                     	;# 
   102     0020                     	;# 
   103     0021                     	;# 
   104     0022                     	;# 
   105     0022                     	;# 
   106     0023                     	;# 
   107     0024                     	;# 
   108     0025                     	;# 
   109     0026                     	;# 
   110     0027                     	;# 
   111     0027                     	;# 
   112     0028                     	;# 
   113     0029                     	;# 
   114     002A                     	;# 
   115     002A                     	;# 
   116     002B                     	;# 
   117     002C                     	;# 
   118     002D                     	;# 
   119     002E                     	;# 
   120     0030                     	;# 
   121     0031                     	;# 
   122     0032                     	;# 
   123     0033                     	;# 
   124     0034                     	;# 
   125     0035                     	;# 
   126     0036                     	;# 
   127     0037                     	;# 
   128     0038                     	;# 
   129     0039                     	;# 
   130     003A                     	;# 
   131     003B                     	;# 
   132     003C                     	;# 
   133     003D                     	;# 
   134     003E                     	;# 
   135     003F                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0020                     	;# 
   171     0020                     	;# 
   172     0021                     	;# 
   173     0022                     	;# 
   174     0022                     	;# 
   175     0023                     	;# 
   176     0024                     	;# 
   177     0025                     	;# 
   178     0026                     	;# 
   179     0027                     	;# 
   180     0027                     	;# 
   181     0028                     	;# 
   182     0029                     	;# 
   183     002A                     	;# 
   184     002A                     	;# 
   185     002B                     	;# 
   186     002C                     	;# 
   187     002D                     	;# 
   188     002E                     	;# 
   189     0030                     	;# 
   190     0031                     	;# 
   191     0032                     	;# 
   192     0033                     	;# 
   193     0034                     	;# 
   194     0035                     	;# 
   195     0036                     	;# 
   196     0037                     	;# 
   197     0038                     	;# 
   198     0039                     	;# 
   199     003A                     	;# 
   200     003B                     	;# 
   201     003C                     	;# 
   202     003D                     	;# 
   203     003E                     	;# 
   204     003F                     	;# 
   205     0000                     	;# 
   206     0001                     	;# 
   207     0002                     	;# 
   208     0003                     	;# 
   209     0004                     	;# 
   210     0005                     	;# 
   211     0006                     	;# 
   212     0007                     	;# 
   213     0008                     	;# 
   214     0009                     	;# 
   215     000A                     	;# 
   216     000B                     	;# 
   217     000C                     	;# 
   218     000D                     	;# 
   219     000E                     	;# 
   220     000F                     	;# 
   221     0010                     	;# 
   222     0011                     	;# 
   223     0012                     	;# 
   224     0013                     	;# 
   225     0014                     	;# 
   226     0015                     	;# 
   227     0016                     	;# 
   228     0016                     	;# 
   229     0017                     	;# 
   230     0018                     	;# 
   231     0019                     	;# 
   232     0019                     	;# 
   233     001A                     	;# 
   234     001B                     	;# 
   235     001C                     	;# 
   236     001D                     	;# 
   237     001E                     	;# 
   238     001F                     	;# 
   239     0020                     	;# 
   240     0020                     	;# 
   241     0021                     	;# 
   242     0022                     	;# 
   243     0022                     	;# 
   244     0023                     	;# 
   245     0024                     	;# 
   246     0025                     	;# 
   247     0026                     	;# 
   248     0027                     	;# 
   249     0027                     	;# 
   250     0028                     	;# 
   251     0029                     	;# 
   252     002A                     	;# 
   253     002A                     	;# 
   254     002B                     	;# 
   255     002C                     	;# 
   256     002D                     	;# 
   257     002E                     	;# 
   258     0030                     	;# 
   259     0031                     	;# 
   260     0032                     	;# 
   261     0033                     	;# 
   262     0034                     	;# 
   263     0035                     	;# 
   264     0036                     	;# 
   265     0037                     	;# 
   266     0038                     	;# 
   267     0039                     	;# 
   268     003A                     	;# 
   269     003B                     	;# 
   270     003C                     	;# 
   271     003D                     	;# 
   272     003E                     	;# 
   273     003F                     	;# 
   274     0000                     	;# 
   275     0001                     	;# 
   276     0002                     	;# 
   277     0003                     	;# 
   278     0004                     	;# 
   279     0005                     	;# 
   280     0006                     	;# 
   281     0007                     	;# 
   282     0008                     	;# 
   283     0009                     	;# 
   284     000A                     	;# 
   285     000B                     	;# 
   286     000C                     	;# 
   287     000D                     	;# 
   288     000E                     	;# 
   289     000F                     	;# 
   290     0010                     	;# 
   291     0011                     	;# 
   292     0012                     	;# 
   293     0013                     	;# 
   294     0014                     	;# 
   295     0015                     	;# 
   296     0016                     	;# 
   297     0016                     	;# 
   298     0017                     	;# 
   299     0018                     	;# 
   300     0019                     	;# 
   301     0019                     	;# 
   302     001A                     	;# 
   303     001B                     	;# 
   304     001C                     	;# 
   305     001D                     	;# 
   306     001E                     	;# 
   307     001F                     	;# 
   308     0020                     	;# 
   309     0020                     	;# 
   310     0021                     	;# 
   311     0022                     	;# 
   312     0022                     	;# 
   313     0023                     	;# 
   314     0024                     	;# 
   315     0025                     	;# 
   316     0026                     	;# 
   317     0027                     	;# 
   318     0027                     	;# 
   319     0028                     	;# 
   320     0029                     	;# 
   321     002A                     	;# 
   322     002A                     	;# 
   323     002B                     	;# 
   324     002C                     	;# 
   325     002D                     	;# 
   326     002E                     	;# 
   327     0030                     	;# 
   328     0031                     	;# 
   329     0032                     	;# 
   330     0033                     	;# 
   331     0034                     	;# 
   332     0035                     	;# 
   333     0036                     	;# 
   334     0037                     	;# 
   335     0038                     	;# 
   336     0039                     	;# 
   337     003A                     	;# 
   338     003B                     	;# 
   339     003C                     	;# 
   340     003D                     	;# 
   341     003E                     	;# 
   342     003F                     	;# 
   343     000E                     _OPTION_REG	set	14
   344     003E                     _VREGCON	set	62
   345     001D                     _FVRCON	set	29
   346     001F                     _ADCON	set	31
   347     0009                     _WPUA	set	9
   348     0013                     _T2CON	set	19
   349     000C                     _PIR1	set	12
   350     0011                     _TMR2	set	17
   351     0012                     _PR2	set	18
   352     0019                     _PWM2CON	set	25
   353     0008                     _ANSELA	set	8
   354     0006                     _TRISA	set	6
   355     0007                     _LATA	set	7
   356     0017                     _PWM2DCL	set	23
   357     0018                     _PWM2DCH	set	24
   358     000B                     _INTCON	set	11
   359                           
   360                           	psect	cinit
   361     000B                     start_initialization:	
   362                           ; #config settings
   363                           
   364     000B                     __initialization:
   365                           
   366                           ; Clear objects allocated to BANK0
   367     000B  01DB               	clrf	__pbssBANK0& (0+127)
   368     000C  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   369     000D                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372     000D                     __end_of__initialization:
   373     000D  0183               	clrf	3
   374     000E  2927               	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	bssBANK0
   377     005B                     __pbssBANK0:
   378     005B                     _Button_State:
   379     005B                     	ds	1
   380     005C                     _executed:
   381     005C                     	ds	1
   382                           
   383                           	psect	cstackCOMMON
   384     0000                     __pcstackCOMMON:
   385     0000                     ??_Sleep_Init:
   386     0000                     ??_Button_Get_State:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0000                     ??_PWM_Off:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0000                     ??_PWM_On_20_Percent_Duty_Cycle:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0000                     ??_PWM_On_50_Percent_Duty_Cycle:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0000                     ??_PWM_On_100_Percent_Duty_Cycle:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0000                     ??_Button_ISR_Executables:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0000                     ??_main:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0000                     ??_PWM_Get_Execution_Status:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0000                     ??_PWM_Set_Execution_Status:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0000                     ??_PWM_Clear_Execution_Status:	
   414                           ; 1 bytes @ 0x0
   415                           
   416                           
   417                           	psect	cstackBANK0
   418     0040                     __pcstackBANK0:	
   419                           ; 1 bytes @ 0x0
   420                           
   421     0040                     ?_Button_Init:
   422     0040                     ?_Sleep_Init:	
   423                           ; 1 bytes @ 0x0
   424                           
   425     0040                     ?_Button_Get_State:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0040                     ?_PWM_Off:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0040                     ?_PWM_On_20_Percent_Duty_Cycle:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0040                     ?_PWM_On_50_Percent_Duty_Cycle:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0040                     ?_PWM_On_100_Percent_Duty_Cycle:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0040                     ?_Button_ISR_Executables:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0040                     ?_main:	
   444                           ; 1 bytes @ 0x0
   445                           
   446     0040                     ?_ISRs:	
   447                           ; 1 bytes @ 0x0
   448                           
   449     0040                     ?_PWM_Get_Execution_Status:	
   450                           ; 1 bytes @ 0x0
   451                           
   452     0040                     ?_PWM_Set_Execution_Status:	
   453                           ; 1 bytes @ 0x0
   454                           
   455     0040                     ?_PWM_Clear_Execution_Status:	
   456                           ; 1 bytes @ 0x0
   457                           
   458     0040                     ?_PWM_Enable:	
   459                           ; 1 bytes @ 0x0
   460                           
   461     0040                     ?_PWM_Disable:	
   462                           ; 1 bytes @ 0x0
   463                           
   464     0040                     ?_Sleep_Unused_GPIO_Config:	
   465                           ; 1 bytes @ 0x0
   466                           
   467     0040                     ?_Button_Pressed:	
   468                           ; 1 bytes @ 0x0
   469                           
   470     0040                     ??_Button_Pressed:	
   471                           ; 1 bytes @ 0x0
   472                           
   473                           
   474                           ; 1 bytes @ 0x0
   475     0040                     	ds	3
   476     0043                     ??_ISRs:
   477                           
   478                           ; 1 bytes @ 0x3
   479     0043                     	ds	2
   480     0045                     ??_Button_Init:
   481     0045                     ??_PWM_Enable:	
   482                           ; 1 bytes @ 0x5
   483                           
   484     0045                     ??_PWM_Disable:	
   485                           ; 1 bytes @ 0x5
   486                           
   487     0045                     ??_Sleep_Unused_GPIO_Config:	
   488                           ; 1 bytes @ 0x5
   489                           
   490     0045                     ?___lmul:	
   491                           ; 1 bytes @ 0x5
   492                           
   493     0045                     ?___lldiv:	
   494                           ; 4 bytes @ 0x5
   495                           
   496     0045                     ___lmul@multiplier:	
   497                           ; 4 bytes @ 0x5
   498                           
   499     0045                     ___lldiv@divisor:	
   500                           ; 4 bytes @ 0x5
   501                           
   502                           
   503                           ; 4 bytes @ 0x5
   504     0045                     	ds	4
   505     0049                     ___lmul@multiplicand:
   506     0049                     ___lldiv@dividend:	
   507                           ; 4 bytes @ 0x9
   508                           
   509                           
   510                           ; 4 bytes @ 0x9
   511     0049                     	ds	4
   512     004D                     ??___lmul:
   513     004D                     ??___lldiv:	
   514                           ; 1 bytes @ 0xD
   515                           
   516                           
   517                           ; 1 bytes @ 0xD
   518     004D                     	ds	1
   519     004E                     ___lmul@product:
   520     004E                     ___lldiv@quotient:	
   521                           ; 4 bytes @ 0xE
   522                           
   523                           
   524                           ; 4 bytes @ 0xE
   525     004E                     	ds	4
   526     0052                     ___lldiv@counter:
   527                           
   528                           ; 1 bytes @ 0x12
   529     0052                     	ds	1
   530     0053                     ?_PWM_Set_Duty:
   531     0053                     PWM_Set_Duty@duty:	
   532                           ; 1 bytes @ 0x13
   533                           
   534                           
   535                           ; 4 bytes @ 0x13
   536     0053                     	ds	4
   537     0057                     ??_PWM_Set_Duty:
   538                           
   539                           ; 1 bytes @ 0x17
   540     0057                     	ds	2
   541     0059                     PWM_Set_Duty@temp:
   542                           
   543                           ; 2 bytes @ 0x19
   544     0059                     	ds	2
   545                           
   546                           	psect	maintext
   547     0127                     __pmaintext:	
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 18 in file "main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, pclath, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : B00/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0
   567 ;;      Params:         0       0
   568 ;;      Locals:         0       0
   569 ;;      Temps:          0       0
   570 ;;      Totals:         0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels required when called: 7
   573 ;; This function calls:
   574 ;;		_Button_Get_State
   575 ;;		_Button_Init
   576 ;;		_PWM_Off
   577 ;;		_PWM_On_100_Percent_Duty_Cycle
   578 ;;		_PWM_On_20_Percent_Duty_Cycle
   579 ;;		_PWM_On_50_Percent_Duty_Cycle
   580 ;;		_Sleep_Init
   581 ;; This function is called by:
   582 ;;		Startup code after reset
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586     0127                     _main:	
   587                           ;psect for function _main
   588                           
   589     0127                     l962:	
   590                           ;incstack = 0
   591                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   592                           
   593                           
   594                           ;main.c: 20: Button_Init();
   595     0127  21C9               	fcall	_Button_Init
   596                           
   597                           ;main.c: 21: Sleep_Init();
   598     0128  21DD               	fcall	_Sleep_Init
   599     0129                     l964:
   600                           
   601                           ;main.c: 25: if(Button_Get_State() == 0){
   602     0129  21FC               	fcall	_Button_Get_State
   603     012A  3A00               	xorlw	0
   604     012B  1D03               	skipz
   605     012C  292E               	goto	u431
   606     012D  292F               	goto	u430
   607     012E                     u431:
   608     012E  2932               	goto	l968
   609     012F                     u430:
   610     012F                     l966:
   611                           
   612                           ;main.c: 26: PWM_Off();
   613     012F  21D4               	fcall	_PWM_Off
   614     0130  0063               	sleep	;# 
   615                           
   616                           ;main.c: 28: }else if( Button_Get_State() == 1){
   617     0131  2929               	goto	l964
   618     0132                     l968:
   619     0132  21FC               	fcall	_Button_Get_State
   620     0133  3A01               	xorlw	1
   621     0134  1D03               	skipz
   622     0135  2937               	goto	u441
   623     0136  2938               	goto	u440
   624     0137                     u441:
   625     0137  293A               	goto	l972
   626     0138                     u440:
   627     0138                     l970:
   628                           
   629                           ;main.c: 29: PWM_On_20_Percent_Duty_Cycle();
   630     0138  21A5               	fcall	_PWM_On_20_Percent_Duty_Cycle
   631                           
   632                           ;main.c: 30: }else if( Button_Get_State() == 2){
   633     0139  2929               	goto	l964
   634     013A                     l972:
   635     013A  21FC               	fcall	_Button_Get_State
   636     013B  3A02               	xorlw	2
   637     013C  1D03               	skipz
   638     013D  293F               	goto	u451
   639     013E  2940               	goto	u450
   640     013F                     u451:
   641     013F  2942               	goto	l976
   642     0140                     u450:
   643     0140                     l974:
   644                           
   645                           ;main.c: 31: PWM_On_50_Percent_Duty_Cycle();
   646     0140  2193               	fcall	_PWM_On_50_Percent_Duty_Cycle
   647                           
   648                           ;main.c: 32: }else if( Button_Get_State() == 3){
   649     0141  2929               	goto	l964
   650     0142                     l976:
   651     0142  21FC               	fcall	_Button_Get_State
   652     0143  3A03               	xorlw	3
   653     0144  1D03               	skipz
   654     0145  2947               	goto	u461
   655     0146  2948               	goto	u460
   656     0147                     u461:
   657     0147  294A               	goto	l23
   658     0148                     u460:
   659     0148                     l978:
   660                           
   661                           ;main.c: 33: PWM_On_100_Percent_Duty_Cycle();
   662     0148  21B7               	fcall	_PWM_On_100_Percent_Duty_Cycle
   663     0149  2929               	goto	l964
   664     014A                     l23:
   665     014A  2929               	goto	l964
   666     014B  280A               	ljmp	start
   667     014C                     __end_of_main:
   668                           
   669                           	psect	text1
   670     01DD                     __ptext1:	
   671 ;; *************** function _Sleep_Init *****************
   672 ;; Defined at:
   673 ;;		line 78 in file "sleep.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0
   687 ;;      Params:         0       0
   688 ;;      Locals:         0       0
   689 ;;      Temps:          0       0
   690 ;;      Totals:         0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; Hardware stack levels required when called: 5
   694 ;; This function calls:
   695 ;;		_Sleep_Unused_GPIO_Config
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701     01DD                     _Sleep_Init:	
   702                           ;psect for function _Sleep_Init
   703                           
   704     01DD                     l930:	
   705                           ;incstack = 0
   706                           ; Regs used in _Sleep_Init: [wreg+status,2+status,0+pclath+cstack]
   707                           
   708                           
   709                           ;sleep.c: 79: WPUA = (1<<3);
   710     01DD  3008               	movlw	8
   711     01DE  0089               	movwf	9	;volatile
   712     01DF                     l932:
   713                           
   714                           ;sleep.c: 83: ADCON = 0x00;
   715     01DF  019F               	clrf	31	;volatile
   716     01E0                     l934:
   717                           
   718                           ;sleep.c: 84: FVRCON = 0x00;
   719     01E0  019D               	clrf	29	;volatile
   720                           
   721                           ;sleep.c: 85: VREGCON = 0x02;
   722     01E1  3002               	movlw	2
   723     01E2  00BE               	movwf	62	;volatile
   724     01E3                     l936:
   725                           
   726                           ;sleep.c: 86: Sleep_Unused_GPIO_Config();
   727     01E3  21ED               	fcall	_Sleep_Unused_GPIO_Config
   728     01E4                     l113:
   729     01E4  0008               	return
   730     01E5                     __end_of_Sleep_Init:
   731                           
   732                           	psect	text2
   733     01ED                     __ptext2:	
   734 ;; *************** function _Sleep_Unused_GPIO_Config *****************
   735 ;; Defined at:
   736 ;;		line 72 in file "sleep.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0
   750 ;;      Params:         0       0
   751 ;;      Locals:         0       0
   752 ;;      Temps:          0       1
   753 ;;      Totals:         0       1
   754 ;;Total ram usage:        1 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; Hardware stack levels required when called: 4
   757 ;; This function calls:
   758 ;;		Nothing
   759 ;; This function is called by:
   760 ;;		_Sleep_Init
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764     01ED                     _Sleep_Unused_GPIO_Config:	
   765                           ;psect for function _Sleep_Unused_GPIO_Config
   766                           
   767     01ED                     l908:	
   768                           ;incstack = 0
   769                           ; Regs used in _Sleep_Unused_GPIO_Config: [wreg+status,2+status,0]
   770                           
   771                           
   772                           ;sleep.c: 75: LATA &=~ 1;
   773     01ED  30FE               	movlw	254
   774     01EE  00C5               	movwf	??_Sleep_Unused_GPIO_Config
   775     01EF  0845               	movf	??_Sleep_Unused_GPIO_Config,w
   776     01F0  0587               	andwf	7,f	;volatile
   777     01F1                     l110:
   778     01F1  0008               	return
   779     01F2                     __end_of_Sleep_Unused_GPIO_Config:
   780                           
   781                           	psect	text3
   782     0193                     __ptext3:	
   783 ;; *************** function _PWM_On_50_Percent_Duty_Cycle *****************
   784 ;; Defined at:
   785 ;;		line 75 in file "pwm.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0, pclath, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0
   799 ;;      Params:         0       0
   800 ;;      Locals:         0       0
   801 ;;      Temps:          0       0
   802 ;;      Totals:         0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used: 1
   805 ;; Hardware stack levels required when called: 6
   806 ;; This function calls:
   807 ;;		_PWM_Enable
   808 ;;		_PWM_Get_Execution_Status
   809 ;;		_PWM_Set_Duty
   810 ;;		_PWM_Set_Execution_Status
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816     0193                     _PWM_On_50_Percent_Duty_Cycle:	
   817                           ;psect for function _PWM_On_50_Percent_Duty_Cycle
   818                           
   819     0193                     l950:	
   820                           ;incstack = 0
   821                           ; Regs used in _PWM_On_50_Percent_Duty_Cycle: [wreg+status,2+status,0+pclath+cstack]
   822                           
   823                           
   824                           ;pwm.c: 76: if(PWM_Get_Execution_Status()==0){
   825     0193  21FA               	fcall	_PWM_Get_Execution_Status
   826     0194  3A00               	xorlw	0
   827     0195  1D03               	skipz
   828     0196  2998               	goto	u411
   829     0197  2999               	goto	u410
   830     0198                     u411:
   831     0198  29A4               	goto	l89
   832     0199                     u410:
   833     0199                     l952:
   834                           
   835                           ;pwm.c: 77: PWM_Enable();
   836     0199  214C               	fcall	_PWM_Enable
   837                           
   838                           ;pwm.c: 78: PWM_Set_Duty(50);
   839     019A  3000               	movlw	0
   840     019B  00D6               	movwf	PWM_Set_Duty@duty+3
   841     019C  3000               	movlw	0
   842     019D  00D5               	movwf	PWM_Set_Duty@duty+2
   843     019E  3000               	movlw	0
   844     019F  00D4               	movwf	PWM_Set_Duty@duty+1
   845     01A0  3032               	movlw	50
   846     01A1  00D3               	movwf	PWM_Set_Duty@duty
   847     01A2  200F               	fcall	_PWM_Set_Duty
   848                           
   849                           ;pwm.c: 79: PWM_Set_Execution_Status();
   850     01A3  21F2               	fcall	_PWM_Set_Execution_Status
   851     01A4                     l89:
   852     01A4  0008               	return
   853     01A5                     __end_of_PWM_On_50_Percent_Duty_Cycle:
   854                           
   855                           	psect	text4
   856     01A5                     __ptext4:	
   857 ;; *************** function _PWM_On_20_Percent_Duty_Cycle *****************
   858 ;; Defined at:
   859 ;;		line 67 in file "pwm.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0, pclath, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0
   873 ;;      Params:         0       0
   874 ;;      Locals:         0       0
   875 ;;      Temps:          0       0
   876 ;;      Totals:         0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; Hardware stack levels required when called: 6
   880 ;; This function calls:
   881 ;;		_PWM_Enable
   882 ;;		_PWM_Get_Execution_Status
   883 ;;		_PWM_Set_Duty
   884 ;;		_PWM_Set_Execution_Status
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890     01A5                     _PWM_On_20_Percent_Duty_Cycle:	
   891                           ;psect for function _PWM_On_20_Percent_Duty_Cycle
   892                           
   893     01A5                     l946:	
   894                           ;incstack = 0
   895                           ; Regs used in _PWM_On_20_Percent_Duty_Cycle: [wreg+status,2+status,0+pclath+cstack]
   896                           
   897                           
   898                           ;pwm.c: 68: if(PWM_Get_Execution_Status()==0){
   899     01A5  21FA               	fcall	_PWM_Get_Execution_Status
   900     01A6  3A00               	xorlw	0
   901     01A7  1D03               	skipz
   902     01A8  29AA               	goto	u401
   903     01A9  29AB               	goto	u400
   904     01AA                     u401:
   905     01AA  29B6               	goto	l85
   906     01AB                     u400:
   907     01AB                     l948:
   908                           
   909                           ;pwm.c: 69: PWM_Enable();
   910     01AB  214C               	fcall	_PWM_Enable
   911                           
   912                           ;pwm.c: 70: PWM_Set_Duty(20);
   913     01AC  3000               	movlw	0
   914     01AD  00D6               	movwf	PWM_Set_Duty@duty+3
   915     01AE  3000               	movlw	0
   916     01AF  00D5               	movwf	PWM_Set_Duty@duty+2
   917     01B0  3000               	movlw	0
   918     01B1  00D4               	movwf	PWM_Set_Duty@duty+1
   919     01B2  3014               	movlw	20
   920     01B3  00D3               	movwf	PWM_Set_Duty@duty
   921     01B4  200F               	fcall	_PWM_Set_Duty
   922                           
   923                           ;pwm.c: 71: PWM_Set_Execution_Status();
   924     01B5  21F2               	fcall	_PWM_Set_Execution_Status
   925     01B6                     l85:
   926     01B6  0008               	return
   927     01B7                     __end_of_PWM_On_20_Percent_Duty_Cycle:
   928                           
   929                           	psect	text5
   930     01B7                     __ptext5:	
   931 ;; *************** function _PWM_On_100_Percent_Duty_Cycle *****************
   932 ;; Defined at:
   933 ;;		line 83 in file "pwm.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0, pclath, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0
   947 ;;      Params:         0       0
   948 ;;      Locals:         0       0
   949 ;;      Temps:          0       0
   950 ;;      Totals:         0       0
   951 ;;Total ram usage:        0 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 6
   954 ;; This function calls:
   955 ;;		_PWM_Enable
   956 ;;		_PWM_Get_Execution_Status
   957 ;;		_PWM_Set_Duty
   958 ;;		_PWM_Set_Execution_Status
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964     01B7                     _PWM_On_100_Percent_Duty_Cycle:	
   965                           ;psect for function _PWM_On_100_Percent_Duty_Cycle
   966                           
   967     01B7                     l954:	
   968                           ;incstack = 0
   969                           ; Regs used in _PWM_On_100_Percent_Duty_Cycle: [wreg+status,2+status,0+pclath+cstack]
   970                           
   971                           
   972                           ;pwm.c: 84: if(PWM_Get_Execution_Status()==0){
   973     01B7  21FA               	fcall	_PWM_Get_Execution_Status
   974     01B8  3A00               	xorlw	0
   975     01B9  1D03               	skipz
   976     01BA  29BC               	goto	u421
   977     01BB  29BD               	goto	u420
   978     01BC                     u421:
   979     01BC  29C8               	goto	l93
   980     01BD                     u420:
   981     01BD                     l956:
   982                           
   983                           ;pwm.c: 85: PWM_Enable();
   984     01BD  214C               	fcall	_PWM_Enable
   985                           
   986                           ;pwm.c: 86: PWM_Set_Duty(99);
   987     01BE  3000               	movlw	0
   988     01BF  00D6               	movwf	PWM_Set_Duty@duty+3
   989     01C0  3000               	movlw	0
   990     01C1  00D5               	movwf	PWM_Set_Duty@duty+2
   991     01C2  3000               	movlw	0
   992     01C3  00D4               	movwf	PWM_Set_Duty@duty+1
   993     01C4  3063               	movlw	99
   994     01C5  00D3               	movwf	PWM_Set_Duty@duty
   995     01C6  200F               	fcall	_PWM_Set_Duty
   996                           
   997                           ;pwm.c: 87: PWM_Set_Execution_Status();
   998     01C7  21F2               	fcall	_PWM_Set_Execution_Status
   999     01C8                     l93:
  1000     01C8  0008               	return
  1001     01C9                     __end_of_PWM_On_100_Percent_Duty_Cycle:
  1002                           
  1003                           	psect	text6
  1004     000F                     __ptext6:	
  1005 ;; *************** function _PWM_Set_Duty *****************
  1006 ;; Defined at:
  1007 ;;		line 25 in file "pwm.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  duty            4   19[BANK0 ] unsigned long 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  temp            2   25[BANK0 ] unsigned int 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2, status,0, pclath, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMMON   BANK0
  1021 ;;      Params:         0       4
  1022 ;;      Locals:         0       2
  1023 ;;      Temps:          0       2
  1024 ;;      Totals:         0       8
  1025 ;;Total ram usage:        8 bytes
  1026 ;; Hardware stack levels used: 1
  1027 ;; Hardware stack levels required when called: 5
  1028 ;; This function calls:
  1029 ;;		___lldiv
  1030 ;;		___lmul
  1031 ;; This function is called by:
  1032 ;;		_PWM_On_20_Percent_Duty_Cycle
  1033 ;;		_PWM_On_50_Percent_Duty_Cycle
  1034 ;;		_PWM_On_100_Percent_Duty_Cycle
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038     000F                     _PWM_Set_Duty:	
  1039                           ;psect for function _PWM_Set_Duty
  1040                           
  1041     000F                     l862:	
  1042                           ;incstack = 0
  1043                           ; Regs used in _PWM_Set_Duty: [wreg+status,2+status,0+pclath+cstack]
  1044                           
  1045                           
  1046                           ;pwm.c: 26: if(duty>100){
  1047     000F  0856               	movf	PWM_Set_Duty@duty+3,w
  1048     0010  1D03               	btfss	3,2
  1049     0011  2820               	goto	u360
  1050     0012  0855               	movf	PWM_Set_Duty@duty+2,w
  1051     0013  1D03               	btfss	3,2
  1052     0014  2820               	goto	u360
  1053     0015  0854               	movf	PWM_Set_Duty@duty+1,w
  1054     0016  1D03               	btfss	3,2
  1055     0017  2820               	goto	u360
  1056     0018  3065               	movlw	101
  1057     0019  0253               	subwf	PWM_Set_Duty@duty,w
  1058     001A  1D03               	skipz
  1059     001B  281C               	goto	u363
  1060     001C                     u363:
  1061     001C  1C03               	btfss	3,0
  1062     001D  281F               	goto	u361
  1063     001E  2820               	goto	u360
  1064     001F                     u361:
  1065     001F  2828               	goto	l868
  1066     0020                     u360:
  1067     0020                     l864:
  1068                           
  1069                           ;pwm.c: 27: duty=100;
  1070     0020  3000               	movlw	0
  1071     0021  00D6               	movwf	PWM_Set_Duty@duty+3
  1072     0022  3000               	movlw	0
  1073     0023  00D5               	movwf	PWM_Set_Duty@duty+2
  1074     0024  3000               	movlw	0
  1075     0025  00D4               	movwf	PWM_Set_Duty@duty+1
  1076     0026  3064               	movlw	100
  1077     0027  00D3               	movwf	PWM_Set_Duty@duty
  1078     0028                     l868:	
  1079                           ;pwm.c: 28: }else if(duty<0){
  1080                           
  1081                           
  1082                           ;pwm.c: 30: };pwm.c: 31: duty*=1023;
  1083     0028  3000               	movlw	0
  1084     0029  00C8               	movwf	___lmul@multiplier+3
  1085     002A  3000               	movlw	0
  1086     002B  00C7               	movwf	___lmul@multiplier+2
  1087     002C  3003               	movlw	3
  1088     002D  00C6               	movwf	___lmul@multiplier+1
  1089     002E  30FF               	movlw	255
  1090     002F  00C5               	movwf	___lmul@multiplier
  1091     0030  0856               	movf	PWM_Set_Duty@duty+3,w
  1092     0031  00CC               	movwf	___lmul@multiplicand+3
  1093     0032  0855               	movf	PWM_Set_Duty@duty+2,w
  1094     0033  00CB               	movwf	___lmul@multiplicand+2
  1095     0034  0854               	movf	PWM_Set_Duty@duty+1,w
  1096     0035  00CA               	movwf	___lmul@multiplicand+1
  1097     0036  0853               	movf	PWM_Set_Duty@duty,w
  1098     0037  00C9               	movwf	___lmul@multiplicand
  1099     0038  20E1               	fcall	___lmul
  1100     0039  0848               	movf	?___lmul+3,w
  1101     003A  00D6               	movwf	PWM_Set_Duty@duty+3
  1102     003B  0847               	movf	?___lmul+2,w
  1103     003C  00D5               	movwf	PWM_Set_Duty@duty+2
  1104     003D  0846               	movf	?___lmul+1,w
  1105     003E  00D4               	movwf	PWM_Set_Duty@duty+1
  1106     003F  0845               	movf	?___lmul,w
  1107     0040  00D3               	movwf	PWM_Set_Duty@duty
  1108     0041                     l870:
  1109                           
  1110                           ;pwm.c: 32: duty/=100;
  1111     0041  3000               	movlw	0
  1112     0042  00C8               	movwf	___lldiv@divisor+3
  1113     0043  3000               	movlw	0
  1114     0044  00C7               	movwf	___lldiv@divisor+2
  1115     0045  3000               	movlw	0
  1116     0046  00C6               	movwf	___lldiv@divisor+1
  1117     0047  3064               	movlw	100
  1118     0048  00C5               	movwf	___lldiv@divisor
  1119     0049  0856               	movf	PWM_Set_Duty@duty+3,w
  1120     004A  00CC               	movwf	___lldiv@dividend+3
  1121     004B  0855               	movf	PWM_Set_Duty@duty+2,w
  1122     004C  00CB               	movwf	___lldiv@dividend+2
  1123     004D  0854               	movf	PWM_Set_Duty@duty+1,w
  1124     004E  00CA               	movwf	___lldiv@dividend+1
  1125     004F  0853               	movf	PWM_Set_Duty@duty,w
  1126     0050  00C9               	movwf	___lldiv@dividend
  1127     0051  207B               	fcall	___lldiv
  1128     0052  0848               	movf	?___lldiv+3,w
  1129     0053  00D6               	movwf	PWM_Set_Duty@duty+3
  1130     0054  0847               	movf	?___lldiv+2,w
  1131     0055  00D5               	movwf	PWM_Set_Duty@duty+2
  1132     0056  0846               	movf	?___lldiv+1,w
  1133     0057  00D4               	movwf	PWM_Set_Duty@duty+1
  1134     0058  0845               	movf	?___lldiv,w
  1135     0059  00D3               	movwf	PWM_Set_Duty@duty
  1136                           
  1137                           ;pwm.c: 34: uint16_t temp=duty;
  1138     005A  0854               	movf	PWM_Set_Duty@duty+1,w
  1139     005B  00DA               	movwf	PWM_Set_Duty@temp+1
  1140     005C  0853               	movf	PWM_Set_Duty@duty,w
  1141     005D  00D9               	movwf	PWM_Set_Duty@temp
  1142                           
  1143                           ;pwm.c: 35: temp&=0x3FF;
  1144     005E  30FF               	movlw	255
  1145     005F  05D9               	andwf	PWM_Set_Duty@temp,f
  1146     0060  3003               	movlw	3
  1147     0061  05DA               	andwf	PWM_Set_Duty@temp+1,f
  1148     0062                     l872:
  1149                           
  1150                           ;pwm.c: 36: PWM2DCH=(temp>>2);
  1151     0062  085A               	movf	PWM_Set_Duty@temp+1,w
  1152     0063  00D8               	movwf	??_PWM_Set_Duty+1
  1153     0064  0859               	movf	PWM_Set_Duty@temp,w
  1154     0065  00D7               	movwf	??_PWM_Set_Duty
  1155     0066  1003               	clrc
  1156     0067  0CD8               	rrf	??_PWM_Set_Duty+1,f
  1157     0068  0CD7               	rrf	??_PWM_Set_Duty,f
  1158     0069  1003               	clrc
  1159     006A  0CD8               	rrf	??_PWM_Set_Duty+1,f
  1160     006B  0CD7               	rrf	??_PWM_Set_Duty,f
  1161     006C  0857               	movf	??_PWM_Set_Duty,w
  1162     006D  0098               	movwf	24	;volatile
  1163     006E                     l874:
  1164                           
  1165                           ;pwm.c: 37: PWM2DCL=(temp&0x03)<<6;
  1166     006E  0859               	movf	PWM_Set_Duty@temp,w
  1167     006F  3903               	andlw	3
  1168     0070  00D7               	movwf	??_PWM_Set_Duty
  1169     0071  3005               	movlw	5
  1170     0072                     u375:
  1171     0072  1003               	clrc
  1172     0073  0DD7               	rlf	??_PWM_Set_Duty,f
  1173     0074  3EFF               	addlw	-1
  1174     0075  1D03               	skipz
  1175     0076  2872               	goto	u375
  1176     0077  1003               	clrc
  1177     0078  0D57               	rlf	??_PWM_Set_Duty,w
  1178     0079  0097               	movwf	23	;volatile
  1179     007A                     l75:
  1180     007A  0008               	return
  1181     007B                     __end_of_PWM_Set_Duty:
  1182                           
  1183                           	psect	text7
  1184     00E1                     __ptext7:	
  1185 ;; *************** function ___lmul *****************
  1186 ;; Defined at:
  1187 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  multiplier      4    5[BANK0 ] unsigned long 
  1190 ;;  multiplicand    4    9[BANK0 ] unsigned long 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  product         4   14[BANK0 ] unsigned long 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  4    5[BANK0 ] unsigned long 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0
  1202 ;;      Params:         0       8
  1203 ;;      Locals:         0       4
  1204 ;;      Temps:          0       1
  1205 ;;      Totals:         0      13
  1206 ;;Total ram usage:       13 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 4
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_PWM_Set_Duty
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216     00E1                     ___lmul:	
  1217                           ;psect for function ___lmul
  1218                           
  1219     00E1                     l818:	
  1220                           ;incstack = 0
  1221                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1222                           
  1223     00E1  3000               	movlw	0
  1224     00E2  00D1               	movwf	___lmul@product+3
  1225     00E3  3000               	movlw	0
  1226     00E4  00D0               	movwf	___lmul@product+2
  1227     00E5  3000               	movlw	0
  1228     00E6  00CF               	movwf	___lmul@product+1
  1229     00E7  3000               	movlw	0
  1230     00E8  00CE               	movwf	___lmul@product
  1231     00E9                     l820:
  1232     00E9  1C45               	btfss	___lmul@multiplier,0
  1233     00EA  28EC               	goto	u241
  1234     00EB  28ED               	goto	u240
  1235     00EC                     u241:
  1236     00EC  2904               	goto	l824
  1237     00ED                     u240:
  1238     00ED                     l822:
  1239     00ED  0849               	movf	___lmul@multiplicand,w
  1240     00EE  07CE               	addwf	___lmul@product,f
  1241     00EF  084A               	movf	___lmul@multiplicand+1,w
  1242     00F0  1103               	clrz
  1243     00F1  1803               	skipnc
  1244     00F2  3E01               	addlw	1
  1245     00F3  1903               	skipnz
  1246     00F4  28F6               	goto	u251
  1247     00F5  07CF               	addwf	___lmul@product+1,f
  1248     00F6                     u251:
  1249     00F6  084B               	movf	___lmul@multiplicand+2,w
  1250     00F7  1103               	clrz
  1251     00F8  1803               	skipnc
  1252     00F9  3E01               	addlw	1
  1253     00FA  1903               	skipnz
  1254     00FB  28FD               	goto	u252
  1255     00FC  07D0               	addwf	___lmul@product+2,f
  1256     00FD                     u252:
  1257     00FD  084C               	movf	___lmul@multiplicand+3,w
  1258     00FE  1103               	clrz
  1259     00FF  1803               	skipnc
  1260     0100  3E01               	addlw	1
  1261     0101  1903               	skipnz
  1262     0102  2904               	goto	u253
  1263     0103  07D1               	addwf	___lmul@product+3,f
  1264     0104                     u253:
  1265     0104                     l824:
  1266     0104  3001               	movlw	1
  1267     0105  00CD               	movwf	??___lmul
  1268     0106                     u265:
  1269     0106  1003               	clrc
  1270     0107  0DC9               	rlf	___lmul@multiplicand,f
  1271     0108  0DCA               	rlf	___lmul@multiplicand+1,f
  1272     0109  0DCB               	rlf	___lmul@multiplicand+2,f
  1273     010A  0DCC               	rlf	___lmul@multiplicand+3,f
  1274     010B  0BCD               	decfsz	??___lmul,f
  1275     010C  2906               	goto	u265
  1276     010D                     l826:
  1277     010D  3001               	movlw	1
  1278     010E                     u275:
  1279     010E  1003               	clrc
  1280     010F  0CC8               	rrf	___lmul@multiplier+3,f
  1281     0110  0CC7               	rrf	___lmul@multiplier+2,f
  1282     0111  0CC6               	rrf	___lmul@multiplier+1,f
  1283     0112  0CC5               	rrf	___lmul@multiplier,f
  1284     0113  3EFF               	addlw	-1
  1285     0114  1D03               	skipz
  1286     0115  290E               	goto	u275
  1287     0116  0848               	movf	___lmul@multiplier+3,w
  1288     0117  0447               	iorwf	___lmul@multiplier+2,w
  1289     0118  0446               	iorwf	___lmul@multiplier+1,w
  1290     0119  0445               	iorwf	___lmul@multiplier,w
  1291     011A  1D03               	skipz
  1292     011B  291D               	goto	u281
  1293     011C  291E               	goto	u280
  1294     011D                     u281:
  1295     011D  28E9               	goto	l820
  1296     011E                     u280:
  1297     011E                     l828:
  1298     011E  0851               	movf	___lmul@product+3,w
  1299     011F  00C8               	movwf	?___lmul+3
  1300     0120  0850               	movf	___lmul@product+2,w
  1301     0121  00C7               	movwf	?___lmul+2
  1302     0122  084F               	movf	___lmul@product+1,w
  1303     0123  00C6               	movwf	?___lmul+1
  1304     0124  084E               	movf	___lmul@product,w
  1305     0125  00C5               	movwf	?___lmul
  1306     0126                     l158:
  1307     0126  0008               	return
  1308     0127                     __end_of___lmul:
  1309                           
  1310                           	psect	text8
  1311     007B                     __ptext8:	
  1312 ;; *************** function ___lldiv *****************
  1313 ;; Defined at:
  1314 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  divisor         4    5[BANK0 ] unsigned long 
  1317 ;;  dividend        4    9[BANK0 ] unsigned long 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  quotient        4   14[BANK0 ] unsigned long 
  1320 ;;  counter         1   18[BANK0 ] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  4    5[BANK0 ] unsigned long 
  1323 ;; Registers used:
  1324 ;;		wreg, status,2, status,0
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0
  1330 ;;      Params:         0       8
  1331 ;;      Locals:         0       5
  1332 ;;      Temps:          0       1
  1333 ;;      Totals:         0      14
  1334 ;;Total ram usage:       14 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; Hardware stack levels required when called: 4
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_PWM_Set_Duty
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344     007B                     ___lldiv:	
  1345                           ;psect for function ___lldiv
  1346                           
  1347     007B                     l832:	
  1348                           ;incstack = 0
  1349                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1350                           
  1351     007B  3000               	movlw	0
  1352     007C  00D1               	movwf	___lldiv@quotient+3
  1353     007D  3000               	movlw	0
  1354     007E  00D0               	movwf	___lldiv@quotient+2
  1355     007F  3000               	movlw	0
  1356     0080  00CF               	movwf	___lldiv@quotient+1
  1357     0081  3000               	movlw	0
  1358     0082  00CE               	movwf	___lldiv@quotient
  1359     0083  0848               	movf	___lldiv@divisor+3,w
  1360     0084  0447               	iorwf	___lldiv@divisor+2,w
  1361     0085  0446               	iorwf	___lldiv@divisor+1,w
  1362     0086  0445               	iorwf	___lldiv@divisor,w
  1363     0087  1903               	skipnz
  1364     0088  288A               	goto	u291
  1365     0089  288B               	goto	u290
  1366     008A                     u291:
  1367     008A  28D8               	goto	l852
  1368     008B                     u290:
  1369     008B                     l834:
  1370     008B  01D2               	clrf	___lldiv@counter
  1371     008C  0AD2               	incf	___lldiv@counter,f
  1372     008D  289B               	goto	l838
  1373     008E                     l836:
  1374     008E  3001               	movlw	1
  1375     008F  00CD               	movwf	??___lldiv
  1376     0090                     u305:
  1377     0090  1003               	clrc
  1378     0091  0DC5               	rlf	___lldiv@divisor,f
  1379     0092  0DC6               	rlf	___lldiv@divisor+1,f
  1380     0093  0DC7               	rlf	___lldiv@divisor+2,f
  1381     0094  0DC8               	rlf	___lldiv@divisor+3,f
  1382     0095  0BCD               	decfsz	??___lldiv,f
  1383     0096  2890               	goto	u305
  1384     0097  3001               	movlw	1
  1385     0098  00CD               	movwf	??___lldiv
  1386     0099  084D               	movf	??___lldiv,w
  1387     009A  07D2               	addwf	___lldiv@counter,f
  1388     009B                     l838:
  1389     009B  1FC8               	btfss	___lldiv@divisor+3,7
  1390     009C  289E               	goto	u311
  1391     009D  289F               	goto	u310
  1392     009E                     u311:
  1393     009E  288E               	goto	l836
  1394     009F                     u310:
  1395     009F                     l840:
  1396     009F  3001               	movlw	1
  1397     00A0  00CD               	movwf	??___lldiv
  1398     00A1                     u325:
  1399     00A1  1003               	clrc
  1400     00A2  0DCE               	rlf	___lldiv@quotient,f
  1401     00A3  0DCF               	rlf	___lldiv@quotient+1,f
  1402     00A4  0DD0               	rlf	___lldiv@quotient+2,f
  1403     00A5  0DD1               	rlf	___lldiv@quotient+3,f
  1404     00A6  0BCD               	decfsz	??___lldiv,f
  1405     00A7  28A1               	goto	u325
  1406     00A8                     l842:
  1407     00A8  0848               	movf	___lldiv@divisor+3,w
  1408     00A9  024C               	subwf	___lldiv@dividend+3,w
  1409     00AA  1D03               	skipz
  1410     00AB  28B6               	goto	u335
  1411     00AC  0847               	movf	___lldiv@divisor+2,w
  1412     00AD  024B               	subwf	___lldiv@dividend+2,w
  1413     00AE  1D03               	skipz
  1414     00AF  28B6               	goto	u335
  1415     00B0  0846               	movf	___lldiv@divisor+1,w
  1416     00B1  024A               	subwf	___lldiv@dividend+1,w
  1417     00B2  1D03               	skipz
  1418     00B3  28B6               	goto	u335
  1419     00B4  0845               	movf	___lldiv@divisor,w
  1420     00B5  0249               	subwf	___lldiv@dividend,w
  1421     00B6                     u335:
  1422     00B6  1C03               	skipc
  1423     00B7  28B9               	goto	u331
  1424     00B8  28BA               	goto	u330
  1425     00B9                     u331:
  1426     00B9  28C9               	goto	l848
  1427     00BA                     u330:
  1428     00BA                     l844:
  1429     00BA  0845               	movf	___lldiv@divisor,w
  1430     00BB  02C9               	subwf	___lldiv@dividend,f
  1431     00BC  0846               	movf	___lldiv@divisor+1,w
  1432     00BD  1C03               	skipc
  1433     00BE  0F46               	incfsz	___lldiv@divisor+1,w
  1434     00BF  02CA               	subwf	___lldiv@dividend+1,f
  1435     00C0  0847               	movf	___lldiv@divisor+2,w
  1436     00C1  1C03               	skipc
  1437     00C2  0F47               	incfsz	___lldiv@divisor+2,w
  1438     00C3  02CB               	subwf	___lldiv@dividend+2,f
  1439     00C4  0848               	movf	___lldiv@divisor+3,w
  1440     00C5  1C03               	skipc
  1441     00C6  0F48               	incfsz	___lldiv@divisor+3,w
  1442     00C7  02CC               	subwf	___lldiv@dividend+3,f
  1443     00C8                     l846:
  1444     00C8  144E               	bsf	___lldiv@quotient,0
  1445     00C9                     l848:
  1446     00C9  3001               	movlw	1
  1447     00CA                     u345:
  1448     00CA  1003               	clrc
  1449     00CB  0CC8               	rrf	___lldiv@divisor+3,f
  1450     00CC  0CC7               	rrf	___lldiv@divisor+2,f
  1451     00CD  0CC6               	rrf	___lldiv@divisor+1,f
  1452     00CE  0CC5               	rrf	___lldiv@divisor,f
  1453     00CF  3EFF               	addlw	-1
  1454     00D0  1D03               	skipz
  1455     00D1  28CA               	goto	u345
  1456     00D2                     l850:
  1457     00D2  3001               	movlw	1
  1458     00D3  02D2               	subwf	___lldiv@counter,f
  1459     00D4  1D03               	btfss	3,2
  1460     00D5  28D7               	goto	u351
  1461     00D6  28D8               	goto	u350
  1462     00D7                     u351:
  1463     00D7  289F               	goto	l840
  1464     00D8                     u350:
  1465     00D8                     l852:
  1466     00D8  0851               	movf	___lldiv@quotient+3,w
  1467     00D9  00C8               	movwf	?___lldiv+3
  1468     00DA  0850               	movf	___lldiv@quotient+2,w
  1469     00DB  00C7               	movwf	?___lldiv+2
  1470     00DC  084F               	movf	___lldiv@quotient+1,w
  1471     00DD  00C6               	movwf	?___lldiv+1
  1472     00DE  084E               	movf	___lldiv@quotient,w
  1473     00DF  00C5               	movwf	?___lldiv
  1474     00E0                     l180:
  1475     00E0  0008               	return
  1476     00E1                     __end_of___lldiv:
  1477                           
  1478                           	psect	text9
  1479     014C                     __ptext9:	
  1480 ;; *************** function _PWM_Enable *****************
  1481 ;; Defined at:
  1482 ;;		line 40 in file "pwm.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0
  1496 ;;      Params:         0       0
  1497 ;;      Locals:         0       0
  1498 ;;      Temps:          0       1
  1499 ;;      Totals:         0       1
  1500 ;;Total ram usage:        1 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 4
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_PWM_On_20_Percent_Duty_Cycle
  1507 ;;		_PWM_On_50_Percent_Duty_Cycle
  1508 ;;		_PWM_On_100_Percent_Duty_Cycle
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512     014C                     _PWM_Enable:	
  1513                           ;psect for function _PWM_Enable
  1514                           
  1515     014C                     l876:	
  1516                           ;incstack = 0
  1517                           ; Regs used in _PWM_Enable: [wreg+status,2+status,0]
  1518                           
  1519                           
  1520                           ;pwm.c: 41: LATA &=~ (1<<1);
  1521     014C  30FD               	movlw	253
  1522     014D  00C5               	movwf	??_PWM_Enable
  1523     014E  0845               	movf	??_PWM_Enable,w
  1524     014F  0587               	andwf	7,f	;volatile
  1525     0150                     l878:
  1526                           
  1527                           ;pwm.c: 42: TRISA |= (1<<1);
  1528     0150  1486               	bsf	6,1	;volatile
  1529     0151                     l880:
  1530                           
  1531                           ;pwm.c: 43: ANSELA |= (1<<1);
  1532     0151  1488               	bsf	8,1	;volatile
  1533     0152                     l882:
  1534                           
  1535                           ;pwm.c: 44: PWM2CON = (1<<6)|(1<<7);
  1536     0152  30C0               	movlw	192
  1537     0153  0099               	movwf	25	;volatile
  1538     0154                     l884:
  1539                           
  1540                           ;pwm.c: 45: PWM2DCH = 0x7F;
  1541     0154  307F               	movlw	127
  1542     0155  0098               	movwf	24	;volatile
  1543     0156                     l886:
  1544                           
  1545                           ;pwm.c: 46: PWM2DCL = 0xC0;
  1546     0156  30C0               	movlw	192
  1547     0157  0097               	movwf	23	;volatile
  1548     0158                     l888:
  1549                           
  1550                           ;pwm.c: 47: PR2 = 0xFF;
  1551     0158  30FF               	movlw	255
  1552     0159  0092               	movwf	18	;volatile
  1553     015A                     l890:
  1554                           
  1555                           ;pwm.c: 48: TMR2 = 0x00;
  1556     015A  0191               	clrf	17	;volatile
  1557     015B                     l892:
  1558                           
  1559                           ;pwm.c: 49: PIR1 &=~ (1<<1);
  1560     015B  30FD               	movlw	253
  1561     015C  00C5               	movwf	??_PWM_Enable
  1562     015D  0845               	movf	??_PWM_Enable,w
  1563     015E  058C               	andwf	12,f	;volatile
  1564     015F                     l894:
  1565                           
  1566                           ;pwm.c: 50: T2CON = (1<<2);
  1567     015F  3004               	movlw	4
  1568     0160  0093               	movwf	19	;volatile
  1569     0161                     l896:
  1570                           
  1571                           ;pwm.c: 51: TRISA &=~ (1<<1);
  1572     0161  30FD               	movlw	253
  1573     0162  00C5               	movwf	??_PWM_Enable
  1574     0163  0845               	movf	??_PWM_Enable,w
  1575     0164  0586               	andwf	6,f	;volatile
  1576     0165                     l78:
  1577     0165  0008               	return
  1578     0166                     __end_of_PWM_Enable:
  1579                           
  1580                           	psect	text10
  1581     01D4                     __ptext10:	
  1582 ;; *************** function _PWM_Off *****************
  1583 ;; Defined at:
  1584 ;;		line 91 in file "pwm.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0, pclath, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0
  1598 ;;      Params:         0       0
  1599 ;;      Locals:         0       0
  1600 ;;      Temps:          0       0
  1601 ;;      Totals:         0       0
  1602 ;;Total ram usage:        0 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 5
  1605 ;; This function calls:
  1606 ;;		_PWM_Disable
  1607 ;;		_PWM_Get_Execution_Status
  1608 ;;		_PWM_Set_Execution_Status
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614     01D4                     _PWM_Off:	
  1615                           ;psect for function _PWM_Off
  1616                           
  1617     01D4                     l942:	
  1618                           ;incstack = 0
  1619                           ; Regs used in _PWM_Off: [wreg+status,2+status,0+pclath+cstack]
  1620                           
  1621                           
  1622                           ;pwm.c: 92: if(PWM_Get_Execution_Status()==0){
  1623     01D4  21FA               	fcall	_PWM_Get_Execution_Status
  1624     01D5  3A00               	xorlw	0
  1625     01D6  1D03               	skipz
  1626     01D7  29D9               	goto	u391
  1627     01D8  29DA               	goto	u390
  1628     01D9                     u391:
  1629     01D9  29DC               	goto	l97
  1630     01DA                     u390:
  1631     01DA                     l944:
  1632                           
  1633                           ;pwm.c: 93: PWM_Disable();
  1634     01DA  217F               	fcall	_PWM_Disable
  1635                           
  1636                           ;pwm.c: 94: PWM_Set_Execution_Status();
  1637     01DB  21F2               	fcall	_PWM_Set_Execution_Status
  1638     01DC                     l97:
  1639     01DC  0008               	return
  1640     01DD                     __end_of_PWM_Off:
  1641                           
  1642                           	psect	text11
  1643     01F2                     __ptext11:	
  1644 ;; *************** function _PWM_Set_Execution_Status *****************
  1645 ;; Defined at:
  1646 ;;		line 16 in file "pwm.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0
  1660 ;;      Params:         0       0
  1661 ;;      Locals:         0       0
  1662 ;;      Temps:          0       0
  1663 ;;      Totals:         0       0
  1664 ;;Total ram usage:        0 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 4
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_PWM_On_20_Percent_Duty_Cycle
  1671 ;;		_PWM_On_50_Percent_Duty_Cycle
  1672 ;;		_PWM_On_100_Percent_Duty_Cycle
  1673 ;;		_PWM_Off
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677     01F2                     _PWM_Set_Execution_Status:	
  1678                           ;psect for function _PWM_Set_Execution_Status
  1679                           
  1680     01F2                     l860:	
  1681                           ;incstack = 0
  1682                           ; Regs used in _PWM_Set_Execution_Status: [wreg]
  1683                           
  1684                           
  1685                           ;pwm.c: 17: INTCON=0x90;
  1686     01F2  3090               	movlw	144
  1687     01F3  008B               	movwf	11	;volatile
  1688                           
  1689                           ;pwm.c: 18: executed=1;
  1690     01F4  3001               	movlw	1
  1691     01F5  00DC               	movwf	_executed	;volatile
  1692     01F6                     l66:
  1693     01F6  0008               	return
  1694     01F7                     __end_of_PWM_Set_Execution_Status:
  1695                           
  1696                           	psect	text12
  1697     01FA                     __ptext12:	
  1698 ;; *************** function _PWM_Get_Execution_Status *****************
  1699 ;; Defined at:
  1700 ;;		line 12 in file "pwm.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      unsigned char 
  1707 ;; Registers used:
  1708 ;;		wreg
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0
  1714 ;;      Params:         0       0
  1715 ;;      Locals:         0       0
  1716 ;;      Temps:          0       0
  1717 ;;      Totals:         0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; Hardware stack levels required when called: 4
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_PWM_On_20_Percent_Duty_Cycle
  1725 ;;		_PWM_On_50_Percent_Duty_Cycle
  1726 ;;		_PWM_On_100_Percent_Duty_Cycle
  1727 ;;		_PWM_Off
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731     01FA                     _PWM_Get_Execution_Status:	
  1732                           ;psect for function _PWM_Get_Execution_Status
  1733                           
  1734     01FA                     l856:	
  1735                           ;incstack = 0
  1736                           ; Regs used in _PWM_Get_Execution_Status: [wreg]
  1737                           
  1738                           
  1739                           ;pwm.c: 13: return executed;
  1740     01FA  085C               	movf	_executed,w	;volatile
  1741     01FB                     l63:
  1742     01FB  0008               	return
  1743     01FC                     __end_of_PWM_Get_Execution_Status:
  1744                           
  1745                           	psect	text13
  1746     017F                     __ptext13:	
  1747 ;; *************** function _PWM_Disable *****************
  1748 ;; Defined at:
  1749 ;;		line 54 in file "pwm.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0
  1763 ;;      Params:         0       0
  1764 ;;      Locals:         0       0
  1765 ;;      Temps:          0       1
  1766 ;;      Totals:         0       1
  1767 ;;Total ram usage:        1 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 4
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_PWM_Off
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777     017F                     _PWM_Disable:	
  1778                           ;psect for function _PWM_Disable
  1779                           
  1780     017F                     l898:	
  1781                           ;incstack = 0
  1782                           ; Regs used in _PWM_Disable: [wreg+status,2+status,0]
  1783                           
  1784                           
  1785                           ;pwm.c: 55: TRISA |= (1<<1);
  1786     017F  1486               	bsf	6,1	;volatile
  1787     0180                     l900:
  1788                           
  1789                           ;pwm.c: 56: PWM2DCH = 0;
  1790     0180  0198               	clrf	24	;volatile
  1791                           
  1792                           ;pwm.c: 57: PWM2DCL = 0;
  1793     0181  0197               	clrf	23	;volatile
  1794                           
  1795                           ;pwm.c: 58: PWM2CON = 0;
  1796     0182  0199               	clrf	25	;volatile
  1797                           
  1798                           ;pwm.c: 59: PR2 = 0;
  1799     0183  0192               	clrf	18	;volatile
  1800                           
  1801                           ;pwm.c: 60: TMR2 = 0;
  1802     0184  0191               	clrf	17	;volatile
  1803                           
  1804                           ;pwm.c: 61: T2CON = 0;
  1805     0185  0193               	clrf	19	;volatile
  1806     0186                     l902:
  1807                           
  1808                           ;pwm.c: 62: LATA &=~ (1<<1);
  1809     0186  30FD               	movlw	253
  1810     0187  00C5               	movwf	??_PWM_Disable
  1811     0188  0845               	movf	??_PWM_Disable,w
  1812     0189  0587               	andwf	7,f	;volatile
  1813     018A                     l904:
  1814                           
  1815                           ;pwm.c: 63: ANSELA &=~ (1<<1);
  1816     018A  30FD               	movlw	253
  1817     018B  00C5               	movwf	??_PWM_Disable
  1818     018C  0845               	movf	??_PWM_Disable,w
  1819     018D  0588               	andwf	8,f	;volatile
  1820     018E                     l906:
  1821                           
  1822                           ;pwm.c: 64: TRISA &=~ (1<<1);
  1823     018E  30FD               	movlw	253
  1824     018F  00C5               	movwf	??_PWM_Disable
  1825     0190  0845               	movf	??_PWM_Disable,w
  1826     0191  0586               	andwf	6,f	;volatile
  1827     0192                     l81:
  1828     0192  0008               	return
  1829     0193                     __end_of_PWM_Disable:
  1830                           
  1831                           	psect	text14
  1832     01C9                     __ptext14:	
  1833 ;; *************** function _Button_Init *****************
  1834 ;; Defined at:
  1835 ;;		line 39 in file "button.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMMON   BANK0
  1849 ;;      Params:         0       0
  1850 ;;      Locals:         0       0
  1851 ;;      Temps:          0       1
  1852 ;;      Totals:         0       1
  1853 ;;Total ram usage:        1 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 4
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863     01C9                     _Button_Init:	
  1864                           ;psect for function _Button_Init
  1865                           
  1866     01C9                     l920:	
  1867                           ;incstack = 0
  1868                           ; Regs used in _Button_Init: [wreg+status,2+status,0]
  1869                           
  1870                           
  1871                           ;button.c: 40: TRISA =(1<<2);
  1872     01C9  3004               	movlw	4
  1873     01CA  0086               	movwf	6	;volatile
  1874     01CB                     l922:
  1875                           
  1876                           ;button.c: 41: ANSELA=0x00;
  1877     01CB  0188               	clrf	8	;volatile
  1878     01CC                     l924:
  1879                           
  1880                           ;button.c: 42: INTCON = 0;
  1881     01CC  018B               	clrf	11	;volatile
  1882     01CD                     l926:
  1883                           
  1884                           ;button.c: 43: OPTION_REG&=~0xC0;
  1885     01CD  303F               	movlw	63
  1886     01CE  00C5               	movwf	??_Button_Init
  1887     01CF  0845               	movf	??_Button_Init,w
  1888     01D0  058E               	andwf	14,f	;volatile
  1889     01D1                     l928:
  1890                           
  1891                           ;button.c: 44: INTCON=0x90;
  1892     01D1  3090               	movlw	144
  1893     01D2  008B               	movwf	11	;volatile
  1894     01D3                     l130:
  1895     01D3  0008               	return
  1896     01D4                     __end_of_Button_Init:
  1897                           
  1898                           	psect	text15
  1899     01FC                     __ptext15:	
  1900 ;; *************** function _Button_Get_State *****************
  1901 ;; Defined at:
  1902 ;;		line 58 in file "button.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      unsigned char 
  1909 ;; Registers used:
  1910 ;;		wreg
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0
  1916 ;;      Params:         0       0
  1917 ;;      Locals:         0       0
  1918 ;;      Temps:          0       0
  1919 ;;      Totals:         0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 4
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_main
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930     01FC                     _Button_Get_State:	
  1931                           ;psect for function _Button_Get_State
  1932                           
  1933     01FC                     l938:	
  1934                           ;incstack = 0
  1935                           ; Regs used in _Button_Get_State: [wreg]
  1936                           
  1937                           
  1938                           ;button.c: 59: return Button_State;
  1939     01FC  085B               	movf	_Button_State,w	;volatile
  1940     01FD                     l137:
  1941     01FD  0008               	return
  1942     01FE                     __end_of_Button_Get_State:
  1943                           
  1944                           	psect	text16
  1945     01E5                     __ptext16:	
  1946 ;; *************** function _ISRs *****************
  1947 ;; Defined at:
  1948 ;;		line 38 in file "main.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0, pclath, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0
  1962 ;;      Params:         0       0
  1963 ;;      Locals:         0       0
  1964 ;;      Temps:          0       2
  1965 ;;      Totals:         0       2
  1966 ;;Total ram usage:        2 bytes
  1967 ;; Hardware stack levels used: 1
  1968 ;; Hardware stack levels required when called: 3
  1969 ;; This function calls:
  1970 ;;		_Button_ISR_Executables
  1971 ;; This function is called by:
  1972 ;;		Interrupt level 1
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976     01E5                     _ISRs:	
  1977                           ;psect for function _ISRs
  1978                           
  1979     01E5                     i1l980:
  1980                           
  1981                           ;main.c: 39: Button_ISR_Executables();
  1982     01E5  21F7               	fcall	_Button_ISR_Executables
  1983     01E6                     i1l36:
  1984     01E6  0844               	movf	??_ISRs+1,w
  1985     01E7  008A               	movwf	10
  1986     01E8  0E43               	swapf	??_ISRs,w
  1987     01E9  0083               	movwf	3
  1988     01EA  0EFE               	swapf	btemp,f
  1989     01EB  0E7E               	swapf	btemp,w
  1990     01EC  0009               	retfie
  1991     01ED                     __end_of_ISRs:
  1992                           
  1993                           	psect	intentry
  1994     0004                     __pintentry:	
  1995                           ;incstack = 0
  1996                           ; Regs used in _ISRs: [wreg+status,2+status,0+pclath+cstack]
  1997                           
  1998     0004                     interrupt_function:
  1999     007E                     saved_w	set	btemp
  2000     0004  00FE               	movwf	btemp
  2001     0005  0E03               	swapf	3,w
  2002     0006  00C3               	movwf	??_ISRs
  2003     0007  080A               	movf	10,w
  2004     0008  00C4               	movwf	??_ISRs+1
  2005     0009  29E5               	ljmp	_ISRs
  2006                           
  2007                           	psect	text17
  2008     01F7                     __ptext17:	
  2009 ;; *************** function _Button_ISR_Executables *****************
  2010 ;; Defined at:
  2011 ;;		line 62 in file "button.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0
  2025 ;;      Params:         0       0
  2026 ;;      Locals:         0       0
  2027 ;;      Temps:          0       0
  2028 ;;      Totals:         0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 2
  2032 ;; This function calls:
  2033 ;;		_Button_Pressed
  2034 ;; This function is called by:
  2035 ;;		_ISRs
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039     01F7                     _Button_ISR_Executables:	
  2040                           ;psect for function _Button_ISR_Executables
  2041                           
  2042     01F7                     i1l958:	
  2043                           ;incstack = 0
  2044                           ; Regs used in _Button_ISR_Executables: [wreg+status,2+status,0+pclath+cstack]
  2045                           
  2046                           
  2047                           ;button.c: 63: Button_Pressed();
  2048     01F7  2166               	fcall	_Button_Pressed
  2049     01F8                     i1l960:
  2050                           
  2051                           ;button.c: 64: INTCON=0;
  2052     01F8  018B               	clrf	11	;volatile
  2053     01F9                     i1l140:
  2054     01F9  0008               	return
  2055     01FA                     __end_of_Button_ISR_Executables:
  2056                           
  2057                           	psect	text18
  2058     0166                     __ptext18:	
  2059 ;; *************** function _Button_Pressed *****************
  2060 ;; Defined at:
  2061 ;;		line 47 in file "button.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2, status,0, pclath, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMMON   BANK0
  2075 ;;      Params:         0       0
  2076 ;;      Locals:         0       0
  2077 ;;      Temps:          0       3
  2078 ;;      Totals:         0       3
  2079 ;;Total ram usage:        3 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 1
  2082 ;; This function calls:
  2083 ;;		_PWM_Clear_Execution_Status
  2084 ;; This function is called by:
  2085 ;;		_Button_ISR_Executables
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089     0166                     _Button_Pressed:	
  2090                           ;psect for function _Button_Pressed
  2091                           
  2092     0166                     i1l910:	
  2093                           ;incstack = 0
  2094                           ; Regs used in _Button_Pressed: [wreg+status,2+status,0+pclath+cstack]
  2095                           
  2096                           
  2097                           ;button.c: 49: Button_State++;
  2098     0166  3001               	movlw	1
  2099     0167  00C0               	movwf	??_Button_Pressed
  2100     0168  0840               	movf	??_Button_Pressed,w
  2101     0169  07DB               	addwf	_Button_State,f	;volatile
  2102     016A                     i1l912:
  2103                           
  2104                           ;button.c: 50: if(Button_State>3){
  2105     016A  3004               	movlw	4
  2106     016B  025B               	subwf	_Button_State,w	;volatile
  2107     016C  1C03               	skipc
  2108     016D  296F               	goto	u38_21
  2109     016E  2970               	goto	u38_20
  2110     016F                     u38_21:
  2111     016F  2971               	goto	i1l916
  2112     0170                     u38_20:
  2113     0170                     i1l914:
  2114                           
  2115                           ;button.c: 51: Button_State=0;
  2116     0170  01DB               	clrf	_Button_State	;volatile
  2117     0171                     i1l916:
  2118                           
  2119                           ;button.c: 52: };button.c: 53: _delay((unsigned long)((200)*(8000000/4000.0)));
  2120     0171  3003               	movlw	3
  2121     0172  00C2               	movwf	??_Button_Pressed+2
  2122     0173  3008               	movlw	8
  2123     0174  00C1               	movwf	??_Button_Pressed+1
  2124     0175  3077               	movlw	119
  2125     0176  00C0               	movwf	??_Button_Pressed
  2126     0177                     u47_27:
  2127     0177  0BC0               	decfsz	??_Button_Pressed,f
  2128     0178  2977               	goto	u47_27
  2129     0179  0BC1               	decfsz	??_Button_Pressed+1,f
  2130     017A  2977               	goto	u47_27
  2131     017B  0BC2               	decfsz	??_Button_Pressed+2,f
  2132     017C  2977               	goto	u47_27
  2133     017D                     i1l918:
  2134                           
  2135                           ;button.c: 54: PWM_Clear_Execution_Status();
  2136     017D  21FE               	fcall	_PWM_Clear_Execution_Status
  2137     017E                     i1l134:
  2138     017E  0008               	return
  2139     017F                     __end_of_Button_Pressed:
  2140                           
  2141                           	psect	text19
  2142     01FE                     __ptext19:	
  2143 ;; *************** function _PWM_Clear_Execution_Status *****************
  2144 ;; Defined at:
  2145 ;;		line 21 in file "pwm.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		status,2
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0
  2159 ;;      Params:         0       0
  2160 ;;      Locals:         0       0
  2161 ;;      Temps:          0       0
  2162 ;;      Totals:         0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_Button_Pressed
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172     01FE                     _PWM_Clear_Execution_Status:	
  2173                           ;psect for function _PWM_Clear_Execution_Status
  2174                           
  2175     01FE                     i1l816:	
  2176                           ;incstack = 0
  2177                           ; Regs used in _PWM_Clear_Execution_Status: [status,2]
  2178                           
  2179                           
  2180                           ;pwm.c: 22: executed=0;
  2181     01FE  01DC               	clrf	_executed	;volatile
  2182     01FF                     i1l69:
  2183     01FF  0008               	return
  2184     0200                     __end_of_PWM_Clear_Execution_Status:
  2185     007E                     btemp	set	126	;btemp
  2186     007E                     wtemp0	set	126
  2187                           
  2188                           	psect	config
  2189                           
  2190                           ;Config register CONFIG @ 0x2007
  2191                           ;	Oscillator Selection bits
  2192                           ;	FOSC = INTOSC, INTOSC oscillator: CLKIN function disabled
  2193                           ;	Brown-out Reset Enable
  2194                           ;	BOREN = OFF, Brown-out Reset disabled
  2195                           ;	Watchdog Timer Enable
  2196                           ;	WDTE = OFF, WDT disabled
  2197                           ;	Power-up Timer Enable bit
  2198                           ;	PWRTE = OFF, PWRT disabled
  2199                           ;	MCLR Pin Function Select bit
  2200                           ;	MCLRE = ON, MCLR pin function is MCLR
  2201                           ;	Code Protection bit
  2202                           ;	CP = OFF, Program memory code protection is disabled
  2203                           ;	Low-Voltage Programming Enable
  2204                           ;	LVP = ON, Low-voltage programming enabled
  2205                           ;	Brown-out Reset Selection bits
  2206                           ;	LPBOR = OFF, BOR disabled
  2207                           ;	Brown-out Reset Voltage Selection
  2208                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2209                           ;	Flash Memory Self-Write Protection
  2210                           ;	WRT = OFF, Write protection off
  2211     2007                     	org	8199
  2212     2007  3DE0               	dw	15840

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     27      29

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRs in COMMON

    None.

Critical Paths under _main in BANK0

    _Sleep_Init->_Sleep_Unused_GPIO_Config
    _PWM_On_50_Percent_Duty_Cycle->_PWM_Set_Duty
    _PWM_On_20_Percent_Duty_Cycle->_PWM_Set_Duty
    _PWM_On_100_Percent_Duty_Cycle->_PWM_Set_Duty
    _PWM_Set_Duty->___lldiv
    _PWM_Off->_PWM_Disable

Critical Paths under _ISRs in BANK0

    _Button_ISR_Executables->_Button_Pressed

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2772
                   _Button_Get_State
                        _Button_Init
                            _PWM_Off
      _PWM_On_100_Percent_Duty_Cycle
       _PWM_On_20_Percent_Duty_Cycle
       _PWM_On_50_Percent_Duty_Cycle
                         _Sleep_Init
 ---------------------------------------------------------------------------------
 (1) _Sleep_Init                                           0     0      0       0
           _Sleep_Unused_GPIO_Config
 ---------------------------------------------------------------------------------
 (2) _Sleep_Unused_GPIO_Config                             1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_On_50_Percent_Duty_Cycle                         0     0      0     924
                         _PWM_Enable
           _PWM_Get_Execution_Status
                       _PWM_Set_Duty
           _PWM_Set_Execution_Status
 ---------------------------------------------------------------------------------
 (1) _PWM_On_20_Percent_Duty_Cycle                         0     0      0     924
                         _PWM_Enable
           _PWM_Get_Execution_Status
                       _PWM_Set_Duty
           _PWM_Set_Execution_Status
 ---------------------------------------------------------------------------------
 (1) _PWM_On_100_Percent_Duty_Cycle                        0     0      0     924
                         _PWM_Enable
           _PWM_Get_Execution_Status
                       _PWM_Set_Duty
           _PWM_Set_Execution_Status
 ---------------------------------------------------------------------------------
 (2) _PWM_Set_Duty                                         8     4      4     924
                                             19 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              5 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              5 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _PWM_Enable                                           1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_Off                                              0     0      0       0
                        _PWM_Disable
           _PWM_Get_Execution_Status
           _PWM_Set_Execution_Status
 ---------------------------------------------------------------------------------
 (2) _PWM_Set_Execution_Status                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Get_Execution_Status                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Disable                                          1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Button_Init                                          1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Button_Get_State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISRs                                                 2     2      0       0
                                              3 BANK0      2     2      0
             _Button_ISR_Executables
 ---------------------------------------------------------------------------------
 (5) _Button_ISR_Executables                               0     0      0       0
                     _Button_Pressed
 ---------------------------------------------------------------------------------
 (6) _Button_Pressed                                       3     3      0       0
                                              0 BANK0      3     3      0
         _PWM_Clear_Execution_Status
 ---------------------------------------------------------------------------------
 (7) _PWM_Clear_Execution_Status                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Button_Get_State
   _Button_Init
   _PWM_Off
     _PWM_Disable
     _PWM_Get_Execution_Status
     _PWM_Set_Execution_Status
   _PWM_On_100_Percent_Duty_Cycle
     _PWM_Enable
     _PWM_Get_Execution_Status
     _PWM_Set_Duty
       ___lldiv
       ___lmul
     _PWM_Set_Execution_Status
   _PWM_On_20_Percent_Duty_Cycle
     _PWM_Enable
     _PWM_Get_Execution_Status
     _PWM_Set_Duty
     _PWM_Set_Execution_Status
   _PWM_On_50_Percent_Duty_Cycle
     _PWM_Enable
     _PWM_Get_Execution_Status
     _PWM_Set_Duty
     _PWM_Set_Execution_Status
   _Sleep_Init
     _Sleep_Unused_GPIO_Config

 _ISRs (ROOT)
   _Button_ISR_Executables
     _Button_Pressed
       _PWM_Clear_Execution_Status

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               3E     1B      1D       3       46.8%
ABS                  0      0      1D       4        0.0%
DATA                 0      0      1D       5        0.0%
BITBANK0            3E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jun 21 11:07:25 2023

               _Button_ISR_Executables 01F7                             _PWM_Enable 014C  
                                   l23 014A                                     l63 01FB  
                                   l81 0192                                     l66 01F6  
                                   l75 007A                                     l93 01C8  
                                   l85 01B6                                     l78 0165  
                                   l97 01DC                                     l89 01A4  
                          _PWM_Disable 017F                                    l110 01F1  
                                  l113 01E4                                    l130 01D3  
                                  l137 01FD                                    l180 00E0  
                                  l158 0126                                    l900 0180  
                                  l820 00E9                                    l902 0186  
                                  l822 00ED                                    l920 01C9  
                                  l904 018A                                    l840 009F  
                                  l832 007B                                    l824 0104  
                                  l922 01CB                                    l906 018E  
                                  l850 00D2                                    l842 00A8  
                                  l834 008B                                    l826 010D  
                                  l818 00E1                                    l930 01DD  
                                  l924 01CC                                    l860 01F2  
                                  l844 00BA                                    l836 008E  
                                  l852 00D8                                    l828 011E  
                                  l908 01ED                                    l932 01DF  
                                  l926 01CD                                    l942 01D4  
                                  l846 00C8                                    l838 009B  
                                  l870 0041                                    l862 000F  
                                  l950 0193                                    l934 01E0  
                                  l928 01D1                                    l856 01FA  
                                  l944 01DA                                    l880 0151  
                                  l848 00C9                                    l872 0062  
                                  l864 0020                                    l952 0199  
                                  l936 01E3                                    l938 01FC  
                                  l890 015A                                    l882 0152  
                                  l874 006E                                    l954 01B7  
                                  l946 01A5                                    l970 0138  
                                  l962 0127                                    l892 015B  
                                  l884 0154                                    l876 014C  
                                  l868 0028                                    l956 01BD  
                                  l948 01AB                                    l972 013A  
                                  l964 0129                                    l894 015F  
                                  l886 0156                                    l878 0150  
                                  l974 0140                                    l966 012F  
                                  l896 0161                                    l888 0158  
                                  l976 0142                                    l968 0132  
                                  l898 017F                                    l978 0148  
                                  u310 009F                                    u311 009E  
                                  u240 00ED                                    u400 01AB  
                                  u305 0090                                    u241 00EC  
                                  u401 01AA                                    u330 00BA  
                                  u410 0199                                    u331 00B9  
                                  u251 00F6                                    u411 0198  
                                  u252 00FD                                    u420 01BD  
                                  u325 00A1                                    u253 0104  
                                  u421 01BC                                    u350 00D8  
                                  u430 012F                                    _PR2 0012  
                                  u351 00D7                                    u335 00B6  
                                  u431 012E                                    u280 011E  
                                  u360 0020                                    u440 0138  
                                  u345 00CA                                    u281 011D  
                                  u265 0106                                    u361 001F  
                                  u441 0137                                    u290 008B  
                                  u450 0140                                    u291 008A  
                                  u275 010E                                    u363 001C  
                                  u451 013F                                    u460 0148  
                                  u461 0147                                    u390 01DA  
                                  u391 01D9                                    u375 0072  
                                 _LATA 0007                                   i1l36 01E6  
                                 _PIR1 000C                                   i1l69 01FF  
                                 _TMR2 0011                                   _ISRs 01E5  
                                 _WPUA 0009                                   _main 0127  
                                 btemp 007E                        __end_of_PWM_Off 01DD  
                                 start 000A                           _PWM_Set_Duty 000F  
 __end_of_PWM_On_20_Percent_Duty_Cycle 01B7           _PWM_On_20_Percent_Duty_Cycle 01A5  
 __end_of_PWM_On_50_Percent_Duty_Cycle 01A5           _PWM_On_50_Percent_Duty_Cycle 0193  
                                ?_ISRs 0040                          ??_Button_Init 0045  
                     _Button_Get_State 01FC                                  ?_main 0040  
                                _ADCON 001F                        __end_of___lldiv 00E1  
                                _T2CON 0013                       PWM_Set_Duty@duty 0053  
                                i1l140 01F9                                  i1l134 017E  
                     PWM_Set_Duty@temp 0059                                  i1l910 0166  
                                i1l816 01FE                                  i1l912 016A  
                                i1l914 0170                                  i1l916 0171  
                                i1l918 017D                                  i1l960 01F8  
                                i1l980 01E5                                  i1l958 01F7  
                                u38_20 0170                                  u38_21 016F  
                                u47_27 0177                                  _TRISA 0006  
                  ___lmul@multiplicand 0049                                  pclath 000A  
                                status 0003                                  wtemp0 007E  
                         __end_of_ISRs 01ED        ??_PWM_On_100_Percent_Duty_Cycle 0000  
                      __initialization 000B                           __end_of_main 014C  
                          ?_PWM_Enable 0040                                 ??_ISRs 0043  
                               ??_main 0000                    __end_of_Button_Init 01D4  
   __end_of_PWM_Clear_Execution_Status 0200             _PWM_Clear_Execution_Status 01FE  
                               _ANSELA 0008                              ??_PWM_Off 0000  
           ??_Sleep_Unused_GPIO_Config 0045                                 _INTCON 000B  
                               _FVRCON 001D                             _Sleep_Init 01DD  
                               ___lmul 00E1                              ??___lldiv 004D  
                               saved_w 007E                __end_of__initialization 000D  
              ?_Button_ISR_Executables 0040                         __pcstackCOMMON 0000  
            ?_PWM_Get_Execution_Status 0040  __end_of_PWM_On_100_Percent_Duty_Cycle 01C9  
        _PWM_On_100_Percent_Duty_Cycle 01B7              ?_PWM_Set_Execution_Status 0040  
                         ?_PWM_Disable 0040                            _Button_Init 01C9  
                       _Button_Pressed 0166                             __pbssBANK0 005B  
             __end_of_Button_Get_State 01FE         __end_of_Button_ISR_Executables 01FA  
                          ?_Sleep_Init 0040                             __pmaintext 0127  
                              ?___lmul 0045                             __pintentry 0004  
               __end_of_Button_Pressed 017F                         ___lmul@product 004E  
                              _PWM2DCH 0018                                _PWM2DCL 0017  
                              _PWM2CON 0019                                _VREGCON 003E  
                              _PWM_Off 01D4                           ??_PWM_Enable 0045  
                              ___lldiv 007B                        ?_Button_Pressed 0040  
                              __ptext1 01DD                                __ptext2 01ED  
                              __ptext3 0193                                __ptext4 01A5  
                              __ptext5 01B7                                __ptext6 000F  
                              __ptext7 00E1                                __ptext8 007B  
                              __ptext9 014C            ?_PWM_Clear_Execution_Status 0040  
                 end_of_initialization 000D                     __end_of_PWM_Enable 0166  
                      ___lldiv@divisor 0045                        ___lldiv@counter 0052  
     __end_of_PWM_Get_Execution_Status 01FC       __end_of_PWM_Set_Execution_Status 01F7  
                       __end_of___lmul 0127              ?_Sleep_Unused_GPIO_Config 0040  
                         ?_Button_Init 0040          ?_PWM_On_20_Percent_Duty_Cycle 0040  
        ?_PWM_On_50_Percent_Duty_Cycle 0040                    start_initialization 000B  
                         _Button_State 005B                      ?_Button_Get_State 0040  
                        ?_PWM_Set_Duty 0053                           ??_Sleep_Init 0000  
                   ??_Button_Get_State 0000                               ??___lmul 004D  
                            ___latbits 0000                          __pcstackBANK0 0040  
                   __end_of_Sleep_Init 01E5                               ?_PWM_Off 0040  
                       ??_PWM_Set_Duty 0057               _PWM_Get_Execution_Status 01FA  
                     ??_Button_Pressed 0040               _PWM_Set_Execution_Status 01F2  
                             ?___lldiv 0045         ??_PWM_On_20_Percent_Duty_Cycle 0000  
       ??_PWM_On_50_Percent_Duty_Cycle 0000                      interrupt_function 0004  
             ??_Button_ISR_Executables 0000                      ___lmul@multiplier 0045  
     __end_of_Sleep_Unused_GPIO_Config 01F2                          ??_PWM_Disable 0045  
                 __end_of_PWM_Set_Duty 007B         ?_PWM_On_100_Percent_Duty_Cycle 0040  
                             __ptext10 01D4                               __ptext11 01F2  
                             __ptext12 01FA                               __ptext13 017F  
                             __ptext14 01C9                               __ptext15 01FC  
                             __ptext16 01E5                               __ptext17 01F7  
                             __ptext18 0166                               __ptext19 01FE  
                             _executed 005C                    __end_of_PWM_Disable 0193  
           ??_PWM_Get_Execution_Status 0000                               intlevel1 0000  
           ??_PWM_Set_Execution_Status 0000                       ___lldiv@dividend 0049  
             _Sleep_Unused_GPIO_Config 01ED                             _OPTION_REG 000E  
                     ___lldiv@quotient 004E           ??_PWM_Clear_Execution_Status 0000  
