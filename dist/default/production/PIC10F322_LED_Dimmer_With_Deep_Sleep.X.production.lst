

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu May 11 20:03:17 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	10F322
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.32
    22                           ; Generated 23/11/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC10F322 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0020                     	;# 
    91     0020                     	;# 
    92     0021                     	;# 
    93     0022                     	;# 
    94     0022                     	;# 
    95     0023                     	;# 
    96     0024                     	;# 
    97     0025                     	;# 
    98     0026                     	;# 
    99     0027                     	;# 
   100     0027                     	;# 
   101     0028                     	;# 
   102     0029                     	;# 
   103     002A                     	;# 
   104     002A                     	;# 
   105     002B                     	;# 
   106     002C                     	;# 
   107     002D                     	;# 
   108     002E                     	;# 
   109     0030                     	;# 
   110     0031                     	;# 
   111     0032                     	;# 
   112     0033                     	;# 
   113     0034                     	;# 
   114     0035                     	;# 
   115     0036                     	;# 
   116     0037                     	;# 
   117     0038                     	;# 
   118     0039                     	;# 
   119     003A                     	;# 
   120     003B                     	;# 
   121     003C                     	;# 
   122     003D                     	;# 
   123     003E                     	;# 
   124     003F                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000F                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0014                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001B                     	;# 
   155     001C                     	;# 
   156     001D                     	;# 
   157     001E                     	;# 
   158     001F                     	;# 
   159     0020                     	;# 
   160     0020                     	;# 
   161     0021                     	;# 
   162     0022                     	;# 
   163     0022                     	;# 
   164     0023                     	;# 
   165     0024                     	;# 
   166     0025                     	;# 
   167     0026                     	;# 
   168     0027                     	;# 
   169     0027                     	;# 
   170     0028                     	;# 
   171     0029                     	;# 
   172     002A                     	;# 
   173     002A                     	;# 
   174     002B                     	;# 
   175     002C                     	;# 
   176     002D                     	;# 
   177     002E                     	;# 
   178     0030                     	;# 
   179     0031                     	;# 
   180     0032                     	;# 
   181     0033                     	;# 
   182     0034                     	;# 
   183     0035                     	;# 
   184     0036                     	;# 
   185     0037                     	;# 
   186     0038                     	;# 
   187     0039                     	;# 
   188     003A                     	;# 
   189     003B                     	;# 
   190     003C                     	;# 
   191     003D                     	;# 
   192     003E                     	;# 
   193     003F                     	;# 
   194     0000                     	;# 
   195     0001                     	;# 
   196     0002                     	;# 
   197     0003                     	;# 
   198     0004                     	;# 
   199     0005                     	;# 
   200     0006                     	;# 
   201     0007                     	;# 
   202     0008                     	;# 
   203     0009                     	;# 
   204     000A                     	;# 
   205     000B                     	;# 
   206     000C                     	;# 
   207     000D                     	;# 
   208     000E                     	;# 
   209     000F                     	;# 
   210     0010                     	;# 
   211     0011                     	;# 
   212     0012                     	;# 
   213     0013                     	;# 
   214     0014                     	;# 
   215     0015                     	;# 
   216     0016                     	;# 
   217     0016                     	;# 
   218     0017                     	;# 
   219     0018                     	;# 
   220     0019                     	;# 
   221     0019                     	;# 
   222     001A                     	;# 
   223     001B                     	;# 
   224     001C                     	;# 
   225     001D                     	;# 
   226     001E                     	;# 
   227     001F                     	;# 
   228     0020                     	;# 
   229     0020                     	;# 
   230     0021                     	;# 
   231     0022                     	;# 
   232     0022                     	;# 
   233     0023                     	;# 
   234     0024                     	;# 
   235     0025                     	;# 
   236     0026                     	;# 
   237     0027                     	;# 
   238     0027                     	;# 
   239     0028                     	;# 
   240     0029                     	;# 
   241     002A                     	;# 
   242     002A                     	;# 
   243     002B                     	;# 
   244     002C                     	;# 
   245     002D                     	;# 
   246     002E                     	;# 
   247     0030                     	;# 
   248     0031                     	;# 
   249     0032                     	;# 
   250     0033                     	;# 
   251     0034                     	;# 
   252     0035                     	;# 
   253     0036                     	;# 
   254     0037                     	;# 
   255     0038                     	;# 
   256     0039                     	;# 
   257     003A                     	;# 
   258     003B                     	;# 
   259     003C                     	;# 
   260     003D                     	;# 
   261     003E                     	;# 
   262     003F                     	;# 
   263     0000                     	;# 
   264     0001                     	;# 
   265     0002                     	;# 
   266     0003                     	;# 
   267     0004                     	;# 
   268     0005                     	;# 
   269     0006                     	;# 
   270     0007                     	;# 
   271     0008                     	;# 
   272     0009                     	;# 
   273     000A                     	;# 
   274     000B                     	;# 
   275     000C                     	;# 
   276     000D                     	;# 
   277     000E                     	;# 
   278     000F                     	;# 
   279     0010                     	;# 
   280     0011                     	;# 
   281     0012                     	;# 
   282     0013                     	;# 
   283     0014                     	;# 
   284     0015                     	;# 
   285     0016                     	;# 
   286     0016                     	;# 
   287     0017                     	;# 
   288     0018                     	;# 
   289     0019                     	;# 
   290     0019                     	;# 
   291     001A                     	;# 
   292     001B                     	;# 
   293     001C                     	;# 
   294     001D                     	;# 
   295     001E                     	;# 
   296     001F                     	;# 
   297     0020                     	;# 
   298     0020                     	;# 
   299     0021                     	;# 
   300     0022                     	;# 
   301     0022                     	;# 
   302     0023                     	;# 
   303     0024                     	;# 
   304     0025                     	;# 
   305     0026                     	;# 
   306     0027                     	;# 
   307     0027                     	;# 
   308     0028                     	;# 
   309     0029                     	;# 
   310     002A                     	;# 
   311     002A                     	;# 
   312     002B                     	;# 
   313     002C                     	;# 
   314     002D                     	;# 
   315     002E                     	;# 
   316     0030                     	;# 
   317     0031                     	;# 
   318     0032                     	;# 
   319     0033                     	;# 
   320     0034                     	;# 
   321     0035                     	;# 
   322     0036                     	;# 
   323     0037                     	;# 
   324     0038                     	;# 
   325     0039                     	;# 
   326     003A                     	;# 
   327     003B                     	;# 
   328     003C                     	;# 
   329     003D                     	;# 
   330     003E                     	;# 
   331     003F                     	;# 
   332     001C                     _IOCAF	set	28
   333     000B                     _INTCON	set	11
   334     001B                     _IOCAN	set	27
   335     0009                     _WPUA	set	9
   336     000E                     _OPTION_REG	set	14
   337     001F                     _ADCON	set	31
   338     003E                     _VREGCON	set	62
   339     001D                     _FVRCON	set	29
   340     0030                     _WDTCON	set	48
   341     0026                     _CLKRCON	set	38
   342     0010                     _OSCCON	set	16
   343     0007                     _LATA	set	7
   344     0019                     _PWM2CON	set	25
   345     000C                     _PIR1	set	12
   346     0013                     _T2CON	set	19
   347     0012                     _PR2	set	18
   348     0006                     _TRISA	set	6
   349     0008                     _ANSELA	set	8
   350     0018                     _PWM2DCH	set	24
   351     0017                     _PWM2DCL	set	23
   352                           
   353                           	psect	cinit
   354     000B                     start_initialization:	
   355                           ; #config settings
   356                           
   357     000B                     __initialization:
   358                           
   359                           ; Clear objects allocated to BANK0
   360     000B  01E1               	clrf	__pbssBANK0& (0+127)
   361     000C                     end_of_initialization:	
   362                           ;End of C runtime variable initialization code
   363                           
   364     000C                     __end_of__initialization:
   365     000C  0183               	clrf	3
   366     000D  2952               	ljmp	_main	;jump to C main() function
   367                           
   368                           	psect	bssBANK0
   369     0061                     __pbssBANK0:
   370     0061                     _Button_State:
   371     0061                     	ds	1
   372                           
   373                           	psect	cstackCOMMON
   374     0000                     __pcstackCOMMON:
   375     0000                     ??_PWM_On_20_Percent_Duty_Cycle:
   376     0000                     ??_Button_Interrupt_Fired:	
   377                           ; 1 bytes @ 0x0
   378                           
   379                           
   380                           	psect	cstackBANK0
   381     0040                     __pcstackBANK0:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0040                     ?_PWM_On_20_Percent_Duty_Cycle:
   385     0040                     ?_Button_ISR_Executables:	
   386                           ; 1 bytes @ 0x0
   387                           
   388     0040                     ?_main:	
   389                           ; 1 bytes @ 0x0
   390                           
   391     0040                     ?_ISRs:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0040                     ?_PWM_Enable:	
   395                           ; 1 bytes @ 0x0
   396                           
   397     0040                     ?_Button_Interrupt_Fired:	
   398                           ; 1 bytes @ 0x0
   399                           
   400     0040                     Button_Interrupt_Fired@status:	
   401                           ; 1 bytes @ 0x0
   402                           
   403                           
   404                           ; 1 bytes @ 0x0
   405     0040                     	ds	1
   406     0041                     ??_Button_ISR_Executables:
   407                           
   408                           ; 1 bytes @ 0x1
   409     0041                     	ds	1
   410     0042                     Button_ISR_Executables@i:
   411                           
   412                           ; 2 bytes @ 0x2
   413     0042                     	ds	2
   414     0044                     ??_ISRs:
   415                           
   416                           ; 1 bytes @ 0x4
   417     0044                     	ds	2
   418     0046                     ??_PWM_Enable:
   419     0046                     ?___lmul:	
   420                           ; 1 bytes @ 0x6
   421                           
   422     0046                     ?___lldiv:	
   423                           ; 4 bytes @ 0x6
   424                           
   425     0046                     ___lmul@multiplier:	
   426                           ; 4 bytes @ 0x6
   427                           
   428     0046                     ___lldiv@divisor:	
   429                           ; 4 bytes @ 0x6
   430                           
   431                           
   432                           ; 4 bytes @ 0x6
   433     0046                     	ds	4
   434     004A                     ___lmul@multiplicand:
   435     004A                     ___lldiv@dividend:	
   436                           ; 4 bytes @ 0xA
   437                           
   438                           
   439                           ; 4 bytes @ 0xA
   440     004A                     	ds	4
   441     004E                     ??___lmul:
   442     004E                     ??___lldiv:	
   443                           ; 1 bytes @ 0xE
   444                           
   445                           
   446                           ; 1 bytes @ 0xE
   447     004E                     	ds	1
   448     004F                     ___lmul@product:
   449     004F                     ___lldiv@quotient:	
   450                           ; 4 bytes @ 0xF
   451                           
   452                           
   453                           ; 4 bytes @ 0xF
   454     004F                     	ds	4
   455     0053                     ___lldiv@counter:
   456                           
   457                           ; 1 bytes @ 0x13
   458     0053                     	ds	1
   459     0054                     ?_PWM_Set_Duty:
   460     0054                     PWM_Set_Duty@duty:	
   461                           ; 1 bytes @ 0x14
   462                           
   463                           
   464                           ; 4 bytes @ 0x14
   465     0054                     	ds	4
   466     0058                     ??_PWM_Set_Duty:
   467                           
   468                           ; 1 bytes @ 0x18
   469     0058                     	ds	2
   470     005A                     PWM_Set_Duty@temp:
   471                           
   472                           ; 2 bytes @ 0x1A
   473     005A                     	ds	2
   474     005C                     ??_main:
   475                           
   476                           ; 1 bytes @ 0x1C
   477     005C                     	ds	4
   478     0060                     main@val:
   479                           
   480                           ; 1 bytes @ 0x20
   481     0060                     	ds	1
   482                           
   483                           	psect	maintext
   484     0152                     __pmaintext:	
   485 ;;
   486 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   487 ;;
   488 ;; *************** function _main *****************
   489 ;; Defined at:
   490 ;;		line 18 in file "main.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  val             1   32[BANK0 ] unsigned char 
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, status,2, status,0, pclath, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : B00/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0
   504 ;;      Params:         0       0
   505 ;;      Locals:         0       1
   506 ;;      Temps:          0       4
   507 ;;      Totals:         0       5
   508 ;;Total ram usage:        5 bytes
   509 ;; Hardware stack levels required when called: 6
   510 ;; This function calls:
   511 ;;		_PWM_On_20_Percent_Duty_Cycle
   512 ;;		_PWM_Set_Duty
   513 ;; This function is called by:
   514 ;;		Startup code after reset
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518     0152                     _main:	
   519                           ;psect for function _main
   520                           
   521     0152                     l944:	
   522                           ;incstack = 0
   523                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   524                           
   525                           
   526                           ;main.c: 23: PWM_On_20_Percent_Duty_Cycle();
   527     0152  219D               	fcall	_PWM_On_20_Percent_Duty_Cycle
   528     0153                     l946:
   529                           
   530                           ;main.c: 25: uint8_t val=100;
   531     0153  3064               	movlw	100
   532     0154  00E0               	movwf	main@val
   533     0155                     l948:
   534                           
   535                           ;main.c: 39: val--;
   536     0155  3001               	movlw	1
   537     0156  02E0               	subwf	main@val,f
   538     0157                     l950:
   539                           
   540                           ;main.c: 40: if(val<1){
   541     0157  0860               	movf	main@val,w
   542     0158  1D03               	btfss	3,2
   543     0159  295B               	goto	u461
   544     015A  295C               	goto	u460
   545     015B                     u461:
   546     015B  295E               	goto	l954
   547     015C                     u460:
   548     015C                     l952:
   549                           
   550                           ;main.c: 41: val=100;
   551     015C  3064               	movlw	100
   552     015D  00E0               	movwf	main@val
   553     015E                     l954:
   554                           
   555                           ;main.c: 42: };main.c: 43: PWM_Set_Duty(val);
   556     015E  0860               	movf	main@val,w
   557     015F  00DC               	movwf	??_main
   558     0160  01DD               	clrf	??_main+1
   559     0161  01DE               	clrf	??_main+2
   560     0162  01DF               	clrf	??_main+3
   561     0163  085F               	movf	??_main+3,w
   562     0164  00D7               	movwf	PWM_Set_Duty@duty+3
   563     0165  085E               	movf	??_main+2,w
   564     0166  00D6               	movwf	PWM_Set_Duty@duty+2
   565     0167  085D               	movf	??_main+1,w
   566     0168  00D5               	movwf	PWM_Set_Duty@duty+1
   567     0169  085C               	movf	??_main,w
   568     016A  00D4               	movwf	PWM_Set_Duty@duty
   569     016B  200E               	fcall	_PWM_Set_Duty
   570     016C                     l956:
   571                           
   572                           ;main.c: 44: _delay((unsigned long)((100)*(8000000/4000.0)));
   573     016C  3002               	movlw	2
   574     016D  00DE               	movwf	??_main+2
   575     016E  3004               	movlw	4
   576     016F  00DD               	movwf	??_main+1
   577     0170  30BA               	movlw	186
   578     0171  00DC               	movwf	??_main
   579     0172                     u477:
   580     0172  0BDC               	decfsz	??_main,f
   581     0173  2972               	goto	u477
   582     0174  0BDD               	decfsz	??_main+1,f
   583     0175  2972               	goto	u477
   584     0176  0BDE               	decfsz	??_main+2,f
   585     0177  2972               	goto	u477
   586     0178  0000               	nop
   587     0179  2955               	goto	l948
   588     017A  280A               	ljmp	start
   589     017B                     __end_of_main:
   590                           
   591                           	psect	text1
   592     019D                     __ptext1:	
   593 ;; *************** function _PWM_On_20_Percent_Duty_Cycle *****************
   594 ;; Defined at:
   595 ;;		line 48 in file "pwm.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, pclath, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0
   609 ;;      Params:         0       0
   610 ;;      Locals:         0       0
   611 ;;      Temps:          0       0
   612 ;;      Totals:         0       0
   613 ;;Total ram usage:        0 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 5
   616 ;; This function calls:
   617 ;;		_PWM_Enable
   618 ;;		_PWM_Set_Duty
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624     019D                     _PWM_On_20_Percent_Duty_Cycle:	
   625                           ;psect for function _PWM_On_20_Percent_Duty_Cycle
   626                           
   627     019D                     l922:	
   628                           ;incstack = 0
   629                           ; Regs used in _PWM_On_20_Percent_Duty_Cycle: [wreg+status,2+status,0+pclath+cstack]
   630                           
   631                           
   632                           ;pwm.c: 49: PWM_Enable();
   633     019D  217B               	fcall	_PWM_Enable
   634                           
   635                           ;pwm.c: 50: PWM_Set_Duty(20);
   636     019E  3000               	movlw	0
   637     019F  00D7               	movwf	PWM_Set_Duty@duty+3
   638     01A0  3000               	movlw	0
   639     01A1  00D6               	movwf	PWM_Set_Duty@duty+2
   640     01A2  3000               	movlw	0
   641     01A3  00D5               	movwf	PWM_Set_Duty@duty+1
   642     01A4  3014               	movlw	20
   643     01A5  00D4               	movwf	PWM_Set_Duty@duty
   644     01A6  200E               	fcall	_PWM_Set_Duty
   645     01A7                     l55:
   646     01A7  0008               	return
   647     01A8                     __end_of_PWM_On_20_Percent_Duty_Cycle:
   648                           
   649                           	psect	text2
   650     000E                     __ptext2:	
   651 ;; *************** function _PWM_Set_Duty *****************
   652 ;; Defined at:
   653 ;;		line 10 in file "pwm.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  duty            4   20[BANK0 ] unsigned long 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;  temp            2   26[BANK0 ] unsigned int 
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2, status,0, pclath, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0
   667 ;;      Params:         0       4
   668 ;;      Locals:         0       2
   669 ;;      Temps:          0       2
   670 ;;      Totals:         0       8
   671 ;;Total ram usage:        8 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; Hardware stack levels required when called: 4
   674 ;; This function calls:
   675 ;;		___lldiv
   676 ;;		___lmul
   677 ;; This function is called by:
   678 ;;		_main
   679 ;;		_PWM_On_20_Percent_Duty_Cycle
   680 ;;		_PWM_On_50_Percent_Duty_Cycle
   681 ;;		_PWM_On_100_Percent_Duty_Cycle
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685     000E                     _PWM_Set_Duty:	
   686                           ;psect for function _PWM_Set_Duty
   687                           
   688     000E                     l884:	
   689                           ;incstack = 0
   690                           ; Regs used in _PWM_Set_Duty: [wreg+status,2+status,0+pclath+cstack]
   691                           
   692                           
   693                           ;pwm.c: 11: if(duty>100){
   694     000E  0857               	movf	PWM_Set_Duty@duty+3,w
   695     000F  1D03               	btfss	3,2
   696     0010  281F               	goto	u390
   697     0011  0856               	movf	PWM_Set_Duty@duty+2,w
   698     0012  1D03               	btfss	3,2
   699     0013  281F               	goto	u390
   700     0014  0855               	movf	PWM_Set_Duty@duty+1,w
   701     0015  1D03               	btfss	3,2
   702     0016  281F               	goto	u390
   703     0017  3065               	movlw	101
   704     0018  0254               	subwf	PWM_Set_Duty@duty,w
   705     0019  1D03               	skipz
   706     001A  281B               	goto	u393
   707     001B                     u393:
   708     001B  1C03               	btfss	3,0
   709     001C  281E               	goto	u391
   710     001D  281F               	goto	u390
   711     001E                     u391:
   712     001E  2827               	goto	l890
   713     001F                     u390:
   714     001F                     l886:
   715                           
   716                           ;pwm.c: 12: duty=100;
   717     001F  3000               	movlw	0
   718     0020  00D7               	movwf	PWM_Set_Duty@duty+3
   719     0021  3000               	movlw	0
   720     0022  00D6               	movwf	PWM_Set_Duty@duty+2
   721     0023  3000               	movlw	0
   722     0024  00D5               	movwf	PWM_Set_Duty@duty+1
   723     0025  3064               	movlw	100
   724     0026  00D4               	movwf	PWM_Set_Duty@duty
   725     0027                     l890:	
   726                           ;pwm.c: 13: }else if(duty<0){
   727                           
   728                           
   729                           ;pwm.c: 15: };pwm.c: 16: duty*=1023;
   730     0027  3000               	movlw	0
   731     0028  00C9               	movwf	___lmul@multiplier+3
   732     0029  3000               	movlw	0
   733     002A  00C8               	movwf	___lmul@multiplier+2
   734     002B  3003               	movlw	3
   735     002C  00C7               	movwf	___lmul@multiplier+1
   736     002D  30FF               	movlw	255
   737     002E  00C6               	movwf	___lmul@multiplier
   738     002F  0857               	movf	PWM_Set_Duty@duty+3,w
   739     0030  00CD               	movwf	___lmul@multiplicand+3
   740     0031  0856               	movf	PWM_Set_Duty@duty+2,w
   741     0032  00CC               	movwf	___lmul@multiplicand+2
   742     0033  0855               	movf	PWM_Set_Duty@duty+1,w
   743     0034  00CB               	movwf	___lmul@multiplicand+1
   744     0035  0854               	movf	PWM_Set_Duty@duty,w
   745     0036  00CA               	movwf	___lmul@multiplicand
   746     0037  20E0               	fcall	___lmul
   747     0038  0849               	movf	?___lmul+3,w
   748     0039  00D7               	movwf	PWM_Set_Duty@duty+3
   749     003A  0848               	movf	?___lmul+2,w
   750     003B  00D6               	movwf	PWM_Set_Duty@duty+2
   751     003C  0847               	movf	?___lmul+1,w
   752     003D  00D5               	movwf	PWM_Set_Duty@duty+1
   753     003E  0846               	movf	?___lmul,w
   754     003F  00D4               	movwf	PWM_Set_Duty@duty
   755     0040                     l892:
   756                           
   757                           ;pwm.c: 17: duty/=100;
   758     0040  3000               	movlw	0
   759     0041  00C9               	movwf	___lldiv@divisor+3
   760     0042  3000               	movlw	0
   761     0043  00C8               	movwf	___lldiv@divisor+2
   762     0044  3000               	movlw	0
   763     0045  00C7               	movwf	___lldiv@divisor+1
   764     0046  3064               	movlw	100
   765     0047  00C6               	movwf	___lldiv@divisor
   766     0048  0857               	movf	PWM_Set_Duty@duty+3,w
   767     0049  00CD               	movwf	___lldiv@dividend+3
   768     004A  0856               	movf	PWM_Set_Duty@duty+2,w
   769     004B  00CC               	movwf	___lldiv@dividend+2
   770     004C  0855               	movf	PWM_Set_Duty@duty+1,w
   771     004D  00CB               	movwf	___lldiv@dividend+1
   772     004E  0854               	movf	PWM_Set_Duty@duty,w
   773     004F  00CA               	movwf	___lldiv@dividend
   774     0050  207A               	fcall	___lldiv
   775     0051  0849               	movf	?___lldiv+3,w
   776     0052  00D7               	movwf	PWM_Set_Duty@duty+3
   777     0053  0848               	movf	?___lldiv+2,w
   778     0054  00D6               	movwf	PWM_Set_Duty@duty+2
   779     0055  0847               	movf	?___lldiv+1,w
   780     0056  00D5               	movwf	PWM_Set_Duty@duty+1
   781     0057  0846               	movf	?___lldiv,w
   782     0058  00D4               	movwf	PWM_Set_Duty@duty
   783                           
   784                           ;pwm.c: 18: uint16_t temp=duty;
   785     0059  0855               	movf	PWM_Set_Duty@duty+1,w
   786     005A  00DB               	movwf	PWM_Set_Duty@temp+1
   787     005B  0854               	movf	PWM_Set_Duty@duty,w
   788     005C  00DA               	movwf	PWM_Set_Duty@temp
   789                           
   790                           ;pwm.c: 19: temp&=0x3FF;
   791     005D  30FF               	movlw	255
   792     005E  05DA               	andwf	PWM_Set_Duty@temp,f
   793     005F  3003               	movlw	3
   794     0060  05DB               	andwf	PWM_Set_Duty@temp+1,f
   795     0061                     l894:
   796                           
   797                           ;pwm.c: 20: PWM2DCL=(temp&0x03)<<6;
   798     0061  085A               	movf	PWM_Set_Duty@temp,w
   799     0062  3903               	andlw	3
   800     0063  00D8               	movwf	??_PWM_Set_Duty
   801     0064  3005               	movlw	5
   802     0065                     u405:
   803     0065  1003               	clrc
   804     0066  0DD8               	rlf	??_PWM_Set_Duty,f
   805     0067  3EFF               	addlw	-1
   806     0068  1D03               	skipz
   807     0069  2865               	goto	u405
   808     006A  1003               	clrc
   809     006B  0D58               	rlf	??_PWM_Set_Duty,w
   810     006C  0097               	movwf	23	;volatile
   811     006D                     l896:
   812                           
   813                           ;pwm.c: 21: PWM2DCH=(temp>>2);
   814     006D  085B               	movf	PWM_Set_Duty@temp+1,w
   815     006E  00D9               	movwf	??_PWM_Set_Duty+1
   816     006F  085A               	movf	PWM_Set_Duty@temp,w
   817     0070  00D8               	movwf	??_PWM_Set_Duty
   818     0071  1003               	clrc
   819     0072  0CD9               	rrf	??_PWM_Set_Duty+1,f
   820     0073  0CD8               	rrf	??_PWM_Set_Duty,f
   821     0074  1003               	clrc
   822     0075  0CD9               	rrf	??_PWM_Set_Duty+1,f
   823     0076  0CD8               	rrf	??_PWM_Set_Duty,f
   824     0077  0858               	movf	??_PWM_Set_Duty,w
   825     0078  0098               	movwf	24	;volatile
   826     0079                     l46:
   827     0079  0008               	return
   828     007A                     __end_of_PWM_Set_Duty:
   829                           
   830                           	psect	text3
   831     00E0                     __ptext3:	
   832 ;; *************** function ___lmul *****************
   833 ;; Defined at:
   834 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  multiplier      4    6[BANK0 ] unsigned long 
   837 ;;  multiplicand    4   10[BANK0 ] unsigned long 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  product         4   15[BANK0 ] unsigned long 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  4    6[BANK0 ] unsigned long 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0
   849 ;;      Params:         0       8
   850 ;;      Locals:         0       4
   851 ;;      Temps:          0       1
   852 ;;      Totals:         0      13
   853 ;;Total ram usage:       13 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 3
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_PWM_Set_Duty
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863     00E0                     ___lmul:	
   864                           ;psect for function ___lmul
   865                           
   866     00E0                     l846:	
   867                           ;incstack = 0
   868                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   869                           
   870     00E0  3000               	movlw	0
   871     00E1  00D2               	movwf	___lmul@product+3
   872     00E2  3000               	movlw	0
   873     00E3  00D1               	movwf	___lmul@product+2
   874     00E4  3000               	movlw	0
   875     00E5  00D0               	movwf	___lmul@product+1
   876     00E6  3000               	movlw	0
   877     00E7  00CF               	movwf	___lmul@product
   878     00E8                     l848:
   879     00E8  1C46               	btfss	___lmul@multiplier,0
   880     00E9  28EB               	goto	u271
   881     00EA  28EC               	goto	u270
   882     00EB                     u271:
   883     00EB  2903               	goto	l852
   884     00EC                     u270:
   885     00EC                     l850:
   886     00EC  084A               	movf	___lmul@multiplicand,w
   887     00ED  07CF               	addwf	___lmul@product,f
   888     00EE  084B               	movf	___lmul@multiplicand+1,w
   889     00EF  1103               	clrz
   890     00F0  1803               	skipnc
   891     00F1  3E01               	addlw	1
   892     00F2  1903               	skipnz
   893     00F3  28F5               	goto	u281
   894     00F4  07D0               	addwf	___lmul@product+1,f
   895     00F5                     u281:
   896     00F5  084C               	movf	___lmul@multiplicand+2,w
   897     00F6  1103               	clrz
   898     00F7  1803               	skipnc
   899     00F8  3E01               	addlw	1
   900     00F9  1903               	skipnz
   901     00FA  28FC               	goto	u282
   902     00FB  07D1               	addwf	___lmul@product+2,f
   903     00FC                     u282:
   904     00FC  084D               	movf	___lmul@multiplicand+3,w
   905     00FD  1103               	clrz
   906     00FE  1803               	skipnc
   907     00FF  3E01               	addlw	1
   908     0100  1903               	skipnz
   909     0101  2903               	goto	u283
   910     0102  07D2               	addwf	___lmul@product+3,f
   911     0103                     u283:
   912     0103                     l852:
   913     0103  3001               	movlw	1
   914     0104  00CE               	movwf	??___lmul
   915     0105                     u295:
   916     0105  1003               	clrc
   917     0106  0DCA               	rlf	___lmul@multiplicand,f
   918     0107  0DCB               	rlf	___lmul@multiplicand+1,f
   919     0108  0DCC               	rlf	___lmul@multiplicand+2,f
   920     0109  0DCD               	rlf	___lmul@multiplicand+3,f
   921     010A  0BCE               	decfsz	??___lmul,f
   922     010B  2905               	goto	u295
   923     010C                     l854:
   924     010C  3001               	movlw	1
   925     010D                     u305:
   926     010D  1003               	clrc
   927     010E  0CC9               	rrf	___lmul@multiplier+3,f
   928     010F  0CC8               	rrf	___lmul@multiplier+2,f
   929     0110  0CC7               	rrf	___lmul@multiplier+1,f
   930     0111  0CC6               	rrf	___lmul@multiplier,f
   931     0112  3EFF               	addlw	-1
   932     0113  1D03               	skipz
   933     0114  290D               	goto	u305
   934     0115  0849               	movf	___lmul@multiplier+3,w
   935     0116  0448               	iorwf	___lmul@multiplier+2,w
   936     0117  0447               	iorwf	___lmul@multiplier+1,w
   937     0118  0446               	iorwf	___lmul@multiplier,w
   938     0119  1D03               	skipz
   939     011A  291C               	goto	u311
   940     011B  291D               	goto	u310
   941     011C                     u311:
   942     011C  28E8               	goto	l848
   943     011D                     u310:
   944     011D                     l856:
   945     011D  0852               	movf	___lmul@product+3,w
   946     011E  00C9               	movwf	?___lmul+3
   947     011F  0851               	movf	___lmul@product+2,w
   948     0120  00C8               	movwf	?___lmul+2
   949     0121  0850               	movf	___lmul@product+1,w
   950     0122  00C7               	movwf	?___lmul+1
   951     0123  084F               	movf	___lmul@product,w
   952     0124  00C6               	movwf	?___lmul
   953     0125                     l170:
   954     0125  0008               	return
   955     0126                     __end_of___lmul:
   956                           
   957                           	psect	text4
   958     007A                     __ptext4:	
   959 ;; *************** function ___lldiv *****************
   960 ;; Defined at:
   961 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  divisor         4    6[BANK0 ] unsigned long 
   964 ;;  dividend        4   10[BANK0 ] unsigned long 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  quotient        4   15[BANK0 ] unsigned long 
   967 ;;  counter         1   19[BANK0 ] unsigned char 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  4    6[BANK0 ] unsigned long 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0
   977 ;;      Params:         0       8
   978 ;;      Locals:         0       5
   979 ;;      Temps:          0       1
   980 ;;      Totals:         0      14
   981 ;;Total ram usage:       14 bytes
   982 ;; Hardware stack levels used: 1
   983 ;; Hardware stack levels required when called: 3
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_PWM_Set_Duty
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991     007A                     ___lldiv:	
   992                           ;psect for function ___lldiv
   993                           
   994     007A                     l860:	
   995                           ;incstack = 0
   996                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   997                           
   998     007A  3000               	movlw	0
   999     007B  00D2               	movwf	___lldiv@quotient+3
  1000     007C  3000               	movlw	0
  1001     007D  00D1               	movwf	___lldiv@quotient+2
  1002     007E  3000               	movlw	0
  1003     007F  00D0               	movwf	___lldiv@quotient+1
  1004     0080  3000               	movlw	0
  1005     0081  00CF               	movwf	___lldiv@quotient
  1006     0082  0849               	movf	___lldiv@divisor+3,w
  1007     0083  0448               	iorwf	___lldiv@divisor+2,w
  1008     0084  0447               	iorwf	___lldiv@divisor+1,w
  1009     0085  0446               	iorwf	___lldiv@divisor,w
  1010     0086  1903               	skipnz
  1011     0087  2889               	goto	u321
  1012     0088  288A               	goto	u320
  1013     0089                     u321:
  1014     0089  28D7               	goto	l880
  1015     008A                     u320:
  1016     008A                     l862:
  1017     008A  01D3               	clrf	___lldiv@counter
  1018     008B  0AD3               	incf	___lldiv@counter,f
  1019     008C  289A               	goto	l866
  1020     008D                     l864:
  1021     008D  3001               	movlw	1
  1022     008E  00CE               	movwf	??___lldiv
  1023     008F                     u335:
  1024     008F  1003               	clrc
  1025     0090  0DC6               	rlf	___lldiv@divisor,f
  1026     0091  0DC7               	rlf	___lldiv@divisor+1,f
  1027     0092  0DC8               	rlf	___lldiv@divisor+2,f
  1028     0093  0DC9               	rlf	___lldiv@divisor+3,f
  1029     0094  0BCE               	decfsz	??___lldiv,f
  1030     0095  288F               	goto	u335
  1031     0096  3001               	movlw	1
  1032     0097  00CE               	movwf	??___lldiv
  1033     0098  084E               	movf	??___lldiv,w
  1034     0099  07D3               	addwf	___lldiv@counter,f
  1035     009A                     l866:
  1036     009A  1FC9               	btfss	___lldiv@divisor+3,7
  1037     009B  289D               	goto	u341
  1038     009C  289E               	goto	u340
  1039     009D                     u341:
  1040     009D  288D               	goto	l864
  1041     009E                     u340:
  1042     009E                     l868:
  1043     009E  3001               	movlw	1
  1044     009F  00CE               	movwf	??___lldiv
  1045     00A0                     u355:
  1046     00A0  1003               	clrc
  1047     00A1  0DCF               	rlf	___lldiv@quotient,f
  1048     00A2  0DD0               	rlf	___lldiv@quotient+1,f
  1049     00A3  0DD1               	rlf	___lldiv@quotient+2,f
  1050     00A4  0DD2               	rlf	___lldiv@quotient+3,f
  1051     00A5  0BCE               	decfsz	??___lldiv,f
  1052     00A6  28A0               	goto	u355
  1053     00A7                     l870:
  1054     00A7  0849               	movf	___lldiv@divisor+3,w
  1055     00A8  024D               	subwf	___lldiv@dividend+3,w
  1056     00A9  1D03               	skipz
  1057     00AA  28B5               	goto	u365
  1058     00AB  0848               	movf	___lldiv@divisor+2,w
  1059     00AC  024C               	subwf	___lldiv@dividend+2,w
  1060     00AD  1D03               	skipz
  1061     00AE  28B5               	goto	u365
  1062     00AF  0847               	movf	___lldiv@divisor+1,w
  1063     00B0  024B               	subwf	___lldiv@dividend+1,w
  1064     00B1  1D03               	skipz
  1065     00B2  28B5               	goto	u365
  1066     00B3  0846               	movf	___lldiv@divisor,w
  1067     00B4  024A               	subwf	___lldiv@dividend,w
  1068     00B5                     u365:
  1069     00B5  1C03               	skipc
  1070     00B6  28B8               	goto	u361
  1071     00B7  28B9               	goto	u360
  1072     00B8                     u361:
  1073     00B8  28C8               	goto	l876
  1074     00B9                     u360:
  1075     00B9                     l872:
  1076     00B9  0846               	movf	___lldiv@divisor,w
  1077     00BA  02CA               	subwf	___lldiv@dividend,f
  1078     00BB  0847               	movf	___lldiv@divisor+1,w
  1079     00BC  1C03               	skipc
  1080     00BD  0F47               	incfsz	___lldiv@divisor+1,w
  1081     00BE  02CB               	subwf	___lldiv@dividend+1,f
  1082     00BF  0848               	movf	___lldiv@divisor+2,w
  1083     00C0  1C03               	skipc
  1084     00C1  0F48               	incfsz	___lldiv@divisor+2,w
  1085     00C2  02CC               	subwf	___lldiv@dividend+2,f
  1086     00C3  0849               	movf	___lldiv@divisor+3,w
  1087     00C4  1C03               	skipc
  1088     00C5  0F49               	incfsz	___lldiv@divisor+3,w
  1089     00C6  02CD               	subwf	___lldiv@dividend+3,f
  1090     00C7                     l874:
  1091     00C7  144F               	bsf	___lldiv@quotient,0
  1092     00C8                     l876:
  1093     00C8  3001               	movlw	1
  1094     00C9                     u375:
  1095     00C9  1003               	clrc
  1096     00CA  0CC9               	rrf	___lldiv@divisor+3,f
  1097     00CB  0CC8               	rrf	___lldiv@divisor+2,f
  1098     00CC  0CC7               	rrf	___lldiv@divisor+1,f
  1099     00CD  0CC6               	rrf	___lldiv@divisor,f
  1100     00CE  3EFF               	addlw	-1
  1101     00CF  1D03               	skipz
  1102     00D0  28C9               	goto	u375
  1103     00D1                     l878:
  1104     00D1  3001               	movlw	1
  1105     00D2  02D3               	subwf	___lldiv@counter,f
  1106     00D3  1D03               	btfss	3,2
  1107     00D4  28D6               	goto	u381
  1108     00D5  28D7               	goto	u380
  1109     00D6                     u381:
  1110     00D6  289E               	goto	l868
  1111     00D7                     u380:
  1112     00D7                     l880:
  1113     00D7  0852               	movf	___lldiv@quotient+3,w
  1114     00D8  00C9               	movwf	?___lldiv+3
  1115     00D9  0851               	movf	___lldiv@quotient+2,w
  1116     00DA  00C8               	movwf	?___lldiv+2
  1117     00DB  0850               	movf	___lldiv@quotient+1,w
  1118     00DC  00C7               	movwf	?___lldiv+1
  1119     00DD  084F               	movf	___lldiv@quotient,w
  1120     00DE  00C6               	movwf	?___lldiv
  1121     00DF                     l192:
  1122     00DF  0008               	return
  1123     00E0                     __end_of___lldiv:
  1124                           
  1125                           	psect	text5
  1126     017B                     __ptext5:	
  1127 ;; *************** function _PWM_Enable *****************
  1128 ;; Defined at:
  1129 ;;		line 24 in file "pwm.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0
  1143 ;;      Params:         0       0
  1144 ;;      Locals:         0       0
  1145 ;;      Temps:          0       1
  1146 ;;      Totals:         0       1
  1147 ;;Total ram usage:        1 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 3
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_PWM_On_20_Percent_Duty_Cycle
  1154 ;;		_PWM_On_50_Percent_Duty_Cycle
  1155 ;;		_PWM_On_100_Percent_Duty_Cycle
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159     017B                     _PWM_Enable:	
  1160                           ;psect for function _PWM_Enable
  1161                           
  1162     017B                     l898:	
  1163                           ;incstack = 0
  1164                           ; Regs used in _PWM_Enable: [wreg+status,2+status,0]
  1165                           
  1166                           
  1167                           ;pwm.c: 25: ANSELA|= (1<<0x01U);
  1168     017B  1488               	bsf	8,1	;volatile
  1169                           
  1170                           ;pwm.c: 26: TRISA |= (1<<0x01U);
  1171     017C  1486               	bsf	6,1	;volatile
  1172     017D                     l900:
  1173                           
  1174                           ;pwm.c: 27: PR2 = 0xFF;
  1175     017D  30FF               	movlw	255
  1176     017E  0092               	movwf	18	;volatile
  1177                           
  1178                           ;pwm.c: 28: T2CON = (1<<0)|(1<<2);
  1179     017F  3005               	movlw	5
  1180     0180  0093               	movwf	19	;volatile
  1181     0181                     l902:
  1182                           
  1183                           ;pwm.c: 29: PIR1 &=~(1<<1);
  1184     0181  30FD               	movlw	253
  1185     0182  00C6               	movwf	??_PWM_Enable
  1186     0183  0846               	movf	??_PWM_Enable,w
  1187     0184  058C               	andwf	12,f	;volatile
  1188     0185                     l904:
  1189                           
  1190                           ;pwm.c: 30: PWM2DCH = 0xFF;
  1191     0185  30FF               	movlw	255
  1192     0186  0098               	movwf	24	;volatile
  1193     0187                     l906:
  1194                           
  1195                           ;pwm.c: 31: PWM2DCL = 0xC0;
  1196     0187  30C0               	movlw	192
  1197     0188  0097               	movwf	23	;volatile
  1198     0189                     l908:
  1199                           
  1200                           ;pwm.c: 32: PWM2CON = (1<<6)|(1<<7);
  1201     0189  30C0               	movlw	192
  1202     018A  0099               	movwf	25	;volatile
  1203                           
  1204                           ;pwm.c: 33: TRISA &=~(1<<0x01U);
  1205     018B  30FD               	movlw	253
  1206     018C  00C6               	movwf	??_PWM_Enable
  1207     018D  0846               	movf	??_PWM_Enable,w
  1208     018E  0586               	andwf	6,f	;volatile
  1209     018F                     l49:
  1210     018F  0008               	return
  1211     0190                     __end_of_PWM_Enable:
  1212                           
  1213                           	psect	text6
  1214     01A8                     __ptext6:	
  1215 ;; *************** function _ISRs *****************
  1216 ;; Defined at:
  1217 ;;		line 49 in file "main.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, pclath, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0
  1231 ;;      Params:         0       0
  1232 ;;      Locals:         0       0
  1233 ;;      Temps:          0       2
  1234 ;;      Totals:         0       2
  1235 ;;Total ram usage:        2 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; Hardware stack levels required when called: 2
  1238 ;; This function calls:
  1239 ;;		_Button_ISR_Executables
  1240 ;; This function is called by:
  1241 ;;		Interrupt level 1
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245     01A8                     _ISRs:	
  1246                           ;psect for function _ISRs
  1247                           
  1248     01A8                     i1l958:
  1249                           
  1250                           ;main.c: 50: Button_ISR_Executables();
  1251     01A8  2126               	fcall	_Button_ISR_Executables
  1252     01A9                     i1l22:
  1253     01A9  0845               	movf	??_ISRs+1,w
  1254     01AA  008A               	movwf	10
  1255     01AB  0E44               	swapf	??_ISRs,w
  1256     01AC  0083               	movwf	3
  1257     01AD  0EFE               	swapf	btemp,f
  1258     01AE  0E7E               	swapf	btemp,w
  1259     01AF  0009               	retfie
  1260     01B0                     __end_of_ISRs:
  1261                           
  1262                           	psect	intentry
  1263     0004                     __pintentry:	
  1264                           ;incstack = 0
  1265                           ; Regs used in _ISRs: [wreg+status,2+status,0+pclath+cstack]
  1266                           
  1267     0004                     interrupt_function:
  1268     007E                     saved_w	set	btemp
  1269     0004  00FE               	movwf	btemp
  1270     0005  0E03               	swapf	3,w
  1271     0006  00C4               	movwf	??_ISRs
  1272     0007  080A               	movf	10,w
  1273     0008  00C5               	movwf	??_ISRs+1
  1274     0009  29A8               	ljmp	_ISRs
  1275                           
  1276                           	psect	text7
  1277     0126                     __ptext7:	
  1278 ;; *************** function _Button_ISR_Executables *****************
  1279 ;; Defined at:
  1280 ;;		line 69 in file "button.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  i               2    2[BANK0 ] unsigned int 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, pclath, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0
  1294 ;;      Params:         0       0
  1295 ;;      Locals:         0       2
  1296 ;;      Temps:          0       1
  1297 ;;      Totals:         0       3
  1298 ;;Total ram usage:        3 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 1
  1301 ;; This function calls:
  1302 ;;		_Button_Interrupt_Fired
  1303 ;; This function is called by:
  1304 ;;		_ISRs
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308     0126                     _Button_ISR_Executables:	
  1309                           ;psect for function _Button_ISR_Executables
  1310                           
  1311     0126                     i1l924:	
  1312                           ;incstack = 0
  1313                           ; Regs used in _Button_ISR_Executables: [wreg+status,2+status,0+pclath+cstack]
  1314                           
  1315                           
  1316                           ;button.c: 70: if(Button_Interrupt_Fired()){
  1317     0126  2190               	fcall	_Button_Interrupt_Fired
  1318     0127  3A00               	xorlw	0
  1319     0128  1903               	skipnz
  1320     0129  292B               	goto	u43_21
  1321     012A  292C               	goto	u43_20
  1322     012B                     u43_21:
  1323     012B  2951               	goto	i1l152
  1324     012C                     u43_20:
  1325     012C                     i1l926:
  1326                           
  1327                           ;button.c: 76: for(uint16_t i=0; i<10000;i++){
  1328     012C  01C2               	clrf	Button_ISR_Executables@i
  1329     012D  01C3               	clrf	Button_ISR_Executables@i+1
  1330     012E                     i1l149:
  1331                           
  1332                           ;button.c: 77: __nop();
  1333     012E  0000               	nop
  1334     012F                     i1l932:
  1335     012F  3001               	movlw	1
  1336     0130  07C2               	addwf	Button_ISR_Executables@i,f
  1337     0131  1803               	skipnc
  1338     0132  0AC3               	incf	Button_ISR_Executables@i+1,f
  1339     0133  3000               	movlw	0
  1340     0134  07C3               	addwf	Button_ISR_Executables@i+1,f
  1341     0135  3027               	movlw	39
  1342     0136  0243               	subwf	Button_ISR_Executables@i+1,w
  1343     0137  3010               	movlw	16
  1344     0138  1903               	skipnz
  1345     0139  0242               	subwf	Button_ISR_Executables@i,w
  1346     013A  1C03               	skipc
  1347     013B  293D               	goto	u44_21
  1348     013C  293E               	goto	u44_20
  1349     013D                     u44_21:
  1350     013D  292E               	goto	i1l149
  1351     013E                     u44_20:
  1352     013E                     i1l934:
  1353                           
  1354                           ;button.c: 78: };button.c: 80: Button_State++;
  1355     013E  3001               	movlw	1
  1356     013F  00C1               	movwf	??_Button_ISR_Executables
  1357     0140  0841               	movf	??_Button_ISR_Executables,w
  1358     0141  07E1               	addwf	_Button_State,f	;volatile
  1359     0142                     i1l936:
  1360                           
  1361                           ;button.c: 81: if(Button_State > (4U - 1)){
  1362     0142  3004               	movlw	4
  1363     0143  0261               	subwf	_Button_State,w	;volatile
  1364     0144  1C03               	skipc
  1365     0145  2947               	goto	u45_21
  1366     0146  2948               	goto	u45_20
  1367     0147                     u45_21:
  1368     0147  2949               	goto	i1l940
  1369     0148                     u45_20:
  1370     0148                     i1l938:
  1371                           
  1372                           ;button.c: 82: Button_State = 0;
  1373     0148  01E1               	clrf	_Button_State	;volatile
  1374     0149                     i1l940:
  1375                           
  1376                           ;button.c: 83: };button.c: 84: IOCAF &=~ (0x01<<0x00U);
  1377     0149  30FE               	movlw	254
  1378     014A  00C1               	movwf	??_Button_ISR_Executables
  1379     014B  0841               	movf	??_Button_ISR_Executables,w
  1380     014C  059C               	andwf	28,f	;volatile
  1381     014D                     i1l942:
  1382                           
  1383                           ;button.c: 85: INTCON &=~ (0x01<<0x00U);
  1384     014D  30FE               	movlw	254
  1385     014E  00C1               	movwf	??_Button_ISR_Executables
  1386     014F  0841               	movf	??_Button_ISR_Executables,w
  1387     0150  058B               	andwf	11,f	;volatile
  1388     0151                     i1l152:
  1389     0151  0008               	return
  1390     0152                     __end_of_Button_ISR_Executables:
  1391                           
  1392                           	psect	text8
  1393     0190                     __ptext8:	
  1394 ;; *************** function _Button_Interrupt_Fired *****************
  1395 ;; Defined at:
  1396 ;;		line 59 in file "button.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  status          1    0[BANK0 ] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      unsigned char 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0
  1410 ;;      Params:         0       0
  1411 ;;      Locals:         0       1
  1412 ;;      Temps:          0       0
  1413 ;;      Totals:         0       1
  1414 ;;Total ram usage:        1 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_Button_ISR_Executables
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423     0190                     _Button_Interrupt_Fired:	
  1424                           ;psect for function _Button_Interrupt_Fired
  1425                           
  1426     0190                     i1l910:	
  1427                           ;incstack = 0
  1428                           ; Regs used in _Button_Interrupt_Fired: [wreg+status,2]
  1429                           
  1430                           
  1431                           ;button.c: 60: uint8_t status = 0;
  1432     0190  01C0               	clrf	Button_Interrupt_Fired@status
  1433     0191                     i1l912:
  1434                           
  1435                           ;button.c: 61: if(INTCON & (0x01<<0x00U)){
  1436     0191  1C0B               	btfss	11,0	;volatile
  1437     0192  2994               	goto	u41_21
  1438     0193  2995               	goto	u41_20
  1439     0194                     u41_21:
  1440     0194  299B               	goto	i1l918
  1441     0195                     u41_20:
  1442     0195                     i1l914:
  1443                           
  1444                           ;button.c: 62: if(IOCAF & (0x01<<0x00U)){
  1445     0195  1C1C               	btfss	28,0	;volatile
  1446     0196  2998               	goto	u42_21
  1447     0197  2999               	goto	u42_20
  1448     0198                     u42_21:
  1449     0198  299B               	goto	i1l918
  1450     0199                     u42_20:
  1451     0199                     i1l916:
  1452                           
  1453                           ;button.c: 63: status =1;
  1454     0199  01C0               	clrf	Button_Interrupt_Fired@status
  1455     019A  0AC0               	incf	Button_Interrupt_Fired@status,f
  1456     019B                     i1l918:
  1457                           
  1458                           ;button.c: 64: };button.c: 65: };button.c: 66: return status;
  1459     019B  0840               	movf	Button_Interrupt_Fired@status,w
  1460     019C                     i1l145:
  1461     019C  0008               	return
  1462     019D                     __end_of_Button_Interrupt_Fired:
  1463     007E                     btemp	set	126	;btemp
  1464     007E                     wtemp0	set	126
  1465                           
  1466                           	psect	config
  1467                           
  1468                           ;Config register CONFIG @ 0x2007
  1469                           ;	Oscillator Selection bits
  1470                           ;	FOSC = INTOSC, INTOSC oscillator: CLKIN function disabled
  1471                           ;	Brown-out Reset Enable
  1472                           ;	BOREN = OFF, Brown-out Reset disabled
  1473                           ;	Watchdog Timer Enable
  1474                           ;	WDTE = OFF, WDT disabled
  1475                           ;	Power-up Timer Enable bit
  1476                           ;	PWRTE = OFF, PWRT disabled
  1477                           ;	MCLR Pin Function Select bit
  1478                           ;	MCLRE = ON, MCLR pin function is MCLR
  1479                           ;	Code Protection bit
  1480                           ;	CP = OFF, Program memory code protection is disabled
  1481                           ;	Low-Voltage Programming Enable
  1482                           ;	LVP = ON, Low-voltage programming enabled
  1483                           ;	Brown-out Reset Selection bits
  1484                           ;	LPBOR = OFF, BOR disabled
  1485                           ;	Brown-out Reset Voltage Selection
  1486                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1487                           ;	Flash Memory Self-Write Protection
  1488                           ;	WRT = OFF, Write protection off
  1489     2007                     	org	8199
  1490     2007  3DE0               	dw	15840

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     33      34

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRs in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PWM_Set_Duty
    _PWM_On_20_Percent_Duty_Cycle->_PWM_Set_Duty
    _PWM_Set_Duty->___lldiv

Critical Paths under _ISRs in BANK0

    _ISRs->_Button_ISR_Executables
    _Button_ISR_Executables->_Button_Interrupt_Fired

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2047
                                             28 BANK0      5     5      0
       _PWM_On_20_Percent_Duty_Cycle
                       _PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (1) _PWM_On_20_Percent_Duty_Cycle                         0     0      0    1000
                         _PWM_Enable
                       _PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (1) _PWM_Set_Duty                                         8     4      4    1000
                                             20 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              6 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              6 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _PWM_Enable                                           1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISRs                                                 2     2      0      70
                                              4 BANK0      2     2      0
             _Button_ISR_Executables
 ---------------------------------------------------------------------------------
 (5) _Button_ISR_Executables                               3     3      0      70
                                              1 BANK0      3     3      0
             _Button_Interrupt_Fired
 ---------------------------------------------------------------------------------
 (6) _Button_Interrupt_Fired                               1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_On_20_Percent_Duty_Cycle
     _PWM_Enable
     _PWM_Set_Duty
       ___lldiv
       ___lmul
   _PWM_Set_Duty

 _ISRs (ROOT)
   _Button_ISR_Executables
     _Button_Interrupt_Fired

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               3E     21      22       3       54.8%
ABS                  0      0      22       4        0.0%
DATA                 0      0      22       5        0.0%
BITBANK0            3E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu May 11 20:03:17 2023

              _Button_ISR_Executables 0126                            _PWM_Enable 017B  
                                  l46 0079                                    l55 01A7  
                                  l49 018F                                   l170 0125  
                                 l192 00DF                                   l900 017D  
                                 l902 0181                                   l904 0185  
                                 l906 0187                                   l850 00EC  
                                 l922 019D                                   l908 0189  
                                 l860 007A                                   l852 0103  
                                 l870 00A7                                   l862 008A  
                                 l854 010C                                   l846 00E0  
                                 l950 0157                                   l872 00B9  
                                 l864 008D                                   l880 00D7  
                                 l856 011D                                   l848 00E8  
                                 l952 015C                                   l944 0152  
                                 l874 00C7                                   l866 009A  
                                 l890 0027                                   l954 015E  
                                 l946 0153                                   l876 00C8  
                                 l868 009E                                   l892 0040  
                                 l884 000E                                   l956 016C  
                                 l948 0155                                   l878 00D1  
                                 l894 0061                                   l886 001F  
                                 l896 006D                                   l898 017B  
                                 u310 011D                                   u311 011C  
                                 u320 008A                                   u321 0089  
                                 u305 010D                                   u340 009E  
                                 u341 009D                                   u405 0065  
                                 u270 00EC                                   _PR2 0012  
                                 u335 008F                                   u271 00EB  
                                 u360 00B9                                   u361 00B8  
                                 u281 00F5                                   u282 00FC  
                                 u355 00A0                                   u283 0103  
                                 u380 00D7                                   u460 015C  
                                 u381 00D6                                   u365 00B5  
                                 u461 015B                                   u390 001F  
                                 u375 00C9                                   u295 0105  
                                 u391 001E                                   u393 001B  
                                 u477 0172                                  _LATA 0007  
                                i1l22 01A9                                  _PIR1 000C  
                                _ISRs 01A8                                  _WPUA 0009  
                                _main 0152                                  btemp 007E  
                                start 000A                          _PWM_Set_Duty 000E  
__end_of_PWM_On_20_Percent_Duty_Cycle 01A8          _PWM_On_20_Percent_Duty_Cycle 019D  
                               ?_ISRs 0040                                 ?_main 0040  
                               _ADCON 001F                       __end_of___lldiv 00E0  
                               _T2CON 0013                                 _IOCAF 001C  
                               _IOCAN 001B                      PWM_Set_Duty@duty 0054  
                               i1l152 0151                                 i1l145 019C  
                               i1l149 012E                      PWM_Set_Duty@temp 005A  
                               i1l910 0190                                 i1l912 0191  
                               i1l914 0195                                 i1l916 0199  
                               i1l940 0149                                 i1l932 012F  
                               i1l924 0126                                 i1l918 019B  
                               i1l942 014D                                 i1l934 013E  
                               i1l926 012C                                 i1l936 0142  
                               i1l938 0148                                 i1l958 01A8  
                               u41_20 0195                                 u41_21 0194  
                               u42_20 0199                                 u42_21 0198  
                               u43_20 012C                                 u43_21 012B  
                               u44_20 013E                                 u44_21 013D  
                               u45_20 0148                                 u45_21 0147  
                               _TRISA 0006                   ___lmul@multiplicand 004A  
                               pclath 000A                                 status 0003  
                               wtemp0 007E                          __end_of_ISRs 01B0  
                     __initialization 000B                          __end_of_main 017B  
                         ?_PWM_Enable 0040                                ??_ISRs 0044  
                              ??_main 005C                                _ANSELA 0008  
                              _INTCON 000B                                _FVRCON 001D  
                              _OSCCON 0010                                _WDTCON 0030  
                              ___lmul 00E0                             ??___lldiv 004E  
             ?_Button_Interrupt_Fired 0040                                saved_w 007E  
             __end_of__initialization 000C               ?_Button_ISR_Executables 0040  
                      __pcstackCOMMON 0000        __end_of_Button_Interrupt_Fired 019D  
                          __pbssBANK0 0061        __end_of_Button_ISR_Executables 0152  
                          __pmaintext 0152                               ?___lmul 0046  
                          __pintentry 0004                        ___lmul@product 004F  
                             _CLKRCON 0026                               _PWM2DCH 0018  
                             _PWM2DCL 0017                               _PWM2CON 0019  
                             _VREGCON 003E                          ??_PWM_Enable 0046  
                             ___lldiv 007A                               __ptext1 019D  
                             __ptext2 000E                               __ptext3 00E0  
                             __ptext4 007A                               __ptext5 017B  
                             __ptext6 01A8                               __ptext7 0126  
                             __ptext8 0190                               main@val 0060  
                end_of_initialization 000C                    __end_of_PWM_Enable 0190  
                     ___lldiv@divisor 0046                       ___lldiv@counter 0053  
                      __end_of___lmul 0126         ?_PWM_On_20_Percent_Duty_Cycle 0040  
                 start_initialization 000B                          _Button_State 0061  
             Button_ISR_Executables@i 0042                         ?_PWM_Set_Duty 0054  
                            ??___lmul 004E                             ___latbits 0000  
                       __pcstackBANK0 0040          Button_Interrupt_Fired@status 0040  
                      ??_PWM_Set_Duty 0058                              ?___lldiv 0046  
      ??_PWM_On_20_Percent_Duty_Cycle 0000                     interrupt_function 0004  
            ??_Button_Interrupt_Fired 0000              ??_Button_ISR_Executables 0041  
                   ___lmul@multiplier 0046                  __end_of_PWM_Set_Duty 007A  
                            intlevel1 0000                      ___lldiv@dividend 004A  
              _Button_Interrupt_Fired 0190                            _OPTION_REG 000E  
                    ___lldiv@quotient 004F  
