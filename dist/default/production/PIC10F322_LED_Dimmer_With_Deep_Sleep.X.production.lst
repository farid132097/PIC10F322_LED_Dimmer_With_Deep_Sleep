

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 05 22:53:48 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	10F322
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.32
    27                           ; Generated 23/11/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC10F322 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0020                     	;# 
    96     0020                     	;# 
    97     0021                     	;# 
    98     0022                     	;# 
    99     0022                     	;# 
   100     0023                     	;# 
   101     0024                     	;# 
   102     0025                     	;# 
   103     0026                     	;# 
   104     0027                     	;# 
   105     0027                     	;# 
   106     0028                     	;# 
   107     0029                     	;# 
   108     002A                     	;# 
   109     002A                     	;# 
   110     002B                     	;# 
   111     002C                     	;# 
   112     002D                     	;# 
   113     002E                     	;# 
   114     0030                     	;# 
   115     0031                     	;# 
   116     0032                     	;# 
   117     0033                     	;# 
   118     0034                     	;# 
   119     0035                     	;# 
   120     0036                     	;# 
   121     0037                     	;# 
   122     0038                     	;# 
   123     0039                     	;# 
   124     003A                     	;# 
   125     003B                     	;# 
   126     003C                     	;# 
   127     003D                     	;# 
   128     003E                     	;# 
   129     003F                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000F                     	;# 
   146     0010                     	;# 
   147     0011                     	;# 
   148     0012                     	;# 
   149     0013                     	;# 
   150     0014                     	;# 
   151     0015                     	;# 
   152     0016                     	;# 
   153     0016                     	;# 
   154     0017                     	;# 
   155     0018                     	;# 
   156     0019                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001C                     	;# 
   161     001D                     	;# 
   162     001E                     	;# 
   163     001F                     	;# 
   164     0020                     	;# 
   165     0020                     	;# 
   166     0021                     	;# 
   167     0022                     	;# 
   168     0022                     	;# 
   169     0023                     	;# 
   170     0024                     	;# 
   171     0025                     	;# 
   172     0026                     	;# 
   173     0027                     	;# 
   174     0027                     	;# 
   175     0028                     	;# 
   176     0029                     	;# 
   177     002A                     	;# 
   178     002A                     	;# 
   179     002B                     	;# 
   180     002C                     	;# 
   181     002D                     	;# 
   182     002E                     	;# 
   183     0030                     	;# 
   184     0031                     	;# 
   185     0032                     	;# 
   186     0033                     	;# 
   187     0034                     	;# 
   188     0035                     	;# 
   189     0036                     	;# 
   190     0037                     	;# 
   191     0038                     	;# 
   192     0039                     	;# 
   193     003A                     	;# 
   194     003B                     	;# 
   195     003C                     	;# 
   196     003D                     	;# 
   197     003E                     	;# 
   198     003F                     	;# 
   199     0000                     	;# 
   200     0001                     	;# 
   201     0002                     	;# 
   202     0003                     	;# 
   203     0004                     	;# 
   204     0005                     	;# 
   205     0006                     	;# 
   206     0007                     	;# 
   207     0008                     	;# 
   208     0009                     	;# 
   209     000A                     	;# 
   210     000B                     	;# 
   211     000C                     	;# 
   212     000D                     	;# 
   213     000E                     	;# 
   214     000F                     	;# 
   215     0010                     	;# 
   216     0011                     	;# 
   217     0012                     	;# 
   218     0013                     	;# 
   219     0014                     	;# 
   220     0015                     	;# 
   221     0016                     	;# 
   222     0016                     	;# 
   223     0017                     	;# 
   224     0018                     	;# 
   225     0019                     	;# 
   226     0019                     	;# 
   227     001A                     	;# 
   228     001B                     	;# 
   229     001C                     	;# 
   230     001D                     	;# 
   231     001E                     	;# 
   232     001F                     	;# 
   233     0020                     	;# 
   234     0020                     	;# 
   235     0021                     	;# 
   236     0022                     	;# 
   237     0022                     	;# 
   238     0023                     	;# 
   239     0024                     	;# 
   240     0025                     	;# 
   241     0026                     	;# 
   242     0027                     	;# 
   243     0027                     	;# 
   244     0028                     	;# 
   245     0029                     	;# 
   246     002A                     	;# 
   247     002A                     	;# 
   248     002B                     	;# 
   249     002C                     	;# 
   250     002D                     	;# 
   251     002E                     	;# 
   252     0030                     	;# 
   253     0031                     	;# 
   254     0032                     	;# 
   255     0033                     	;# 
   256     0034                     	;# 
   257     0035                     	;# 
   258     0036                     	;# 
   259     0037                     	;# 
   260     0038                     	;# 
   261     0039                     	;# 
   262     003A                     	;# 
   263     003B                     	;# 
   264     003C                     	;# 
   265     003D                     	;# 
   266     003E                     	;# 
   267     003F                     	;# 
   268     0000                     	;# 
   269     0001                     	;# 
   270     0002                     	;# 
   271     0003                     	;# 
   272     0004                     	;# 
   273     0005                     	;# 
   274     0006                     	;# 
   275     0007                     	;# 
   276     0008                     	;# 
   277     0009                     	;# 
   278     000A                     	;# 
   279     000B                     	;# 
   280     000C                     	;# 
   281     000D                     	;# 
   282     000E                     	;# 
   283     000F                     	;# 
   284     0010                     	;# 
   285     0011                     	;# 
   286     0012                     	;# 
   287     0013                     	;# 
   288     0014                     	;# 
   289     0015                     	;# 
   290     0016                     	;# 
   291     0016                     	;# 
   292     0017                     	;# 
   293     0018                     	;# 
   294     0019                     	;# 
   295     0019                     	;# 
   296     001A                     	;# 
   297     001B                     	;# 
   298     001C                     	;# 
   299     001D                     	;# 
   300     001E                     	;# 
   301     001F                     	;# 
   302     0020                     	;# 
   303     0020                     	;# 
   304     0021                     	;# 
   305     0022                     	;# 
   306     0022                     	;# 
   307     0023                     	;# 
   308     0024                     	;# 
   309     0025                     	;# 
   310     0026                     	;# 
   311     0027                     	;# 
   312     0027                     	;# 
   313     0028                     	;# 
   314     0029                     	;# 
   315     002A                     	;# 
   316     002A                     	;# 
   317     002B                     	;# 
   318     002C                     	;# 
   319     002D                     	;# 
   320     002E                     	;# 
   321     0030                     	;# 
   322     0031                     	;# 
   323     0032                     	;# 
   324     0033                     	;# 
   325     0034                     	;# 
   326     0035                     	;# 
   327     0036                     	;# 
   328     0037                     	;# 
   329     0038                     	;# 
   330     0039                     	;# 
   331     003A                     	;# 
   332     003B                     	;# 
   333     003C                     	;# 
   334     003D                     	;# 
   335     003E                     	;# 
   336     003F                     	;# 
   337     001C                     _IOCAF	set	28
   338     000B                     _INTCON	set	11
   339     001B                     _IOCAN	set	27
   340     001F                     _ADCON	set	31
   341     003E                     _VREGCON	set	62
   342     001D                     _FVRCON	set	29
   343     0030                     _WDTCON	set	48
   344     0026                     _CLKRCON	set	38
   345     0010                     _OSCCON	set	16
   346     0007                     _LATA	set	7
   347     0008                     _ANSELA	set	8
   348     0006                     _TRISA	set	6
   349                           
   350                           	psect	cinit
   351     000B                     start_initialization:	
   352                           ; #config settings
   353                           
   354     000B                     __initialization:
   355                           
   356                           ; Clear objects allocated to BANK0
   357     000B  01C7               	clrf	__pbssBANK0& (0+127)
   358     000C                     end_of_initialization:	
   359                           ;End of C runtime variable initialization code
   360                           
   361     000C                     __end_of__initialization:
   362     000C  0183               	clrf	3
   363     000D  285B               	ljmp	_main	;jump to C main() function
   364                           
   365                           	psect	bssBANK0
   366     0047                     __pbssBANK0:
   367     0047                     _Button_State:
   368     0047                     	ds	1
   369                           
   370                           	psect	cstackCOMMON
   371     0000                     __pcstackCOMMON:
   372     0000                     ??_Sleep_Init:
   373     0000                     ??_Button_Get_State:	
   374                           ; 1 bytes @ 0x0
   375                           
   376     0000                     ??_main:	
   377                           ; 1 bytes @ 0x0
   378                           
   379     0000                     ??_Sleep_Select_Internal_8MHz_Oscillator:	
   380                           ; 1 bytes @ 0x0
   381                           
   382     0000                     ??_Sleep_Disable_FVR:	
   383                           ; 1 bytes @ 0x0
   384                           
   385     0000                     ??_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode:	
   386                           ; 1 bytes @ 0x0
   387                           
   388     0000                     ??_Button_Interrupt_Fired:	
   389                           ; 1 bytes @ 0x0
   390                           
   391                           
   392                           	psect	cstackBANK0
   393     0040                     __pcstackBANK0:	
   394                           ; 1 bytes @ 0x0
   395                           
   396     0040                     ?_Button_Init:
   397     0040                     ?_PWM_Init:	
   398                           ; 1 bytes @ 0x0
   399                           
   400     0040                     ?_Sleep_Init:	
   401                           ; 1 bytes @ 0x0
   402                           
   403     0040                     ?_Button_Get_State:	
   404                           ; 1 bytes @ 0x0
   405                           
   406     0040                     ?_Button_ISR_Executables:	
   407                           ; 1 bytes @ 0x0
   408                           
   409     0040                     ?_main:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0040                     ?_ISRs:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0040                     ?_Sleep_Select_Internal_8MHz_Oscillator:	
   416                           ; 1 bytes @ 0x0
   417                           
   418     0040                     ?_Sleep_Disable_Reference_Clock_Output:	
   419                           ; 1 bytes @ 0x0
   420                           
   421     0040                     ?_Sleep_Disable_Watchdog:	
   422                           ; 1 bytes @ 0x0
   423                           
   424     0040                     ?_Sleep_Disable_FVR:	
   425                           ; 1 bytes @ 0x0
   426                           
   427     0040                     ?_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode:	
   428                           ; 1 bytes @ 0x0
   429                           
   430     0040                     ?_Sleep_Disable_ADC:	
   431                           ; 1 bytes @ 0x0
   432                           
   433     0040                     ?_Button_Interrupt_Fired:	
   434                           ; 1 bytes @ 0x0
   435                           
   436     0040                     Button_Interrupt_Fired@status:	
   437                           ; 1 bytes @ 0x0
   438                           
   439                           
   440                           ; 1 bytes @ 0x0
   441     0040                     	ds	1
   442     0041                     ??_Button_ISR_Executables:
   443                           
   444                           ; 1 bytes @ 0x1
   445     0041                     	ds	1
   446     0042                     Button_ISR_Executables@i:
   447                           
   448                           ; 2 bytes @ 0x2
   449     0042                     	ds	2
   450     0044                     ??_ISRs:
   451                           
   452                           ; 1 bytes @ 0x4
   453     0044                     	ds	2
   454     0046                     ??_Button_Init:
   455     0046                     ??_PWM_Init:	
   456                           ; 1 bytes @ 0x6
   457                           
   458     0046                     ??_Sleep_Disable_Reference_Clock_Output:	
   459                           ; 1 bytes @ 0x6
   460                           
   461     0046                     ??_Sleep_Disable_Watchdog:	
   462                           ; 1 bytes @ 0x6
   463                           
   464     0046                     ??_Sleep_Disable_ADC:	
   465                           ; 1 bytes @ 0x6
   466                           
   467                           
   468                           ; 1 bytes @ 0x6
   469     0046                     	ds	1
   470                           
   471                           	psect	maintext
   472     005B                     __pmaintext:	
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 16 in file "main.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0, pclath, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : B00/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0
   492 ;;      Params:         0       0
   493 ;;      Locals:         0       0
   494 ;;      Temps:          0       0
   495 ;;      Totals:         0       0
   496 ;;Total ram usage:        0 bytes
   497 ;; Hardware stack levels required when called: 5
   498 ;; This function calls:
   499 ;;		_Button_Get_State
   500 ;;		_Button_Init
   501 ;;		_PWM_Init
   502 ;;		_Sleep_Init
   503 ;; This function is called by:
   504 ;;		Startup code after reset
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508     005B                     _main:	
   509                           ;psect for function _main
   510                           
   511     005B                     l799:	
   512                           ;incstack = 0
   513                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   514                           
   515                           
   516                           ;main.c: 18: Button_Init();
   517     005B  203A               	fcall	_Button_Init
   518                           
   519                           ;main.c: 19: PWM_Init();
   520     005C  2084               	fcall	_PWM_Init
   521                           
   522                           ;main.c: 20: Sleep_Init();
   523     005D  20A4               	fcall	_Sleep_Init
   524     005E                     l801:
   525                           
   526                           ;main.c: 24: if(Button_Get_State() == 0){
   527     005E  20BE               	fcall	_Button_Get_State
   528     005F  3A00               	xorlw	0
   529     0060  1D03               	skipz
   530     0061  2863               	goto	u261
   531     0062  2864               	goto	u260
   532     0063                     u261:
   533     0063  2865               	goto	l805
   534     0064                     u260:
   535     0064  285E               	goto	l801
   536     0065                     l805:
   537     0065  20BE               	fcall	_Button_Get_State
   538     0066  3A01               	xorlw	1
   539     0067  1D03               	skipz
   540     0068  286A               	goto	u271
   541     0069  286B               	goto	u270
   542     006A                     u271:
   543     006A  286C               	goto	l809
   544     006B                     u270:
   545     006B  285E               	goto	l801
   546     006C                     l809:
   547     006C  20BE               	fcall	_Button_Get_State
   548     006D  3A02               	xorlw	2
   549     006E  1D03               	skipz
   550     006F  2871               	goto	u281
   551     0070  2872               	goto	u280
   552     0071                     u281:
   553     0071  2873               	goto	l813
   554     0072                     u280:
   555     0072  285E               	goto	l801
   556     0073                     l813:
   557     0073  20BE               	fcall	_Button_Get_State
   558     0074  285E               	goto	l801
   559     0075  280A               	ljmp	start
   560     0076                     __end_of_main:
   561                           
   562                           	psect	text1
   563     00A4                     __ptext1:	
   564 ;; *************** function _Sleep_Init *****************
   565 ;; Defined at:
   566 ;;		line 71 in file "sleep.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0
   580 ;;      Params:         0       0
   581 ;;      Locals:         0       0
   582 ;;      Temps:          0       0
   583 ;;      Totals:         0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used: 1
   586 ;; Hardware stack levels required when called: 4
   587 ;; This function calls:
   588 ;;		_Sleep_Disable_ADC
   589 ;;		_Sleep_Disable_FVR
   590 ;;		_Sleep_Disable_Reference_Clock_Output
   591 ;;		_Sleep_Disable_Watchdog
   592 ;;		_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode
   593 ;;		_Sleep_Select_Internal_8MHz_Oscillator
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599     00A4                     _Sleep_Init:	
   600                           ;psect for function _Sleep_Init
   601                           
   602     00A4                     l769:	
   603                           ;incstack = 0
   604                           ; Regs used in _Sleep_Init: [wreg+status,2+status,0+pclath+cstack]
   605                           
   606                           
   607                           ;sleep.c: 72: Sleep_Select_Internal_8MHz_Oscillator();
   608     00A4  2091               	fcall	_Sleep_Select_Internal_8MHz_Oscillator
   609                           
   610                           ;sleep.c: 73: Sleep_Disable_Reference_Clock_Output();
   611     00A5  20B0               	fcall	_Sleep_Disable_Reference_Clock_Output
   612                           
   613                           ;sleep.c: 74: Sleep_Disable_Watchdog();
   614     00A6  20AB               	fcall	_Sleep_Disable_Watchdog
   615                           
   616                           ;sleep.c: 75: Sleep_Disable_ADC();
   617     00A7  20B5               	fcall	_Sleep_Disable_ADC
   618     00A8                     l771:
   619                           
   620                           ;sleep.c: 76: Sleep_Disable_FVR();
   621     00A8  20BC               	fcall	_Sleep_Disable_FVR
   622     00A9                     l773:
   623                           
   624                           ;sleep.c: 77: Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode();
   625     00A9  20BA               	fcall	_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode
   626     00AA                     l87:
   627     00AA  0008               	return
   628     00AB                     __end_of_Sleep_Init:
   629                           
   630                           	psect	text2
   631     0091                     __ptext2:	
   632 ;; *************** function _Sleep_Select_Internal_8MHz_Oscillator *****************
   633 ;; Defined at:
   634 ;;		line 45 in file "sleep.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0
   648 ;;      Params:         0       0
   649 ;;      Locals:         0       0
   650 ;;      Temps:          0       0
   651 ;;      Totals:         0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used: 1
   654 ;; Hardware stack levels required when called: 3
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		_Sleep_Init
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662     0091                     _Sleep_Select_Internal_8MHz_Oscillator:	
   663                           ;psect for function _Sleep_Select_Internal_8MHz_Oscillator
   664                           
   665     0091                     l725:	
   666                           ;incstack = 0
   667                           ; Regs used in _Sleep_Select_Internal_8MHz_Oscillator: [wreg]
   668                           
   669                           
   670                           ;sleep.c: 46: OSCCON = (0x06<<0x04U);
   671     0091  3060               	movlw	96
   672     0092  0090               	movwf	16	;volatile
   673     0093                     l63:	
   674                           ;sleep.c: 47: while((OSCCON & (0x01<<0x03U)) == 0);
   675                           
   676     0093  1D90               	btfss	16,3	;volatile
   677     0094  2896               	goto	u151
   678     0095  2897               	goto	u150
   679     0096                     u151:
   680     0096  2893               	goto	l63
   681     0097                     u150:
   682     0097                     l66:
   683     0097  1C10               	btfss	16,0	;volatile
   684     0098  289A               	goto	u161
   685     0099  289B               	goto	u160
   686     009A                     u161:
   687     009A  2897               	goto	l66
   688     009B                     u160:
   689     009B                     l69:
   690     009B  0008               	return
   691     009C                     __end_of_Sleep_Select_Internal_8MHz_Oscillator:
   692                           
   693                           	psect	text3
   694     00BA                     __ptext3:	
   695 ;; *************** function _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode *****************
   696 ;; Defined at:
   697 ;;		line 63 in file "sleep.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		None
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0
   711 ;;      Params:         0       0
   712 ;;      Locals:         0       0
   713 ;;      Temps:          0       0
   714 ;;      Totals:         0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 3
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_Sleep_Init
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725     00BA                     _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode:	
   726                           ;psect for function _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode
   727                           
   728     00BA                     l733:	
   729                           ;incstack = 0
   730                           ; Regs used in _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode: []
   731                           
   732                           
   733                           ;sleep.c: 64: VREGCON |= (0x01<<0x01U);
   734     00BA  14BE               	bsf	62,1	;volatile
   735     00BB                     l81:
   736     00BB  0008               	return
   737     00BC                     __end_of_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode:
   738                           
   739                           	psect	text4
   740     00AB                     __ptext4:	
   741 ;; *************** function _Sleep_Disable_Watchdog *****************
   742 ;; Defined at:
   743 ;;		line 55 in file "sleep.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0
   757 ;;      Params:         0       0
   758 ;;      Locals:         0       0
   759 ;;      Temps:          0       1
   760 ;;      Totals:         0       1
   761 ;;Total ram usage:        1 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 3
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_Sleep_Init
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771     00AB                     _Sleep_Disable_Watchdog:	
   772                           ;psect for function _Sleep_Disable_Watchdog
   773                           
   774     00AB                     l729:	
   775                           ;incstack = 0
   776                           ; Regs used in _Sleep_Disable_Watchdog: [wreg+status,2+status,0]
   777                           
   778                           
   779                           ;sleep.c: 56: WDTCON &=~ (0x01<<0x00U);
   780     00AB  30FE               	movlw	254
   781     00AC  00C6               	movwf	??_Sleep_Disable_Watchdog
   782     00AD  0846               	movf	??_Sleep_Disable_Watchdog,w
   783     00AE  05B0               	andwf	48,f	;volatile
   784     00AF                     l75:
   785     00AF  0008               	return
   786     00B0                     __end_of_Sleep_Disable_Watchdog:
   787                           
   788                           	psect	text5
   789     00B0                     __ptext5:	
   790 ;; *************** function _Sleep_Disable_Reference_Clock_Output *****************
   791 ;; Defined at:
   792 ;;		line 51 in file "sleep.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0
   806 ;;      Params:         0       0
   807 ;;      Locals:         0       0
   808 ;;      Temps:          0       1
   809 ;;      Totals:         0       1
   810 ;;Total ram usage:        1 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 3
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_Sleep_Init
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820     00B0                     _Sleep_Disable_Reference_Clock_Output:	
   821                           ;psect for function _Sleep_Disable_Reference_Clock_Output
   822                           
   823     00B0                     l727:	
   824                           ;incstack = 0
   825                           ; Regs used in _Sleep_Disable_Reference_Clock_Output: [wreg+status,2+status,0]
   826                           
   827                           
   828                           ;sleep.c: 52: CLKRCON &=~ (0x01<<0x06U);
   829     00B0  30BF               	movlw	191
   830     00B1  00C6               	movwf	??_Sleep_Disable_Reference_Clock_Output
   831     00B2  0846               	movf	??_Sleep_Disable_Reference_Clock_Output,w
   832     00B3  05A6               	andwf	38,f	;volatile
   833     00B4                     l72:
   834     00B4  0008               	return
   835     00B5                     __end_of_Sleep_Disable_Reference_Clock_Output:
   836                           
   837                           	psect	text6
   838     00BC                     __ptext6:	
   839 ;; *************** function _Sleep_Disable_FVR *****************
   840 ;; Defined at:
   841 ;;		line 59 in file "sleep.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		status,2
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0
   855 ;;      Params:         0       0
   856 ;;      Locals:         0       0
   857 ;;      Temps:          0       0
   858 ;;      Totals:         0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; Hardware stack levels required when called: 3
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_Sleep_Init
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869     00BC                     _Sleep_Disable_FVR:	
   870                           ;psect for function _Sleep_Disable_FVR
   871                           
   872     00BC                     l731:	
   873                           ;incstack = 0
   874                           ; Regs used in _Sleep_Disable_FVR: [status,2]
   875                           
   876                           
   877                           ;sleep.c: 60: FVRCON = 0x00;
   878     00BC  019D               	clrf	29	;volatile
   879     00BD                     l78:
   880     00BD  0008               	return
   881     00BE                     __end_of_Sleep_Disable_FVR:
   882                           
   883                           	psect	text7
   884     00B5                     __ptext7:	
   885 ;; *************** function _Sleep_Disable_ADC *****************
   886 ;; Defined at:
   887 ;;		line 67 in file "sleep.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0
   901 ;;      Params:         0       0
   902 ;;      Locals:         0       0
   903 ;;      Temps:          0       1
   904 ;;      Totals:         0       1
   905 ;;Total ram usage:        1 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 3
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_Sleep_Init
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915     00B5                     _Sleep_Disable_ADC:	
   916                           ;psect for function _Sleep_Disable_ADC
   917                           
   918     00B5                     l735:	
   919                           ;incstack = 0
   920                           ; Regs used in _Sleep_Disable_ADC: [wreg+status,2+status,0]
   921                           
   922                           
   923                           ;sleep.c: 68: ADCON &=~ (0x01<<0x00U);
   924     00B5  30FE               	movlw	254
   925     00B6  00C6               	movwf	??_Sleep_Disable_ADC
   926     00B7  0846               	movf	??_Sleep_Disable_ADC,w
   927     00B8  059F               	andwf	31,f	;volatile
   928     00B9                     l84:
   929     00B9  0008               	return
   930     00BA                     __end_of_Sleep_Disable_ADC:
   931                           
   932                           	psect	text8
   933     0084                     __ptext8:	
   934 ;; *************** function _PWM_Init *****************
   935 ;; Defined at:
   936 ;;		line 11 in file "pwm.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0
   950 ;;      Params:         0       0
   951 ;;      Locals:         0       0
   952 ;;      Temps:          0       1
   953 ;;      Totals:         0       1
   954 ;;Total ram usage:        1 bytes
   955 ;; Hardware stack levels used: 1
   956 ;; Hardware stack levels required when called: 3
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964     0084                     _PWM_Init:	
   965                           ;psect for function _PWM_Init
   966                           
   967     0084                     l767:	
   968                           ;incstack = 0
   969                           ; Regs used in _PWM_Init: [wreg+status,2+status,0]
   970                           
   971                           
   972                           ;pwm.c: 12: TRISA &=~ (1<<2U);
   973     0084  30FB               	movlw	251
   974     0085  00C6               	movwf	??_PWM_Init
   975     0086  0846               	movf	??_PWM_Init,w
   976     0087  0586               	andwf	6,f	;volatile
   977                           
   978                           ;pwm.c: 13: ANSELA &=~ (1<<2U);
   979     0088  30FB               	movlw	251
   980     0089  00C6               	movwf	??_PWM_Init
   981     008A  0846               	movf	??_PWM_Init,w
   982     008B  0588               	andwf	8,f	;volatile
   983                           
   984                           ;pwm.c: 14: LATA &=~ (1<<2U);
   985     008C  30FB               	movlw	251
   986     008D  00C6               	movwf	??_PWM_Init
   987     008E  0846               	movf	??_PWM_Init,w
   988     008F  0587               	andwf	7,f	;volatile
   989     0090                     l39:
   990     0090  0008               	return
   991     0091                     __end_of_PWM_Init:
   992                           
   993                           	psect	text9
   994     003A                     __ptext9:	
   995 ;; *************** function _Button_Init *****************
   996 ;; Defined at:
   997 ;;		line 36 in file "button.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0
  1011 ;;      Params:         0       0
  1012 ;;      Locals:         0       0
  1013 ;;      Temps:          0       1
  1014 ;;      Totals:         0       1
  1015 ;;Total ram usage:        1 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 3
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025     003A                     _Button_Init:	
  1026                           ;psect for function _Button_Init
  1027                           
  1028     003A                     l749:	
  1029                           ;incstack = 0
  1030                           ; Regs used in _Button_Init: [wreg+status,2+status,0]
  1031                           
  1032                           
  1033                           ;button.c: 37: TRISA |= (0x01<<0x00U);
  1034     003A  1406               	bsf	6,0	;volatile
  1035     003B                     l751:
  1036                           
  1037                           ;button.c: 38: ANSELA&=~ (0x01<<0x00U);
  1038     003B  30FE               	movlw	254
  1039     003C  00C6               	movwf	??_Button_Init
  1040     003D  0846               	movf	??_Button_Init,w
  1041     003E  0588               	andwf	8,f	;volatile
  1042     003F                     l753:
  1043                           
  1044                           ;button.c: 39: IOCAN |= (0x01<<0x00U);
  1045     003F  141B               	bsf	27,0	;volatile
  1046     0040                     l755:
  1047                           
  1048                           ;button.c: 40: if((INTCON & (0x01<<0x03U)) == 0){
  1049     0040  198B               	btfsc	11,3	;volatile
  1050     0041  2843               	goto	u191
  1051     0042  2844               	goto	u190
  1052     0043                     u191:
  1053     0043  2845               	goto	l104
  1054     0044                     u190:
  1055     0044                     l757:
  1056                           
  1057                           ;button.c: 41: INTCON |= (0x01<<0x03U);
  1058     0044  158B               	bsf	11,3	;volatile
  1059     0045                     l104:
  1060                           
  1061                           ;button.c: 42: };button.c: 43: if((INTCON & (0x01<<0x07U)) == 0){
  1062     0045  1B8B               	btfsc	11,7	;volatile
  1063     0046  2848               	goto	u201
  1064     0047  2849               	goto	u200
  1065     0048                     u201:
  1066     0048  284A               	goto	l105
  1067     0049                     u200:
  1068     0049                     l759:
  1069                           
  1070                           ;button.c: 44: INTCON |= (0x01<<0x07U);
  1071     0049  178B               	bsf	11,7	;volatile
  1072     004A                     l105:
  1073                           
  1074                           ;button.c: 45: };button.c: 46: if((INTCON & (0x01<<0x00U)) == 0){
  1075     004A  180B               	btfsc	11,0	;volatile
  1076     004B  284D               	goto	u211
  1077     004C  284E               	goto	u210
  1078     004D                     u211:
  1079     004D  2852               	goto	l763
  1080     004E                     u210:
  1081     004E                     l761:
  1082                           
  1083                           ;button.c: 47: INTCON &=~ (0x01<<0x00U);
  1084     004E  30FE               	movlw	254
  1085     004F  00C6               	movwf	??_Button_Init
  1086     0050  0846               	movf	??_Button_Init,w
  1087     0051  058B               	andwf	11,f	;volatile
  1088     0052                     l763:
  1089                           
  1090                           ;button.c: 48: };button.c: 49: if(IOCAF & (0x01<<0x00U)){
  1091     0052  1C1C               	btfss	28,0	;volatile
  1092     0053  2855               	goto	u221
  1093     0054  2856               	goto	u220
  1094     0055                     u221:
  1095     0055  285A               	goto	l108
  1096     0056                     u220:
  1097     0056                     l765:
  1098                           
  1099                           ;button.c: 50: IOCAF &=~ (0x01<<0x00U);
  1100     0056  30FE               	movlw	254
  1101     0057  00C6               	movwf	??_Button_Init
  1102     0058  0846               	movf	??_Button_Init,w
  1103     0059  059C               	andwf	28,f	;volatile
  1104     005A                     l108:
  1105     005A  0008               	return
  1106     005B                     __end_of_Button_Init:
  1107                           
  1108                           	psect	text10
  1109     00BE                     __ptext10:	
  1110 ;; *************** function _Button_Get_State *****************
  1111 ;; Defined at:
  1112 ;;		line 54 in file "button.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      unsigned char 
  1119 ;; Registers used:
  1120 ;;		wreg
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0
  1126 ;;      Params:         0       0
  1127 ;;      Locals:         0       0
  1128 ;;      Temps:          0       0
  1129 ;;      Totals:         0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; Hardware stack levels required when called: 3
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140     00BE                     _Button_Get_State:	
  1141                           ;psect for function _Button_Get_State
  1142                           
  1143     00BE                     l775:	
  1144                           ;incstack = 0
  1145                           ; Regs used in _Button_Get_State: [wreg]
  1146                           
  1147                           
  1148                           ;button.c: 55: return Button_State;
  1149     00BE  0847               	movf	_Button_State,w	;volatile
  1150     00BF                     l111:
  1151     00BF  0008               	return
  1152     00C0                     __end_of_Button_Get_State:
  1153                           
  1154                           	psect	text11
  1155     009C                     __ptext11:	
  1156 ;; *************** function _ISRs *****************
  1157 ;; Defined at:
  1158 ;;		line 44 in file "main.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0
  1172 ;;      Params:         0       0
  1173 ;;      Locals:         0       0
  1174 ;;      Temps:          0       2
  1175 ;;      Totals:         0       2
  1176 ;;Total ram usage:        2 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 2
  1179 ;; This function calls:
  1180 ;;		_Button_ISR_Executables
  1181 ;; This function is called by:
  1182 ;;		Interrupt level 1
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186     009C                     _ISRs:	
  1187                           ;psect for function _ISRs
  1188                           
  1189     009C                     i1l815:
  1190                           
  1191                           ;main.c: 45: Button_ISR_Executables();
  1192     009C  200E               	fcall	_Button_ISR_Executables
  1193     009D                     i1l30:
  1194     009D  0845               	movf	??_ISRs+1,w
  1195     009E  008A               	movwf	10
  1196     009F  0E44               	swapf	??_ISRs,w
  1197     00A0  0083               	movwf	3
  1198     00A1  0EFE               	swapf	btemp,f
  1199     00A2  0E7E               	swapf	btemp,w
  1200     00A3  0009               	retfie
  1201     00A4                     __end_of_ISRs:
  1202                           
  1203                           	psect	intentry
  1204     0004                     __pintentry:	
  1205                           ;incstack = 0
  1206                           ; Regs used in _ISRs: [wreg+status,2+status,0+pclath+cstack]
  1207                           
  1208     0004                     interrupt_function:
  1209     007E                     saved_w	set	btemp
  1210     0004  00FE               	movwf	btemp
  1211     0005  0E03               	swapf	3,w
  1212     0006  00C4               	movwf	??_ISRs
  1213     0007  080A               	movf	10,w
  1214     0008  00C5               	movwf	??_ISRs+1
  1215     0009  289C               	ljmp	_ISRs
  1216                           
  1217                           	psect	text12
  1218     000E                     __ptext12:	
  1219 ;; *************** function _Button_ISR_Executables *****************
  1220 ;; Defined at:
  1221 ;;		line 68 in file "button.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  i               2    2[BANK0 ] unsigned int 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, pclath, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0
  1235 ;;      Params:         0       0
  1236 ;;      Locals:         0       2
  1237 ;;      Temps:          0       1
  1238 ;;      Totals:         0       3
  1239 ;;Total ram usage:        3 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; Hardware stack levels required when called: 1
  1242 ;; This function calls:
  1243 ;;		_Button_Interrupt_Fired
  1244 ;; This function is called by:
  1245 ;;		_ISRs
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249     000E                     _Button_ISR_Executables:	
  1250                           ;psect for function _Button_ISR_Executables
  1251                           
  1252     000E                     i1l779:	
  1253                           ;incstack = 0
  1254                           ; Regs used in _Button_ISR_Executables: [wreg+status,2+status,0+pclath+cstack]
  1255                           
  1256                           
  1257                           ;button.c: 69: if(Button_Interrupt_Fired()){
  1258     000E  2076               	fcall	_Button_Interrupt_Fired
  1259     000F  3A00               	xorlw	0
  1260     0010  1903               	skipnz
  1261     0011  2813               	goto	u23_21
  1262     0012  2814               	goto	u23_20
  1263     0013                     u23_21:
  1264     0013  2839               	goto	i1l123
  1265     0014                     u23_20:
  1266     0014                     i1l781:
  1267                           
  1268                           ;button.c: 73: for(uint16_t i=0; i<10000;i++){
  1269     0014  01C2               	clrf	Button_ISR_Executables@i
  1270     0015  01C3               	clrf	Button_ISR_Executables@i+1
  1271     0016                     i1l120:
  1272                           
  1273                           ;button.c: 74: __nop();
  1274     0016  0000               	nop
  1275     0017                     i1l787:
  1276     0017  3001               	movlw	1
  1277     0018  07C2               	addwf	Button_ISR_Executables@i,f
  1278     0019  1803               	skipnc
  1279     001A  0AC3               	incf	Button_ISR_Executables@i+1,f
  1280     001B  3000               	movlw	0
  1281     001C  07C3               	addwf	Button_ISR_Executables@i+1,f
  1282     001D  3027               	movlw	39
  1283     001E  0243               	subwf	Button_ISR_Executables@i+1,w
  1284     001F  3010               	movlw	16
  1285     0020  1903               	skipnz
  1286     0021  0242               	subwf	Button_ISR_Executables@i,w
  1287     0022  1C03               	skipc
  1288     0023  2825               	goto	u24_21
  1289     0024  2826               	goto	u24_20
  1290     0025                     u24_21:
  1291     0025  2816               	goto	i1l120
  1292     0026                     u24_20:
  1293     0026                     i1l789:
  1294                           
  1295                           ;button.c: 75: };button.c: 77: Button_State++;
  1296     0026  3001               	movlw	1
  1297     0027  00C1               	movwf	??_Button_ISR_Executables
  1298     0028  0841               	movf	??_Button_ISR_Executables,w
  1299     0029  07C7               	addwf	_Button_State,f	;volatile
  1300     002A                     i1l791:
  1301                           
  1302                           ;button.c: 78: if(Button_State > (4U - 1)){
  1303     002A  3004               	movlw	4
  1304     002B  0247               	subwf	_Button_State,w	;volatile
  1305     002C  1C03               	skipc
  1306     002D  282F               	goto	u25_21
  1307     002E  2830               	goto	u25_20
  1308     002F                     u25_21:
  1309     002F  2831               	goto	i1l795
  1310     0030                     u25_20:
  1311     0030                     i1l793:
  1312                           
  1313                           ;button.c: 79: Button_State = 0;
  1314     0030  01C7               	clrf	_Button_State	;volatile
  1315     0031                     i1l795:
  1316                           
  1317                           ;button.c: 80: };button.c: 81: IOCAF &=~ (0x01<<0x00U);
  1318     0031  30FE               	movlw	254
  1319     0032  00C1               	movwf	??_Button_ISR_Executables
  1320     0033  0841               	movf	??_Button_ISR_Executables,w
  1321     0034  059C               	andwf	28,f	;volatile
  1322     0035                     i1l797:
  1323                           
  1324                           ;button.c: 82: INTCON &=~ (0x01<<0x00U);
  1325     0035  30FE               	movlw	254
  1326     0036  00C1               	movwf	??_Button_ISR_Executables
  1327     0037  0841               	movf	??_Button_ISR_Executables,w
  1328     0038  058B               	andwf	11,f	;volatile
  1329     0039                     i1l123:
  1330     0039  0008               	return
  1331     003A                     __end_of_Button_ISR_Executables:
  1332                           
  1333                           	psect	text13
  1334     0076                     __ptext13:	
  1335 ;; *************** function _Button_Interrupt_Fired *****************
  1336 ;; Defined at:
  1337 ;;		line 58 in file "button.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  status          1    0[BANK0 ] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      unsigned char 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0
  1351 ;;      Params:         0       0
  1352 ;;      Locals:         0       1
  1353 ;;      Temps:          0       0
  1354 ;;      Totals:         0       1
  1355 ;;Total ram usage:        1 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; This function calls:
  1358 ;;		Nothing
  1359 ;; This function is called by:
  1360 ;;		_Button_ISR_Executables
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364     0076                     _Button_Interrupt_Fired:	
  1365                           ;psect for function _Button_Interrupt_Fired
  1366                           
  1367     0076                     i1l737:	
  1368                           ;incstack = 0
  1369                           ; Regs used in _Button_Interrupt_Fired: [wreg+status,2+status,0]
  1370                           
  1371                           
  1372                           ;button.c: 59: uint8_t status = 0;
  1373     0076  01C0               	clrf	Button_Interrupt_Fired@status
  1374     0077                     i1l739:
  1375                           
  1376                           ;button.c: 60: if(INTCON && (0x01<<0x00U)){
  1377     0077  080B               	movf	11,w	;volatile
  1378     0078  1903               	btfsc	3,2
  1379     0079  287B               	goto	u17_21
  1380     007A  287C               	goto	u17_20
  1381     007B                     u17_21:
  1382     007B  2882               	goto	i1l745
  1383     007C                     u17_20:
  1384     007C                     i1l741:
  1385                           
  1386                           ;button.c: 61: if(IOCAF & (0x01<<0x00U)){
  1387     007C  1C1C               	btfss	28,0	;volatile
  1388     007D  287F               	goto	u18_21
  1389     007E  2880               	goto	u18_20
  1390     007F                     u18_21:
  1391     007F  2882               	goto	i1l745
  1392     0080                     u18_20:
  1393     0080                     i1l743:
  1394                           
  1395                           ;button.c: 62: status =1;
  1396     0080  01C0               	clrf	Button_Interrupt_Fired@status
  1397     0081  0AC0               	incf	Button_Interrupt_Fired@status,f
  1398     0082                     i1l745:
  1399                           
  1400                           ;button.c: 63: };button.c: 64: };button.c: 65: return status;
  1401     0082  0840               	movf	Button_Interrupt_Fired@status,w
  1402     0083                     i1l116:
  1403     0083  0008               	return
  1404     0084                     __end_of_Button_Interrupt_Fired:
  1405     007E                     btemp	set	126	;btemp
  1406     007E                     wtemp0	set	126
  1407                           
  1408                           	psect	config
  1409                           
  1410                           ;Config register CONFIG @ 0x2007
  1411                           ;	Oscillator Selection bits
  1412                           ;	FOSC = INTOSC, INTOSC oscillator: CLKIN function disabled
  1413                           ;	Brown-out Reset Enable
  1414                           ;	BOREN = OFF, Brown-out Reset disabled
  1415                           ;	Watchdog Timer Enable
  1416                           ;	WDTE = OFF, WDT disabled
  1417                           ;	Power-up Timer Enable bit
  1418                           ;	PWRTE = OFF, PWRT disabled
  1419                           ;	MCLR Pin Function Select bit
  1420                           ;	MCLRE = ON, MCLR pin function is MCLR
  1421                           ;	Code Protection bit
  1422                           ;	CP = OFF, Program memory code protection is disabled
  1423                           ;	Low-Voltage Programming Enable
  1424                           ;	LVP = ON, Low-voltage programming enabled
  1425                           ;	Brown-out Reset Selection bits
  1426                           ;	LPBOR = OFF, BOR disabled
  1427                           ;	Brown-out Reset Voltage Selection
  1428                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1429                           ;	Flash Memory Self-Write Protection
  1430                           ;	WRT = OFF, Write protection off
  1431     2007                     	org	8199
  1432     2007  3DE0               	dw	15840

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      7       8

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRs in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Button_Init
    _main->_PWM_Init
    _Sleep_Init->_Sleep_Disable_ADC
    _Sleep_Init->_Sleep_Disable_Reference_Clock_Output
    _Sleep_Init->_Sleep_Disable_Watchdog

Critical Paths under _ISRs in BANK0

    _ISRs->_Button_ISR_Executables
    _Button_ISR_Executables->_Button_Interrupt_Fired

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                   _Button_Get_State
                        _Button_Init
                           _PWM_Init
                         _Sleep_Init
 ---------------------------------------------------------------------------------
 (1) _Sleep_Init                                           0     0      0       0
                  _Sleep_Disable_ADC
                  _Sleep_Disable_FVR
_Sleep_Disable_Reference_Clock_Outpu
             _Sleep_Disable_Watchdog
_Sleep_Enable_Voltage_Regulator_In_L
_Sleep_Select_Internal_8MHz_Oscillat
 ---------------------------------------------------------------------------------
 (2) _Sleep_Select_Internal_8MHz_Oscillator                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Disable_Watchdog                               1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Disable_Reference_Clock_Output                 1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Disable_FVR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Disable_ADC                                    1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Button_Init                                          1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Button_Get_State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISRs                                                 2     2      0      70
                                              4 BANK0      2     2      0
             _Button_ISR_Executables
 ---------------------------------------------------------------------------------
 (4) _Button_ISR_Executables                               3     3      0      70
                                              1 BANK0      3     3      0
             _Button_Interrupt_Fired
 ---------------------------------------------------------------------------------
 (5) _Button_Interrupt_Fired                               1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Button_Get_State
   _Button_Init
   _PWM_Init
   _Sleep_Init
     _Sleep_Disable_ADC
     _Sleep_Disable_FVR
     _Sleep_Disable_Reference_Clock_Output
     _Sleep_Disable_Watchdog
     _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode
     _Sleep_Select_Internal_8MHz_Oscillator

 _ISRs (ROOT)
   _Button_ISR_Executables
     _Button_Interrupt_Fired

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               3E      7       8       3       12.9%
ABS                  0      0       8       4        0.0%
DATA                 0      0       8       5        0.0%
BITBANK0            3E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 05 22:53:48 2023

                                  _Button_ISR_Executables 000E  
                                                      l39 0090  
                                                      l63 0093  
                                                      l72 00B4  
                                                      l81 00BB  
                                                      l66 0097  
                                                      l75 00AF  
                                                      l84 00B9  
                                                      l69 009B  
                                                      l78 00BD  
                                                      l87 00AA  
                                                     l111 00BF  
                                                     l104 0045  
                                                     l105 004A  
                                                     l108 005A  
                                                     l801 005E  
                                                     l731 00BC  
                                                     l733 00BA  
                                                     l725 0091  
                                                     l813 0073  
                                                     l805 0065  
                                                     l751 003B  
                                                     l735 00B5  
                                                     l727 00B0  
                                                     l761 004E  
                                                     l753 003F  
                                                     l729 00AB  
                                                     l809 006C  
                                                     l763 0052  
                                                     l755 0040  
                                                     l771 00A8  
                                                     l765 0056  
                                                     l757 0044  
                                                     l749 003A  
                                                     l773 00A9  
                                                     l775 00BE  
                                                     l759 0049  
                                                     l767 0084  
                                                     l769 00A4  
                                                     l799 005B  
                                                     u200 0049  
                                                     u201 0048  
                                                     u210 004E  
                                                     u211 004D  
                                                     u220 0056  
                                                     u221 0055  
                                                     u150 0097  
                                                     u151 0096  
                                                     u160 009B  
                                                     u161 009A  
                                                     u260 0064  
                                                     u261 0063  
                                                     u190 0044  
                                                     u270 006B  
                                                     u191 0043  
                                                     u271 006A  
                                                     u280 0072  
                                                     u281 0071  
                                       _Sleep_Disable_ADC 00B5  
                                       _Sleep_Disable_FVR 00BC  
                                      ?_Sleep_Disable_ADC 0040  
                                      ?_Sleep_Disable_FVR 0040  
                                                    _LATA 0007  
                                                    i1l30 009D  
                                                    _ISRs 009C  
                                                    _main 005B  
                                                    btemp 007E  
                                     ??_Sleep_Disable_ADC 0046  
                                     ??_Sleep_Disable_FVR 0000  
                                                    start 000A  
                                                   ?_ISRs 0040  
                                           ??_Button_Init 0046  
                                        _Button_Get_State 00BE  
                                                   ?_main 0040  
                                                   _ADCON 001F  
           __end_of_Sleep_Select_Internal_8MHz_Oscillator 009C  
                  ?_Sleep_Select_Internal_8MHz_Oscillator 0040  
                 ??_Sleep_Select_Internal_8MHz_Oscillator 0000  
                   _Sleep_Select_Internal_8MHz_Oscillator 0091  
                                                   _IOCAF 001C  
                                                   _IOCAN 001B  
                                                   i1l120 0016  
                                                   i1l123 0039  
                                                   i1l116 0083  
                                                   i1l741 007C  
                                                   i1l743 0080  
                                                   i1l815 009C  
                                                   i1l745 0082  
                                                   i1l737 0076  
                                                   i1l739 0077  
                                                   i1l781 0014  
                                                   i1l791 002A  
                                                   i1l793 0030  
                                                   i1l795 0031  
                                                   i1l787 0017  
                                                   i1l779 000E  
                                                   i1l797 0035  
                                                   i1l789 0026  
                               __end_of_Sleep_Disable_ADC 00BA  
                                                   u23_20 0014  
                                                   u23_21 0013  
                                                   u24_20 0026  
                                                   u24_21 0025  
                                                   u17_20 007C  
                                                   u25_20 0030  
                                                   u17_21 007B  
                                                   u25_21 002F  
                                                   u18_20 0080  
                                                   u18_21 007F  
                               __end_of_Sleep_Disable_FVR 00BE  
                                                   _TRISA 0006  
                                                   pclath 000A  
                                        __end_of_PWM_Init 0091  
                                                   status 0003  
                                                   wtemp0 007E  
                                            __end_of_ISRs 00A4  
                                         __initialization 000B  
                                            __end_of_main 0076  
                                                  ??_ISRs 0044  
                                                  ??_main 0000  
            __end_of_Sleep_Disable_Reference_Clock_Output 00B5  
                  ??_Sleep_Disable_Reference_Clock_Output 0046  
                   ?_Sleep_Disable_Reference_Clock_Output 0040  
                    _Sleep_Disable_Reference_Clock_Output 00B0  
                                     __end_of_Button_Init 005B  
                                                  _ANSELA 0008  
                                                  _INTCON 000B  
                                                  _FVRCON 001D  
                                  _Sleep_Disable_Watchdog 00AB  
                                                  _OSCCON 0010  
                                                  _WDTCON 0030  
                                              _Sleep_Init 00A4  
                                 ?_Button_Interrupt_Fired 0040  
                                                  saved_w 007E  
                                 __end_of__initialization 000C  
                                 ?_Button_ISR_Executables 0040  
                                          __pcstackCOMMON 0000  
                          __end_of_Button_Interrupt_Fired 0084  
                                             _Button_Init 003A  
                                               ?_PWM_Init 0040  
                                              __pbssBANK0 0047  
                                __end_of_Button_Get_State 00C0  
                          __end_of_Button_ISR_Executables 003A  
                                             ?_Sleep_Init 0040  
                                              __pmaintext 005B  
                                              __pintentry 0004  
                                                 _CLKRCON 0026  
                                              ??_PWM_Init 0046  
                                                 _VREGCON 003E  
                                                 __ptext1 00A4  
                                                 __ptext2 0091  
                                                 __ptext3 00BA  
                                                 __ptext4 00AB  
                                                 __ptext5 00B0  
                                                 __ptext6 00BC  
                                                 __ptext7 00B5  
                                                 __ptext8 0084  
                                                 __ptext9 003A  
                                 ?_Sleep_Disable_Watchdog 0040  
                                    end_of_initialization 000C  
                          __end_of_Sleep_Disable_Watchdog 00B0  
                                            ?_Button_Init 0040  
                                     start_initialization 000B  
                                            _Button_State 0047  
                                 Button_ISR_Executables@i 0042  
                                       ?_Button_Get_State 0040  
                                            ??_Sleep_Init 0000  
                                      ??_Button_Get_State 0000  
                                               ___latbits 0000  
                                           __pcstackBANK0 0040  
                                      __end_of_Sleep_Init 00AB  
                            Button_Interrupt_Fired@status 0040  
                                       interrupt_function 0004  
                                ??_Button_Interrupt_Fired 0000  
                                                _PWM_Init 0084  
                                ??_Button_ISR_Executables 0041  
                                                __ptext10 00BE  
                                                __ptext11 009C  
                                                __ptext12 000E  
                                                __ptext13 0076  
                                                intlevel1 0000  
__end_of_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode 00BC  
       ?_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode 0040  
      ??_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode 0000  
        _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode 00BA  
                                ??_Sleep_Disable_Watchdog 0046  
                                  _Button_Interrupt_Fired 0076  
