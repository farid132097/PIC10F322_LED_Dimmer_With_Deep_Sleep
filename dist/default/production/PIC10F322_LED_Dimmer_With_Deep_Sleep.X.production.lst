

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 05 23:09:39 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	10F322
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.32
    32                           ; Generated 23/11/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC10F322 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0020                     	;# 
   101     0020                     	;# 
   102     0021                     	;# 
   103     0022                     	;# 
   104     0022                     	;# 
   105     0023                     	;# 
   106     0024                     	;# 
   107     0025                     	;# 
   108     0026                     	;# 
   109     0027                     	;# 
   110     0027                     	;# 
   111     0028                     	;# 
   112     0029                     	;# 
   113     002A                     	;# 
   114     002A                     	;# 
   115     002B                     	;# 
   116     002C                     	;# 
   117     002D                     	;# 
   118     002E                     	;# 
   119     0030                     	;# 
   120     0031                     	;# 
   121     0032                     	;# 
   122     0033                     	;# 
   123     0034                     	;# 
   124     0035                     	;# 
   125     0036                     	;# 
   126     0037                     	;# 
   127     0038                     	;# 
   128     0039                     	;# 
   129     003A                     	;# 
   130     003B                     	;# 
   131     003C                     	;# 
   132     003D                     	;# 
   133     003E                     	;# 
   134     003F                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0020                     	;# 
   170     0020                     	;# 
   171     0021                     	;# 
   172     0022                     	;# 
   173     0022                     	;# 
   174     0023                     	;# 
   175     0024                     	;# 
   176     0025                     	;# 
   177     0026                     	;# 
   178     0027                     	;# 
   179     0027                     	;# 
   180     0028                     	;# 
   181     0029                     	;# 
   182     002A                     	;# 
   183     002A                     	;# 
   184     002B                     	;# 
   185     002C                     	;# 
   186     002D                     	;# 
   187     002E                     	;# 
   188     0030                     	;# 
   189     0031                     	;# 
   190     0032                     	;# 
   191     0033                     	;# 
   192     0034                     	;# 
   193     0035                     	;# 
   194     0036                     	;# 
   195     0037                     	;# 
   196     0038                     	;# 
   197     0039                     	;# 
   198     003A                     	;# 
   199     003B                     	;# 
   200     003C                     	;# 
   201     003D                     	;# 
   202     003E                     	;# 
   203     003F                     	;# 
   204     0000                     	;# 
   205     0001                     	;# 
   206     0002                     	;# 
   207     0003                     	;# 
   208     0004                     	;# 
   209     0005                     	;# 
   210     0006                     	;# 
   211     0007                     	;# 
   212     0008                     	;# 
   213     0009                     	;# 
   214     000A                     	;# 
   215     000B                     	;# 
   216     000C                     	;# 
   217     000D                     	;# 
   218     000E                     	;# 
   219     000F                     	;# 
   220     0010                     	;# 
   221     0011                     	;# 
   222     0012                     	;# 
   223     0013                     	;# 
   224     0014                     	;# 
   225     0015                     	;# 
   226     0016                     	;# 
   227     0016                     	;# 
   228     0017                     	;# 
   229     0018                     	;# 
   230     0019                     	;# 
   231     0019                     	;# 
   232     001A                     	;# 
   233     001B                     	;# 
   234     001C                     	;# 
   235     001D                     	;# 
   236     001E                     	;# 
   237     001F                     	;# 
   238     0020                     	;# 
   239     0020                     	;# 
   240     0021                     	;# 
   241     0022                     	;# 
   242     0022                     	;# 
   243     0023                     	;# 
   244     0024                     	;# 
   245     0025                     	;# 
   246     0026                     	;# 
   247     0027                     	;# 
   248     0027                     	;# 
   249     0028                     	;# 
   250     0029                     	;# 
   251     002A                     	;# 
   252     002A                     	;# 
   253     002B                     	;# 
   254     002C                     	;# 
   255     002D                     	;# 
   256     002E                     	;# 
   257     0030                     	;# 
   258     0031                     	;# 
   259     0032                     	;# 
   260     0033                     	;# 
   261     0034                     	;# 
   262     0035                     	;# 
   263     0036                     	;# 
   264     0037                     	;# 
   265     0038                     	;# 
   266     0039                     	;# 
   267     003A                     	;# 
   268     003B                     	;# 
   269     003C                     	;# 
   270     003D                     	;# 
   271     003E                     	;# 
   272     003F                     	;# 
   273     0000                     	;# 
   274     0001                     	;# 
   275     0002                     	;# 
   276     0003                     	;# 
   277     0004                     	;# 
   278     0005                     	;# 
   279     0006                     	;# 
   280     0007                     	;# 
   281     0008                     	;# 
   282     0009                     	;# 
   283     000A                     	;# 
   284     000B                     	;# 
   285     000C                     	;# 
   286     000D                     	;# 
   287     000E                     	;# 
   288     000F                     	;# 
   289     0010                     	;# 
   290     0011                     	;# 
   291     0012                     	;# 
   292     0013                     	;# 
   293     0014                     	;# 
   294     0015                     	;# 
   295     0016                     	;# 
   296     0016                     	;# 
   297     0017                     	;# 
   298     0018                     	;# 
   299     0019                     	;# 
   300     0019                     	;# 
   301     001A                     	;# 
   302     001B                     	;# 
   303     001C                     	;# 
   304     001D                     	;# 
   305     001E                     	;# 
   306     001F                     	;# 
   307     0020                     	;# 
   308     0020                     	;# 
   309     0021                     	;# 
   310     0022                     	;# 
   311     0022                     	;# 
   312     0023                     	;# 
   313     0024                     	;# 
   314     0025                     	;# 
   315     0026                     	;# 
   316     0027                     	;# 
   317     0027                     	;# 
   318     0028                     	;# 
   319     0029                     	;# 
   320     002A                     	;# 
   321     002A                     	;# 
   322     002B                     	;# 
   323     002C                     	;# 
   324     002D                     	;# 
   325     002E                     	;# 
   326     0030                     	;# 
   327     0031                     	;# 
   328     0032                     	;# 
   329     0033                     	;# 
   330     0034                     	;# 
   331     0035                     	;# 
   332     0036                     	;# 
   333     0037                     	;# 
   334     0038                     	;# 
   335     0039                     	;# 
   336     003A                     	;# 
   337     003B                     	;# 
   338     003C                     	;# 
   339     003D                     	;# 
   340     003E                     	;# 
   341     003F                     	;# 
   342     001C                     _IOCAF	set	28
   343     000B                     _INTCON	set	11
   344     001B                     _IOCAN	set	27
   345     001F                     _ADCON	set	31
   346     003E                     _VREGCON	set	62
   347     001D                     _FVRCON	set	29
   348     0030                     _WDTCON	set	48
   349     0026                     _CLKRCON	set	38
   350     0010                     _OSCCON	set	16
   351     0007                     _LATA	set	7
   352     0008                     _ANSELA	set	8
   353     0006                     _TRISA	set	6
   354                           
   355                           	psect	cinit
   356     000B                     start_initialization:	
   357                           ; #config settings
   358                           
   359     000B                     __initialization:
   360                           
   361                           ; Clear objects allocated to BANK0
   362     000B  01C7               	clrf	__pbssBANK0& (0+127)
   363     000C                     end_of_initialization:	
   364                           ;End of C runtime variable initialization code
   365                           
   366     000C                     __end_of__initialization:
   367     000C  0183               	clrf	3
   368     000D  283A               	ljmp	_main	;jump to C main() function
   369                           
   370                           	psect	bssBANK0
   371     0047                     __pbssBANK0:
   372     0047                     _Button_State:
   373     0047                     	ds	1
   374                           
   375                           	psect	cstackCOMMON
   376     0000                     __pcstackCOMMON:
   377     0000                     ??_Sleep_Init:
   378     0000                     ??_Button_Get_State:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0000                     ??_PWM_On_20_Percent_Duty_Cycle:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0000                     ??_PWM_On_50_Percent_Duty_Cycle:	
   385                           ; 1 bytes @ 0x0
   386                           
   387     0000                     ??_PWM_On_100_Percent_Duty_Cycle:	
   388                           ; 1 bytes @ 0x0
   389                           
   390     0000                     ??_main:	
   391                           ; 1 bytes @ 0x0
   392                           
   393     0000                     ??_Sleep_Select_Internal_8MHz_Oscillator:	
   394                           ; 1 bytes @ 0x0
   395                           
   396     0000                     ??_Sleep_Disable_FVR:	
   397                           ; 1 bytes @ 0x0
   398                           
   399     0000                     ??_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode:	
   400                           ; 1 bytes @ 0x0
   401                           
   402     0000                     ??_Button_Interrupt_Fired:	
   403                           ; 1 bytes @ 0x0
   404                           
   405                           
   406                           	psect	cstackBANK0
   407     0040                     __pcstackBANK0:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0040                     ?_Button_Init:
   411     0040                     ?_PWM_Init:	
   412                           ; 1 bytes @ 0x0
   413                           
   414     0040                     ?_Sleep_Init:	
   415                           ; 1 bytes @ 0x0
   416                           
   417     0040                     ?_Button_Get_State:	
   418                           ; 1 bytes @ 0x0
   419                           
   420     0040                     ?_PWM_Off:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0040                     ?_PWM_On_20_Percent_Duty_Cycle:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0040                     ?_PWM_On_50_Percent_Duty_Cycle:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0040                     ?_PWM_On_100_Percent_Duty_Cycle:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0040                     ?_Button_ISR_Executables:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0040                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0040                     ?_ISRs:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0040                     ?_Sleep_Select_Internal_8MHz_Oscillator:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0040                     ?_Sleep_Disable_Reference_Clock_Output:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0040                     ?_Sleep_Disable_Watchdog:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0040                     ?_Sleep_Disable_FVR:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0040                     ?_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0040                     ?_Sleep_Disable_ADC:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0040                     ?_Sleep_Unused_GPIO_Config:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0040                     ?_Button_Interrupt_Fired:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0040                     Button_Interrupt_Fired@status:	
   466                           ; 1 bytes @ 0x0
   467                           
   468                           
   469                           ; 1 bytes @ 0x0
   470     0040                     	ds	1
   471     0041                     ??_Button_ISR_Executables:
   472                           
   473                           ; 1 bytes @ 0x1
   474     0041                     	ds	1
   475     0042                     Button_ISR_Executables@i:
   476                           
   477                           ; 2 bytes @ 0x2
   478     0042                     	ds	2
   479     0044                     ??_ISRs:
   480                           
   481                           ; 1 bytes @ 0x4
   482     0044                     	ds	2
   483     0046                     ??_Button_Init:
   484     0046                     ??_PWM_Init:	
   485                           ; 1 bytes @ 0x6
   486                           
   487     0046                     ??_PWM_Off:	
   488                           ; 1 bytes @ 0x6
   489                           
   490     0046                     ??_Sleep_Disable_Reference_Clock_Output:	
   491                           ; 1 bytes @ 0x6
   492                           
   493     0046                     ??_Sleep_Disable_Watchdog:	
   494                           ; 1 bytes @ 0x6
   495                           
   496     0046                     ??_Sleep_Disable_ADC:	
   497                           ; 1 bytes @ 0x6
   498                           
   499     0046                     ??_Sleep_Unused_GPIO_Config:	
   500                           ; 1 bytes @ 0x6
   501                           
   502                           
   503                           ; 1 bytes @ 0x6
   504     0046                     	ds	1
   505                           
   506                           	psect	maintext
   507     003A                     __pmaintext:	
   508 ;;
   509 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   510 ;;
   511 ;; *************** function _main *****************
   512 ;; Defined at:
   513 ;;		line 16 in file "main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0, pclath, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : B00/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0
   527 ;;      Params:         0       0
   528 ;;      Locals:         0       0
   529 ;;      Temps:          0       0
   530 ;;      Totals:         0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels required when called: 5
   533 ;; This function calls:
   534 ;;		_Button_Get_State
   535 ;;		_Button_Init
   536 ;;		_PWM_Init
   537 ;;		_PWM_Off
   538 ;;		_PWM_On_100_Percent_Duty_Cycle
   539 ;;		_PWM_On_20_Percent_Duty_Cycle
   540 ;;		_PWM_On_50_Percent_Duty_Cycle
   541 ;;		_Sleep_Init
   542 ;; This function is called by:
   543 ;;		Startup code after reset
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547     003A                     _main:	
   548                           ;psect for function _main
   549                           
   550     003A                     l841:	
   551                           ;incstack = 0
   552                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   553                           
   554                           
   555                           ;main.c: 18: Button_Init();
   556     003A  2060               	fcall	_Button_Init
   557                           
   558                           ;main.c: 19: PWM_Init();
   559     003B  208E               	fcall	_PWM_Init
   560                           
   561                           ;main.c: 20: Sleep_Init();
   562     003C  20B3               	fcall	_Sleep_Init
   563     003D                     l843:
   564                           
   565                           ;main.c: 24: if(Button_Get_State() == 0){
   566     003D  20E1               	fcall	_Button_Get_State
   567     003E  3A00               	xorlw	0
   568     003F  1D03               	skipz
   569     0040  2842               	goto	u271
   570     0041  2843               	goto	u270
   571     0042                     u271:
   572     0042  2846               	goto	l847
   573     0043                     u270:
   574     0043                     l845:
   575                           
   576                           ;main.c: 25: PWM_Off();
   577     0043  20D2               	fcall	_PWM_Off
   578     0044  0063               	sleep	;# 
   579                           
   580                           ;main.c: 27: }else if( Button_Get_State() == 1){
   581     0045  283D               	goto	l843
   582     0046                     l847:
   583     0046  20E1               	fcall	_Button_Get_State
   584     0047  3A01               	xorlw	1
   585     0048  1D03               	skipz
   586     0049  284B               	goto	u281
   587     004A  284C               	goto	u280
   588     004B                     u281:
   589     004B  284E               	goto	l851
   590     004C                     u280:
   591     004C                     l849:
   592                           
   593                           ;main.c: 28: PWM_On_20_Percent_Duty_Cycle();
   594     004C  20DD               	fcall	_PWM_On_20_Percent_Duty_Cycle
   595                           
   596                           ;main.c: 29: }else if( Button_Get_State() == 2){
   597     004D  283D               	goto	l843
   598     004E                     l851:
   599     004E  20E1               	fcall	_Button_Get_State
   600     004F  3A02               	xorlw	2
   601     0050  1D03               	skipz
   602     0051  2853               	goto	u291
   603     0052  2854               	goto	u290
   604     0053                     u291:
   605     0053  2856               	goto	l855
   606     0054                     u290:
   607     0054                     l853:
   608                           
   609                           ;main.c: 30: PWM_On_50_Percent_Duty_Cycle();
   610     0054  20DB               	fcall	_PWM_On_50_Percent_Duty_Cycle
   611                           
   612                           ;main.c: 31: }else if( Button_Get_State() == 3){
   613     0055  283D               	goto	l843
   614     0056                     l855:
   615     0056  20E1               	fcall	_Button_Get_State
   616     0057  3A03               	xorlw	3
   617     0058  1D03               	skipz
   618     0059  285B               	goto	u301
   619     005A  285C               	goto	u300
   620     005B                     u301:
   621     005B  285E               	goto	l25
   622     005C                     u300:
   623     005C                     l857:
   624                           
   625                           ;main.c: 32: PWM_On_100_Percent_Duty_Cycle();
   626     005C  20DF               	fcall	_PWM_On_100_Percent_Duty_Cycle
   627     005D  283D               	goto	l843
   628     005E                     l25:
   629     005E  283D               	goto	l843
   630     005F  280A               	ljmp	start
   631     0060                     __end_of_main:
   632                           
   633                           	psect	text1
   634     00B3                     __ptext1:	
   635 ;; *************** function _Sleep_Init *****************
   636 ;; Defined at:
   637 ;;		line 77 in file "sleep.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0, pclath, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0
   651 ;;      Params:         0       0
   652 ;;      Locals:         0       0
   653 ;;      Temps:          0       0
   654 ;;      Totals:         0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 4
   658 ;; This function calls:
   659 ;;		_Sleep_Disable_ADC
   660 ;;		_Sleep_Disable_FVR
   661 ;;		_Sleep_Disable_Reference_Clock_Output
   662 ;;		_Sleep_Disable_Watchdog
   663 ;;		_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode
   664 ;;		_Sleep_Select_Internal_8MHz_Oscillator
   665 ;;		_Sleep_Unused_GPIO_Config
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671     00B3                     _Sleep_Init:	
   672                           ;psect for function _Sleep_Init
   673                           
   674     00B3                     l803:	
   675                           ;incstack = 0
   676                           ; Regs used in _Sleep_Init: [wreg+status,2+status,0+pclath+cstack]
   677                           
   678                           
   679                           ;sleep.c: 78: Sleep_Select_Internal_8MHz_Oscillator();
   680     00B3  20A8               	fcall	_Sleep_Select_Internal_8MHz_Oscillator
   681                           
   682                           ;sleep.c: 79: Sleep_Disable_Reference_Clock_Output();
   683     00B4  20C8               	fcall	_Sleep_Disable_Reference_Clock_Output
   684                           
   685                           ;sleep.c: 80: Sleep_Disable_Watchdog();
   686     00B5  20C3               	fcall	_Sleep_Disable_Watchdog
   687                           
   688                           ;sleep.c: 81: Sleep_Disable_ADC();
   689     00B6  20CD               	fcall	_Sleep_Disable_ADC
   690     00B7                     l805:
   691                           
   692                           ;sleep.c: 82: Sleep_Disable_FVR();
   693     00B7  20D9               	fcall	_Sleep_Disable_FVR
   694     00B8                     l807:
   695                           
   696                           ;sleep.c: 83: Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode();
   697     00B8  20D7               	fcall	_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode
   698                           
   699                           ;sleep.c: 84: Sleep_Unused_GPIO_Config();
   700     00B9  2081               	fcall	_Sleep_Unused_GPIO_Config
   701     00BA                     l107:
   702     00BA  0008               	return
   703     00BB                     __end_of_Sleep_Init:
   704                           
   705                           	psect	text2
   706     0081                     __ptext2:	
   707 ;; *************** function _Sleep_Unused_GPIO_Config *****************
   708 ;; Defined at:
   709 ;;		line 71 in file "sleep.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0
   723 ;;      Params:         0       0
   724 ;;      Locals:         0       0
   725 ;;      Temps:          0       1
   726 ;;      Totals:         0       1
   727 ;;Total ram usage:        1 bytes
   728 ;; Hardware stack levels used: 1
   729 ;; Hardware stack levels required when called: 3
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		_Sleep_Init
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737     0081                     _Sleep_Unused_GPIO_Config:	
   738                           ;psect for function _Sleep_Unused_GPIO_Config
   739                           
   740     0081                     l769:	
   741                           ;incstack = 0
   742                           ; Regs used in _Sleep_Unused_GPIO_Config: [wreg+status,2+status,0]
   743                           
   744                           
   745                           ;sleep.c: 72: TRISA &=~ (1<<2);
   746     0081  30FB               	movlw	251
   747     0082  00C6               	movwf	??_Sleep_Unused_GPIO_Config
   748     0083  0846               	movf	??_Sleep_Unused_GPIO_Config,w
   749     0084  0586               	andwf	6,f	;volatile
   750                           
   751                           ;sleep.c: 73: ANSELA &=~ (1<<2);
   752     0085  30FB               	movlw	251
   753     0086  00C6               	movwf	??_Sleep_Unused_GPIO_Config
   754     0087  0846               	movf	??_Sleep_Unused_GPIO_Config,w
   755     0088  0588               	andwf	8,f	;volatile
   756                           
   757                           ;sleep.c: 74: LATA &=~ (1<<2);
   758     0089  30FB               	movlw	251
   759     008A  00C6               	movwf	??_Sleep_Unused_GPIO_Config
   760     008B  0846               	movf	??_Sleep_Unused_GPIO_Config,w
   761     008C  0587               	andwf	7,f	;volatile
   762     008D                     l104:
   763     008D  0008               	return
   764     008E                     __end_of_Sleep_Unused_GPIO_Config:
   765                           
   766                           	psect	text3
   767     00A8                     __ptext3:	
   768 ;; *************** function _Sleep_Select_Internal_8MHz_Oscillator *****************
   769 ;; Defined at:
   770 ;;		line 45 in file "sleep.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0
   784 ;;      Params:         0       0
   785 ;;      Locals:         0       0
   786 ;;      Temps:          0       0
   787 ;;      Totals:         0       0
   788 ;;Total ram usage:        0 bytes
   789 ;; Hardware stack levels used: 1
   790 ;; Hardware stack levels required when called: 3
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_Sleep_Init
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798     00A8                     _Sleep_Select_Internal_8MHz_Oscillator:	
   799                           ;psect for function _Sleep_Select_Internal_8MHz_Oscillator
   800                           
   801     00A8                     l757:	
   802                           ;incstack = 0
   803                           ; Regs used in _Sleep_Select_Internal_8MHz_Oscillator: [wreg]
   804                           
   805                           
   806                           ;sleep.c: 46: OSCCON = (0x06<<0x04U);
   807     00A8  3060               	movlw	96
   808     00A9  0090               	movwf	16	;volatile
   809     00AA                     l80:	
   810                           ;sleep.c: 47: while((OSCCON & (0x01<<0x03U)) == 0);
   811                           
   812     00AA  1D90               	btfss	16,3	;volatile
   813     00AB  28AD               	goto	u161
   814     00AC  28AE               	goto	u160
   815     00AD                     u161:
   816     00AD  28AA               	goto	l80
   817     00AE                     u160:
   818     00AE                     l83:
   819     00AE  1C10               	btfss	16,0	;volatile
   820     00AF  28B1               	goto	u171
   821     00B0  28B2               	goto	u170
   822     00B1                     u171:
   823     00B1  28AE               	goto	l83
   824     00B2                     u170:
   825     00B2                     l86:
   826     00B2  0008               	return
   827     00B3                     __end_of_Sleep_Select_Internal_8MHz_Oscillator:
   828                           
   829                           	psect	text4
   830     00D7                     __ptext4:	
   831 ;; *************** function _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode *****************
   832 ;; Defined at:
   833 ;;		line 63 in file "sleep.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		None
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMMON   BANK0
   847 ;;      Params:         0       0
   848 ;;      Locals:         0       0
   849 ;;      Temps:          0       0
   850 ;;      Totals:         0       0
   851 ;;Total ram usage:        0 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; Hardware stack levels required when called: 3
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_Sleep_Init
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861     00D7                     _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode:	
   862                           ;psect for function _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode
   863                           
   864     00D7                     l765:	
   865                           ;incstack = 0
   866                           ; Regs used in _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode: []
   867                           
   868                           
   869                           ;sleep.c: 64: VREGCON |= (0x01<<0x01U);
   870     00D7  14BE               	bsf	62,1	;volatile
   871     00D8                     l98:
   872     00D8  0008               	return
   873     00D9                     __end_of_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode:
   874                           
   875                           	psect	text5
   876     00C3                     __ptext5:	
   877 ;; *************** function _Sleep_Disable_Watchdog *****************
   878 ;; Defined at:
   879 ;;		line 55 in file "sleep.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, status,2, status,0
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0
   893 ;;      Params:         0       0
   894 ;;      Locals:         0       0
   895 ;;      Temps:          0       1
   896 ;;      Totals:         0       1
   897 ;;Total ram usage:        1 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; Hardware stack levels required when called: 3
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_Sleep_Init
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907     00C3                     _Sleep_Disable_Watchdog:	
   908                           ;psect for function _Sleep_Disable_Watchdog
   909                           
   910     00C3                     l761:	
   911                           ;incstack = 0
   912                           ; Regs used in _Sleep_Disable_Watchdog: [wreg+status,2+status,0]
   913                           
   914                           
   915                           ;sleep.c: 56: WDTCON &=~ (0x01<<0x00U);
   916     00C3  30FE               	movlw	254
   917     00C4  00C6               	movwf	??_Sleep_Disable_Watchdog
   918     00C5  0846               	movf	??_Sleep_Disable_Watchdog,w
   919     00C6  05B0               	andwf	48,f	;volatile
   920     00C7                     l92:
   921     00C7  0008               	return
   922     00C8                     __end_of_Sleep_Disable_Watchdog:
   923                           
   924                           	psect	text6
   925     00C8                     __ptext6:	
   926 ;; *************** function _Sleep_Disable_Reference_Clock_Output *****************
   927 ;; Defined at:
   928 ;;		line 51 in file "sleep.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0
   942 ;;      Params:         0       0
   943 ;;      Locals:         0       0
   944 ;;      Temps:          0       1
   945 ;;      Totals:         0       1
   946 ;;Total ram usage:        1 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 3
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_Sleep_Init
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956     00C8                     _Sleep_Disable_Reference_Clock_Output:	
   957                           ;psect for function _Sleep_Disable_Reference_Clock_Output
   958                           
   959     00C8                     l759:	
   960                           ;incstack = 0
   961                           ; Regs used in _Sleep_Disable_Reference_Clock_Output: [wreg+status,2+status,0]
   962                           
   963                           
   964                           ;sleep.c: 52: CLKRCON &=~ (0x01<<0x06U);
   965     00C8  30BF               	movlw	191
   966     00C9  00C6               	movwf	??_Sleep_Disable_Reference_Clock_Output
   967     00CA  0846               	movf	??_Sleep_Disable_Reference_Clock_Output,w
   968     00CB  05A6               	andwf	38,f	;volatile
   969     00CC                     l89:
   970     00CC  0008               	return
   971     00CD                     __end_of_Sleep_Disable_Reference_Clock_Output:
   972                           
   973                           	psect	text7
   974     00D9                     __ptext7:	
   975 ;; *************** function _Sleep_Disable_FVR *****************
   976 ;; Defined at:
   977 ;;		line 59 in file "sleep.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		status,2
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0
   991 ;;      Params:         0       0
   992 ;;      Locals:         0       0
   993 ;;      Temps:          0       0
   994 ;;      Totals:         0       0
   995 ;;Total ram usage:        0 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 3
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_Sleep_Init
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005     00D9                     _Sleep_Disable_FVR:	
  1006                           ;psect for function _Sleep_Disable_FVR
  1007                           
  1008     00D9                     l763:	
  1009                           ;incstack = 0
  1010                           ; Regs used in _Sleep_Disable_FVR: [status,2]
  1011                           
  1012                           
  1013                           ;sleep.c: 60: FVRCON = 0x00;
  1014     00D9  019D               	clrf	29	;volatile
  1015     00DA                     l95:
  1016     00DA  0008               	return
  1017     00DB                     __end_of_Sleep_Disable_FVR:
  1018                           
  1019                           	psect	text8
  1020     00CD                     __ptext8:	
  1021 ;; *************** function _Sleep_Disable_ADC *****************
  1022 ;; Defined at:
  1023 ;;		line 67 in file "sleep.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0
  1037 ;;      Params:         0       0
  1038 ;;      Locals:         0       0
  1039 ;;      Temps:          0       1
  1040 ;;      Totals:         0       1
  1041 ;;Total ram usage:        1 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; Hardware stack levels required when called: 3
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_Sleep_Init
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051     00CD                     _Sleep_Disable_ADC:	
  1052                           ;psect for function _Sleep_Disable_ADC
  1053                           
  1054     00CD                     l767:	
  1055                           ;incstack = 0
  1056                           ; Regs used in _Sleep_Disable_ADC: [wreg+status,2+status,0]
  1057                           
  1058                           
  1059                           ;sleep.c: 68: ADCON &=~ (0x01<<0x00U);
  1060     00CD  30FE               	movlw	254
  1061     00CE  00C6               	movwf	??_Sleep_Disable_ADC
  1062     00CF  0846               	movf	??_Sleep_Disable_ADC,w
  1063     00D0  059F               	andwf	31,f	;volatile
  1064     00D1                     l101:
  1065     00D1  0008               	return
  1066     00D2                     __end_of_Sleep_Disable_ADC:
  1067                           
  1068                           	psect	text9
  1069     00DB                     __ptext9:	
  1070 ;; *************** function _PWM_On_50_Percent_Duty_Cycle *****************
  1071 ;; Defined at:
  1072 ;;		line 21 in file "pwm.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		None
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0
  1086 ;;      Params:         0       0
  1087 ;;      Locals:         0       0
  1088 ;;      Temps:          0       0
  1089 ;;      Totals:         0       0
  1090 ;;Total ram usage:        0 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 3
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_main
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100     00DB                     _PWM_On_50_Percent_Duty_Cycle:	
  1101                           ;psect for function _PWM_On_50_Percent_Duty_Cycle
  1102                           
  1103     00DB                     l817:	
  1104                           ;incstack = 0
  1105                           ; Regs used in _PWM_On_50_Percent_Duty_Cycle: []
  1106                           
  1107                           
  1108                           ;pwm.c: 22: LATA |= (1<<0x01U);
  1109     00DB  1487               	bsf	7,1	;volatile
  1110     00DC                     l53:
  1111     00DC  0008               	return
  1112     00DD                     __end_of_PWM_On_50_Percent_Duty_Cycle:
  1113                           
  1114                           	psect	text10
  1115     00DD                     __ptext10:	
  1116 ;; *************** function _PWM_On_20_Percent_Duty_Cycle *****************
  1117 ;; Defined at:
  1118 ;;		line 17 in file "pwm.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		None
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0
  1132 ;;      Params:         0       0
  1133 ;;      Locals:         0       0
  1134 ;;      Temps:          0       0
  1135 ;;      Totals:         0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 3
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146     00DD                     _PWM_On_20_Percent_Duty_Cycle:	
  1147                           ;psect for function _PWM_On_20_Percent_Duty_Cycle
  1148                           
  1149     00DD                     l815:	
  1150                           ;incstack = 0
  1151                           ; Regs used in _PWM_On_20_Percent_Duty_Cycle: []
  1152                           
  1153                           
  1154                           ;pwm.c: 18: LATA |= (1<<0x01U);
  1155     00DD  1487               	bsf	7,1	;volatile
  1156     00DE                     l50:
  1157     00DE  0008               	return
  1158     00DF                     __end_of_PWM_On_20_Percent_Duty_Cycle:
  1159                           
  1160                           	psect	text11
  1161     00DF                     __ptext11:	
  1162 ;; *************** function _PWM_On_100_Percent_Duty_Cycle *****************
  1163 ;; Defined at:
  1164 ;;		line 25 in file "pwm.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		None
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMMON   BANK0
  1178 ;;      Params:         0       0
  1179 ;;      Locals:         0       0
  1180 ;;      Temps:          0       0
  1181 ;;      Totals:         0       0
  1182 ;;Total ram usage:        0 bytes
  1183 ;; Hardware stack levels used: 1
  1184 ;; Hardware stack levels required when called: 3
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192     00DF                     _PWM_On_100_Percent_Duty_Cycle:	
  1193                           ;psect for function _PWM_On_100_Percent_Duty_Cycle
  1194                           
  1195     00DF                     l819:	
  1196                           ;incstack = 0
  1197                           ; Regs used in _PWM_On_100_Percent_Duty_Cycle: []
  1198                           
  1199                           
  1200                           ;pwm.c: 26: LATA |= (1<<0x01U);
  1201     00DF  1487               	bsf	7,1	;volatile
  1202     00E0                     l56:
  1203     00E0  0008               	return
  1204     00E1                     __end_of_PWM_On_100_Percent_Duty_Cycle:
  1205                           
  1206                           	psect	text12
  1207     00D2                     __ptext12:	
  1208 ;; *************** function _PWM_Off *****************
  1209 ;; Defined at:
  1210 ;;		line 29 in file "pwm.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0
  1224 ;;      Params:         0       0
  1225 ;;      Locals:         0       0
  1226 ;;      Temps:          0       1
  1227 ;;      Totals:         0       1
  1228 ;;Total ram usage:        1 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 3
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238     00D2                     _PWM_Off:	
  1239                           ;psect for function _PWM_Off
  1240                           
  1241     00D2                     l813:	
  1242                           ;incstack = 0
  1243                           ; Regs used in _PWM_Off: [wreg+status,2+status,0]
  1244                           
  1245                           
  1246                           ;pwm.c: 30: LATA &=~ (1<<0x01U);
  1247     00D2  30FD               	movlw	253
  1248     00D3  00C6               	movwf	??_PWM_Off
  1249     00D4  0846               	movf	??_PWM_Off,w
  1250     00D5  0587               	andwf	7,f	;volatile
  1251     00D6                     l59:
  1252     00D6  0008               	return
  1253     00D7                     __end_of_PWM_Off:
  1254                           
  1255                           	psect	text13
  1256     008E                     __ptext13:	
  1257 ;; *************** function _PWM_Init *****************
  1258 ;; Defined at:
  1259 ;;		line 11 in file "pwm.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0
  1273 ;;      Params:         0       0
  1274 ;;      Locals:         0       0
  1275 ;;      Temps:          0       1
  1276 ;;      Totals:         0       1
  1277 ;;Total ram usage:        1 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; Hardware stack levels required when called: 3
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_main
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287     008E                     _PWM_Init:	
  1288                           ;psect for function _PWM_Init
  1289                           
  1290     008E                     l801:	
  1291                           ;incstack = 0
  1292                           ; Regs used in _PWM_Init: [wreg+status,2+status,0]
  1293                           
  1294                           
  1295                           ;pwm.c: 12: TRISA &=~ (1<<0x01U);
  1296     008E  30FD               	movlw	253
  1297     008F  00C6               	movwf	??_PWM_Init
  1298     0090  0846               	movf	??_PWM_Init,w
  1299     0091  0586               	andwf	6,f	;volatile
  1300                           
  1301                           ;pwm.c: 13: ANSELA &=~ (1<<0x01U);
  1302     0092  30FD               	movlw	253
  1303     0093  00C6               	movwf	??_PWM_Init
  1304     0094  0846               	movf	??_PWM_Init,w
  1305     0095  0588               	andwf	8,f	;volatile
  1306                           
  1307                           ;pwm.c: 14: LATA &=~ (1<<0x01U);
  1308     0096  30FD               	movlw	253
  1309     0097  00C6               	movwf	??_PWM_Init
  1310     0098  0846               	movf	??_PWM_Init,w
  1311     0099  0587               	andwf	7,f	;volatile
  1312     009A                     l47:
  1313     009A  0008               	return
  1314     009B                     __end_of_PWM_Init:
  1315                           
  1316                           	psect	text14
  1317     0060                     __ptext14:	
  1318 ;; *************** function _Button_Init *****************
  1319 ;; Defined at:
  1320 ;;		line 37 in file "button.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0
  1334 ;;      Params:         0       0
  1335 ;;      Locals:         0       0
  1336 ;;      Temps:          0       1
  1337 ;;      Totals:         0       1
  1338 ;;Total ram usage:        1 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; Hardware stack levels required when called: 3
  1341 ;; This function calls:
  1342 ;;		Nothing
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348     0060                     _Button_Init:	
  1349                           ;psect for function _Button_Init
  1350                           
  1351     0060                     l783:	
  1352                           ;incstack = 0
  1353                           ; Regs used in _Button_Init: [wreg+status,2+status,0]
  1354                           
  1355                           
  1356                           ;button.c: 38: TRISA |= (0x01<<0x00U);
  1357     0060  1406               	bsf	6,0	;volatile
  1358     0061                     l785:
  1359                           
  1360                           ;button.c: 39: ANSELA&=~ (0x01<<0x00U);
  1361     0061  30FE               	movlw	254
  1362     0062  00C6               	movwf	??_Button_Init
  1363     0063  0846               	movf	??_Button_Init,w
  1364     0064  0588               	andwf	8,f	;volatile
  1365     0065                     l787:
  1366                           
  1367                           ;button.c: 40: IOCAN |= (0x01<<0x00U);
  1368     0065  141B               	bsf	27,0	;volatile
  1369     0066                     l789:
  1370                           
  1371                           ;button.c: 41: if((INTCON & (0x01<<0x03U)) == 0){
  1372     0066  198B               	btfsc	11,3	;volatile
  1373     0067  2869               	goto	u201
  1374     0068  286A               	goto	u200
  1375     0069                     u201:
  1376     0069  286B               	goto	l124
  1377     006A                     u200:
  1378     006A                     l791:
  1379                           
  1380                           ;button.c: 42: INTCON |= (0x01<<0x03U);
  1381     006A  158B               	bsf	11,3	;volatile
  1382     006B                     l124:
  1383                           
  1384                           ;button.c: 43: };button.c: 44: if((INTCON & (0x01<<0x07U)) == 0){
  1385     006B  1B8B               	btfsc	11,7	;volatile
  1386     006C  286E               	goto	u211
  1387     006D  286F               	goto	u210
  1388     006E                     u211:
  1389     006E  2870               	goto	l125
  1390     006F                     u210:
  1391     006F                     l793:
  1392                           
  1393                           ;button.c: 45: INTCON |= (0x01<<0x07U);
  1394     006F  178B               	bsf	11,7	;volatile
  1395     0070                     l125:
  1396                           
  1397                           ;button.c: 46: };button.c: 47: if((INTCON & (0x01<<0x00U)) == 0){
  1398     0070  180B               	btfsc	11,0	;volatile
  1399     0071  2873               	goto	u221
  1400     0072  2874               	goto	u220
  1401     0073                     u221:
  1402     0073  2878               	goto	l797
  1403     0074                     u220:
  1404     0074                     l795:
  1405                           
  1406                           ;button.c: 48: INTCON &=~ (0x01<<0x00U);
  1407     0074  30FE               	movlw	254
  1408     0075  00C6               	movwf	??_Button_Init
  1409     0076  0846               	movf	??_Button_Init,w
  1410     0077  058B               	andwf	11,f	;volatile
  1411     0078                     l797:
  1412                           
  1413                           ;button.c: 49: };button.c: 50: if(IOCAF & (0x01<<0x00U)){
  1414     0078  1C1C               	btfss	28,0	;volatile
  1415     0079  287B               	goto	u231
  1416     007A  287C               	goto	u230
  1417     007B                     u231:
  1418     007B  2880               	goto	l128
  1419     007C                     u230:
  1420     007C                     l799:
  1421                           
  1422                           ;button.c: 51: IOCAF &=~ (0x01<<0x00U);
  1423     007C  30FE               	movlw	254
  1424     007D  00C6               	movwf	??_Button_Init
  1425     007E  0846               	movf	??_Button_Init,w
  1426     007F  059C               	andwf	28,f	;volatile
  1427     0080                     l128:
  1428     0080  0008               	return
  1429     0081                     __end_of_Button_Init:
  1430                           
  1431                           	psect	text15
  1432     00E1                     __ptext15:	
  1433 ;; *************** function _Button_Get_State *****************
  1434 ;; Defined at:
  1435 ;;		line 55 in file "button.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      unsigned char 
  1442 ;; Registers used:
  1443 ;;		wreg
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0
  1449 ;;      Params:         0       0
  1450 ;;      Locals:         0       0
  1451 ;;      Temps:          0       0
  1452 ;;      Totals:         0       0
  1453 ;;Total ram usage:        0 bytes
  1454 ;; Hardware stack levels used: 1
  1455 ;; Hardware stack levels required when called: 3
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_main
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463     00E1                     _Button_Get_State:	
  1464                           ;psect for function _Button_Get_State
  1465                           
  1466     00E1                     l809:	
  1467                           ;incstack = 0
  1468                           ; Regs used in _Button_Get_State: [wreg]
  1469                           
  1470                           
  1471                           ;button.c: 56: return Button_State;
  1472     00E1  0847               	movf	_Button_State,w	;volatile
  1473     00E2                     l131:
  1474     00E2  0008               	return
  1475     00E3                     __end_of_Button_Get_State:
  1476                           
  1477                           	psect	text16
  1478     00BB                     __ptext16:	
  1479 ;; *************** function _ISRs *****************
  1480 ;; Defined at:
  1481 ;;		line 38 in file "main.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, pclath, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0
  1495 ;;      Params:         0       0
  1496 ;;      Locals:         0       0
  1497 ;;      Temps:          0       2
  1498 ;;      Totals:         0       2
  1499 ;;Total ram usage:        2 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 2
  1502 ;; This function calls:
  1503 ;;		_Button_ISR_Executables
  1504 ;; This function is called by:
  1505 ;;		Interrupt level 1
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509     00BB                     _ISRs:	
  1510                           ;psect for function _ISRs
  1511                           
  1512     00BB                     i1l859:
  1513                           
  1514                           ;main.c: 39: Button_ISR_Executables();
  1515     00BB  200E               	fcall	_Button_ISR_Executables
  1516     00BC                     i1l38:
  1517     00BC  0845               	movf	??_ISRs+1,w
  1518     00BD  008A               	movwf	10
  1519     00BE  0E44               	swapf	??_ISRs,w
  1520     00BF  0083               	movwf	3
  1521     00C0  0EFE               	swapf	btemp,f
  1522     00C1  0E7E               	swapf	btemp,w
  1523     00C2  0009               	retfie
  1524     00C3                     __end_of_ISRs:
  1525                           
  1526                           	psect	intentry
  1527     0004                     __pintentry:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _ISRs: [wreg+status,2+status,0+pclath+cstack]
  1530                           
  1531     0004                     interrupt_function:
  1532     007E                     saved_w	set	btemp
  1533     0004  00FE               	movwf	btemp
  1534     0005  0E03               	swapf	3,w
  1535     0006  00C4               	movwf	??_ISRs
  1536     0007  080A               	movf	10,w
  1537     0008  00C5               	movwf	??_ISRs+1
  1538     0009  28BB               	ljmp	_ISRs
  1539                           
  1540                           	psect	text17
  1541     000E                     __ptext17:	
  1542 ;; *************** function _Button_ISR_Executables *****************
  1543 ;; Defined at:
  1544 ;;		line 69 in file "button.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  i               2    2[BANK0 ] unsigned int 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0, pclath, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0
  1558 ;;      Params:         0       0
  1559 ;;      Locals:         0       2
  1560 ;;      Temps:          0       1
  1561 ;;      Totals:         0       3
  1562 ;;Total ram usage:        3 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 1
  1565 ;; This function calls:
  1566 ;;		_Button_Interrupt_Fired
  1567 ;; This function is called by:
  1568 ;;		_ISRs
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572     000E                     _Button_ISR_Executables:	
  1573                           ;psect for function _Button_ISR_Executables
  1574                           
  1575     000E                     i1l821:	
  1576                           ;incstack = 0
  1577                           ; Regs used in _Button_ISR_Executables: [wreg+status,2+status,0+pclath+cstack]
  1578                           
  1579                           
  1580                           ;button.c: 70: if(Button_Interrupt_Fired()){
  1581     000E  209B               	fcall	_Button_Interrupt_Fired
  1582     000F  3A00               	xorlw	0
  1583     0010  1903               	skipnz
  1584     0011  2813               	goto	u24_21
  1585     0012  2814               	goto	u24_20
  1586     0013                     u24_21:
  1587     0013  2839               	goto	i1l143
  1588     0014                     u24_20:
  1589     0014                     i1l823:
  1590                           
  1591                           ;button.c: 74: for(uint16_t i=0; i<1000;i++){
  1592     0014  01C2               	clrf	Button_ISR_Executables@i
  1593     0015  01C3               	clrf	Button_ISR_Executables@i+1
  1594     0016                     i1l140:
  1595                           
  1596                           ;button.c: 75: __nop();
  1597     0016  0000               	nop
  1598     0017                     i1l829:
  1599     0017  3001               	movlw	1
  1600     0018  07C2               	addwf	Button_ISR_Executables@i,f
  1601     0019  1803               	skipnc
  1602     001A  0AC3               	incf	Button_ISR_Executables@i+1,f
  1603     001B  3000               	movlw	0
  1604     001C  07C3               	addwf	Button_ISR_Executables@i+1,f
  1605     001D  3003               	movlw	3
  1606     001E  0243               	subwf	Button_ISR_Executables@i+1,w
  1607     001F  30E8               	movlw	232
  1608     0020  1903               	skipnz
  1609     0021  0242               	subwf	Button_ISR_Executables@i,w
  1610     0022  1C03               	skipc
  1611     0023  2825               	goto	u25_21
  1612     0024  2826               	goto	u25_20
  1613     0025                     u25_21:
  1614     0025  2816               	goto	i1l140
  1615     0026                     u25_20:
  1616     0026                     i1l831:
  1617                           
  1618                           ;button.c: 76: };button.c: 78: Button_State++;
  1619     0026  3001               	movlw	1
  1620     0027  00C1               	movwf	??_Button_ISR_Executables
  1621     0028  0841               	movf	??_Button_ISR_Executables,w
  1622     0029  07C7               	addwf	_Button_State,f	;volatile
  1623     002A                     i1l833:
  1624                           
  1625                           ;button.c: 79: if(Button_State > (4U - 1)){
  1626     002A  3004               	movlw	4
  1627     002B  0247               	subwf	_Button_State,w	;volatile
  1628     002C  1C03               	skipc
  1629     002D  282F               	goto	u26_21
  1630     002E  2830               	goto	u26_20
  1631     002F                     u26_21:
  1632     002F  2831               	goto	i1l837
  1633     0030                     u26_20:
  1634     0030                     i1l835:
  1635                           
  1636                           ;button.c: 80: Button_State = 0;
  1637     0030  01C7               	clrf	_Button_State	;volatile
  1638     0031                     i1l837:
  1639                           
  1640                           ;button.c: 81: };button.c: 82: IOCAF &=~ (0x01<<0x00U);
  1641     0031  30FE               	movlw	254
  1642     0032  00C1               	movwf	??_Button_ISR_Executables
  1643     0033  0841               	movf	??_Button_ISR_Executables,w
  1644     0034  059C               	andwf	28,f	;volatile
  1645     0035                     i1l839:
  1646                           
  1647                           ;button.c: 83: INTCON &=~ (0x01<<0x00U);
  1648     0035  30FE               	movlw	254
  1649     0036  00C1               	movwf	??_Button_ISR_Executables
  1650     0037  0841               	movf	??_Button_ISR_Executables,w
  1651     0038  058B               	andwf	11,f	;volatile
  1652     0039                     i1l143:
  1653     0039  0008               	return
  1654     003A                     __end_of_Button_ISR_Executables:
  1655                           
  1656                           	psect	text18
  1657     009B                     __ptext18:	
  1658 ;; *************** function _Button_Interrupt_Fired *****************
  1659 ;; Defined at:
  1660 ;;		line 59 in file "button.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  status          1    0[BANK0 ] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      unsigned char 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0
  1674 ;;      Params:         0       0
  1675 ;;      Locals:         0       1
  1676 ;;      Temps:          0       0
  1677 ;;      Totals:         0       1
  1678 ;;Total ram usage:        1 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_Button_ISR_Executables
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687     009B                     _Button_Interrupt_Fired:	
  1688                           ;psect for function _Button_Interrupt_Fired
  1689                           
  1690     009B                     i1l771:	
  1691                           ;incstack = 0
  1692                           ; Regs used in _Button_Interrupt_Fired: [wreg+status,2]
  1693                           
  1694                           
  1695                           ;button.c: 60: uint8_t status = 0;
  1696     009B  01C0               	clrf	Button_Interrupt_Fired@status
  1697     009C                     i1l773:
  1698                           
  1699                           ;button.c: 61: if(INTCON & (0x01<<0x00U)){
  1700     009C  1C0B               	btfss	11,0	;volatile
  1701     009D  289F               	goto	u18_21
  1702     009E  28A0               	goto	u18_20
  1703     009F                     u18_21:
  1704     009F  28A6               	goto	i1l779
  1705     00A0                     u18_20:
  1706     00A0                     i1l775:
  1707                           
  1708                           ;button.c: 62: if(IOCAF & (0x01<<0x00U)){
  1709     00A0  1C1C               	btfss	28,0	;volatile
  1710     00A1  28A3               	goto	u19_21
  1711     00A2  28A4               	goto	u19_20
  1712     00A3                     u19_21:
  1713     00A3  28A6               	goto	i1l779
  1714     00A4                     u19_20:
  1715     00A4                     i1l777:
  1716                           
  1717                           ;button.c: 63: status =1;
  1718     00A4  01C0               	clrf	Button_Interrupt_Fired@status
  1719     00A5  0AC0               	incf	Button_Interrupt_Fired@status,f
  1720     00A6                     i1l779:
  1721                           
  1722                           ;button.c: 64: };button.c: 65: };button.c: 66: return status;
  1723     00A6  0840               	movf	Button_Interrupt_Fired@status,w
  1724     00A7                     i1l136:
  1725     00A7  0008               	return
  1726     00A8                     __end_of_Button_Interrupt_Fired:
  1727     007E                     btemp	set	126	;btemp
  1728     007E                     wtemp0	set	126
  1729                           
  1730                           	psect	config
  1731                           
  1732                           ;Config register CONFIG @ 0x2007
  1733                           ;	Oscillator Selection bits
  1734                           ;	FOSC = INTOSC, INTOSC oscillator: CLKIN function disabled
  1735                           ;	Brown-out Reset Enable
  1736                           ;	BOREN = OFF, Brown-out Reset disabled
  1737                           ;	Watchdog Timer Enable
  1738                           ;	WDTE = OFF, WDT disabled
  1739                           ;	Power-up Timer Enable bit
  1740                           ;	PWRTE = OFF, PWRT disabled
  1741                           ;	MCLR Pin Function Select bit
  1742                           ;	MCLRE = ON, MCLR pin function is MCLR
  1743                           ;	Code Protection bit
  1744                           ;	CP = OFF, Program memory code protection is disabled
  1745                           ;	Low-Voltage Programming Enable
  1746                           ;	LVP = ON, Low-voltage programming enabled
  1747                           ;	Brown-out Reset Selection bits
  1748                           ;	LPBOR = OFF, BOR disabled
  1749                           ;	Brown-out Reset Voltage Selection
  1750                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1751                           ;	Flash Memory Self-Write Protection
  1752                           ;	WRT = OFF, Write protection off
  1753     2007                     	org	8199
  1754     2007  3DE0               	dw	15840

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      7       8

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRs in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Button_Init
    _main->_PWM_Init
    _main->_PWM_Off
    _Sleep_Init->_Sleep_Disable_ADC
    _Sleep_Init->_Sleep_Disable_Reference_Clock_Output
    _Sleep_Init->_Sleep_Disable_Watchdog
    _Sleep_Init->_Sleep_Unused_GPIO_Config

Critical Paths under _ISRs in BANK0

    _ISRs->_Button_ISR_Executables
    _Button_ISR_Executables->_Button_Interrupt_Fired

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                   _Button_Get_State
                        _Button_Init
                           _PWM_Init
                            _PWM_Off
      _PWM_On_100_Percent_Duty_Cycle
       _PWM_On_20_Percent_Duty_Cycle
       _PWM_On_50_Percent_Duty_Cycle
                         _Sleep_Init
 ---------------------------------------------------------------------------------
 (1) _Sleep_Init                                           0     0      0       0
                  _Sleep_Disable_ADC
                  _Sleep_Disable_FVR
_Sleep_Disable_Reference_Clock_Outpu
             _Sleep_Disable_Watchdog
_Sleep_Enable_Voltage_Regulator_In_L
_Sleep_Select_Internal_8MHz_Oscillat
           _Sleep_Unused_GPIO_Config
 ---------------------------------------------------------------------------------
 (2) _Sleep_Unused_GPIO_Config                             1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Select_Internal_8MHz_Oscillator                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Disable_Watchdog                               1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Disable_Reference_Clock_Output                 1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Disable_FVR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Disable_ADC                                    1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_On_50_Percent_Duty_Cycle                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_On_20_Percent_Duty_Cycle                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_On_100_Percent_Duty_Cycle                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Off                                              1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Button_Init                                          1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Button_Get_State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISRs                                                 2     2      0      70
                                              4 BANK0      2     2      0
             _Button_ISR_Executables
 ---------------------------------------------------------------------------------
 (4) _Button_ISR_Executables                               3     3      0      70
                                              1 BANK0      3     3      0
             _Button_Interrupt_Fired
 ---------------------------------------------------------------------------------
 (5) _Button_Interrupt_Fired                               1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Button_Get_State
   _Button_Init
   _PWM_Init
   _PWM_Off
   _PWM_On_100_Percent_Duty_Cycle
   _PWM_On_20_Percent_Duty_Cycle
   _PWM_On_50_Percent_Duty_Cycle
   _Sleep_Init
     _Sleep_Disable_ADC
     _Sleep_Disable_FVR
     _Sleep_Disable_Reference_Clock_Output
     _Sleep_Disable_Watchdog
     _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode
     _Sleep_Select_Internal_8MHz_Oscillator
     _Sleep_Unused_GPIO_Config

 _ISRs (ROOT)
   _Button_ISR_Executables
     _Button_Interrupt_Fired

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               3E      7       8       3       12.9%
ABS                  0      0       8       4        0.0%
DATA                 0      0       8       5        0.0%
BITBANK0            3E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 05 23:09:39 2023

                                  _Button_ISR_Executables 000E  
                                                      l25 005E  
                                                      l50 00DE  
                                                      l53 00DC  
                                                      l47 009A  
                                                      l56 00E0  
                                                      l80 00AA  
                                                      l59 00D6  
                                                      l83 00AE  
                                                      l92 00C7  
                                                      l86 00B2  
                                                      l95 00DA  
                                                      l89 00CC  
                                                      l98 00D8  
                                                     l101 00D1  
                                                     l104 008D  
                                                     l131 00E2  
                                                     l107 00BA  
                                                     l124 006B  
                                                     l125 0070  
                                                     l128 0080  
                                                     l801 008E  
                                                     l803 00B3  
                                                     l813 00D2  
                                                     l805 00B7  
                                                     l815 00DD  
                                                     l807 00B8  
                                                     l809 00E1  
                                                     l817 00DB  
                                                     l761 00C3  
                                                     l841 003A  
                                                     l819 00DF  
                                                     l763 00D9  
                                                     l851 004E  
                                                     l843 003D  
                                                     l765 00D7  
                                                     l757 00A8  
                                                     l853 0054  
                                                     l845 0043  
                                                     l791 006A  
                                                     l783 0060  
                                                     l767 00CD  
                                                     l759 00C8  
                                                     l855 0056  
                                                     l847 0046  
                                                     l793 006F  
                                                     l785 0061  
                                                     l769 0081  
                                                     l857 005C  
                                                     l849 004C  
                                                     l795 0074  
                                                     l787 0065  
                                                     l797 0078  
                                                     l789 0066  
                                                     l799 007C  
                                                     u200 006A  
                                                     u201 0069  
                                                     u210 006F  
                                                     u211 006E  
                                                     u220 0074  
                                                     u300 005C  
                                                     u221 0073  
                                                     u301 005B  
                                                     u230 007C  
                                                     u231 007B  
                                                     u160 00AE  
                                                     u161 00AD  
                                                     u170 00B2  
                                                     u171 00B1  
                                                     u270 0043  
                                                     u271 0042  
                                                     u280 004C  
                                                     u281 004B  
                                                     u290 0054  
                                                     u291 0053  
                                       _Sleep_Disable_ADC 00CD  
                                       _Sleep_Disable_FVR 00D9  
                                      ?_Sleep_Disable_ADC 0040  
                                      ?_Sleep_Disable_FVR 0040  
                                                    _LATA 0007  
                                                    i1l38 00BC  
                                                    _ISRs 00BB  
                                                    _main 003A  
                                                    btemp 007E  
                                         __end_of_PWM_Off 00D7  
                                     ??_Sleep_Disable_ADC 0046  
                                     ??_Sleep_Disable_FVR 0000  
                                                    start 000A  
                    __end_of_PWM_On_20_Percent_Duty_Cycle 00DF  
                            _PWM_On_20_Percent_Duty_Cycle 00DD  
                    __end_of_PWM_On_50_Percent_Duty_Cycle 00DD  
                            _PWM_On_50_Percent_Duty_Cycle 00DB  
                                                   ?_ISRs 0040  
                                           ??_Button_Init 0046  
                                        _Button_Get_State 00E1  
                                                   ?_main 0040  
                                                   _ADCON 001F  
           __end_of_Sleep_Select_Internal_8MHz_Oscillator 00B3  
                  ?_Sleep_Select_Internal_8MHz_Oscillator 0040  
                 ??_Sleep_Select_Internal_8MHz_Oscillator 0000  
                   _Sleep_Select_Internal_8MHz_Oscillator 00A8  
                                                   _IOCAF 001C  
                                                   _IOCAN 001B  
                                                   i1l140 0016  
                                                   i1l143 0039  
                                                   i1l136 00A7  
                                                   i1l821 000E  
                                                   i1l831 0026  
                                                   i1l823 0014  
                                                   i1l833 002A  
                                                   i1l771 009B  
                                                   i1l835 0030  
                                                   i1l773 009C  
                                                   i1l837 0031  
                                                   i1l829 0017  
                                                   i1l775 00A0  
                                                   i1l839 0035  
                                                   i1l777 00A4  
                                                   i1l779 00A6  
                                                   i1l859 00BB  
                               __end_of_Sleep_Disable_ADC 00D2  
                                                   u24_20 0014  
                                                   u24_21 0013  
                                                   u25_20 0026  
                                                   u25_21 0025  
                                                   u18_20 00A0  
                                                   u26_20 0030  
                                                   u18_21 009F  
                                                   u26_21 002F  
                                                   u19_20 00A4  
                                                   u19_21 00A3  
                               __end_of_Sleep_Disable_FVR 00DB  
                                                   _TRISA 0006  
                                                   pclath 000A  
                                        __end_of_PWM_Init 009B  
                                                   status 0003  
                                                   wtemp0 007E  
                                            __end_of_ISRs 00C3  
                         ??_PWM_On_100_Percent_Duty_Cycle 0000  
                                         __initialization 000B  
                                            __end_of_main 0060  
                                                  ??_ISRs 0044  
                                                  ??_main 0000  
            __end_of_Sleep_Disable_Reference_Clock_Output 00CD  
                  ??_Sleep_Disable_Reference_Clock_Output 0046  
                   ?_Sleep_Disable_Reference_Clock_Output 0040  
                    _Sleep_Disable_Reference_Clock_Output 00C8  
                                     __end_of_Button_Init 0081  
                                                  _ANSELA 0008  
                                               ??_PWM_Off 0046  
                              ??_Sleep_Unused_GPIO_Config 0046  
                                                  _INTCON 000B  
                                                  _FVRCON 001D  
                                  _Sleep_Disable_Watchdog 00C3  
                                                  _OSCCON 0010  
                                                  _WDTCON 0030  
                                              _Sleep_Init 00B3  
                                 ?_Button_Interrupt_Fired 0040  
                                                  saved_w 007E  
                                 __end_of__initialization 000C  
                                 ?_Button_ISR_Executables 0040  
                                          __pcstackCOMMON 0000  
                          __end_of_Button_Interrupt_Fired 00A8  
                   __end_of_PWM_On_100_Percent_Duty_Cycle 00E1  
                           _PWM_On_100_Percent_Duty_Cycle 00DF  
                                             _Button_Init 0060  
                                               ?_PWM_Init 0040  
                                              __pbssBANK0 0047  
                                __end_of_Button_Get_State 00E3  
                          __end_of_Button_ISR_Executables 003A  
                                             ?_Sleep_Init 0040  
                                              __pmaintext 003A  
                                              __pintentry 0004  
                                                 _CLKRCON 0026  
                                              ??_PWM_Init 0046  
                                                 _VREGCON 003E  
                                                 _PWM_Off 00D2  
                                                 __ptext1 00B3  
                                                 __ptext2 0081  
                                                 __ptext3 00A8  
                                                 __ptext4 00D7  
                                                 __ptext5 00C3  
                                                 __ptext6 00C8  
                                                 __ptext7 00D9  
                                                 __ptext8 00CD  
                                                 __ptext9 00DB  
                                 ?_Sleep_Disable_Watchdog 0040  
                                    end_of_initialization 000C  
                          __end_of_Sleep_Disable_Watchdog 00C8  
                               ?_Sleep_Unused_GPIO_Config 0040  
                                            ?_Button_Init 0040  
                           ?_PWM_On_20_Percent_Duty_Cycle 0040  
                           ?_PWM_On_50_Percent_Duty_Cycle 0040  
                                     start_initialization 000B  
                                            _Button_State 0047  
                                 Button_ISR_Executables@i 0042  
                                       ?_Button_Get_State 0040  
                                            ??_Sleep_Init 0000  
                                      ??_Button_Get_State 0000  
                                               ___latbits 0000  
                                           __pcstackBANK0 0040  
                                      __end_of_Sleep_Init 00BB  
                            Button_Interrupt_Fired@status 0040  
                                                ?_PWM_Off 0040  
                          ??_PWM_On_20_Percent_Duty_Cycle 0000  
                          ??_PWM_On_50_Percent_Duty_Cycle 0000  
                                       interrupt_function 0004  
                                ??_Button_Interrupt_Fired 0000  
                                                _PWM_Init 008E  
                                ??_Button_ISR_Executables 0041  
                        __end_of_Sleep_Unused_GPIO_Config 008E  
                          ?_PWM_On_100_Percent_Duty_Cycle 0040  
                                                __ptext10 00DD  
                                                __ptext11 00DF  
                                                __ptext12 00D2  
                                                __ptext13 008E  
                                                __ptext14 0060  
                                                __ptext15 00E1  
                                                __ptext16 00BB  
                                                __ptext17 000E  
                                                __ptext18 009B  
                                                intlevel1 0000  
                                _Sleep_Unused_GPIO_Config 0081  
__end_of_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode 00D9  
       ?_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode 0040  
      ??_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode 0000  
        _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode 00D7  
                                ??_Sleep_Disable_Watchdog 0046  
                                  _Button_Interrupt_Fired 009B  
