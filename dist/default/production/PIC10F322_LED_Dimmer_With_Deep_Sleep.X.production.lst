

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 09 00:32:38 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	10F322
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32     0000                     
    33                           ; Version 2.32
    34                           ; Generated 23/11/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC10F322 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0000                     	;# 
    69     0001                     	;# 
    70     0002                     	;# 
    71     0003                     	;# 
    72     0004                     	;# 
    73     0005                     	;# 
    74     0006                     	;# 
    75     0007                     	;# 
    76     0008                     	;# 
    77     0009                     	;# 
    78     000A                     	;# 
    79     000B                     	;# 
    80     000C                     	;# 
    81     000D                     	;# 
    82     000E                     	;# 
    83     000F                     	;# 
    84     0010                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0014                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0016                     	;# 
    92     0017                     	;# 
    93     0018                     	;# 
    94     0019                     	;# 
    95     0019                     	;# 
    96     001A                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     001D                     	;# 
   100     001E                     	;# 
   101     001F                     	;# 
   102     0020                     	;# 
   103     0020                     	;# 
   104     0021                     	;# 
   105     0022                     	;# 
   106     0022                     	;# 
   107     0023                     	;# 
   108     0024                     	;# 
   109     0025                     	;# 
   110     0026                     	;# 
   111     0027                     	;# 
   112     0027                     	;# 
   113     0028                     	;# 
   114     0029                     	;# 
   115     002A                     	;# 
   116     002A                     	;# 
   117     002B                     	;# 
   118     002C                     	;# 
   119     002D                     	;# 
   120     002E                     	;# 
   121     0030                     	;# 
   122     0031                     	;# 
   123     0032                     	;# 
   124     0033                     	;# 
   125     0034                     	;# 
   126     0035                     	;# 
   127     0036                     	;# 
   128     0037                     	;# 
   129     0038                     	;# 
   130     0039                     	;# 
   131     003A                     	;# 
   132     003B                     	;# 
   133     003C                     	;# 
   134     003D                     	;# 
   135     003E                     	;# 
   136     003F                     	;# 
   137     0000                     	;# 
   138     0001                     	;# 
   139     0002                     	;# 
   140     0003                     	;# 
   141     0004                     	;# 
   142     0005                     	;# 
   143     0006                     	;# 
   144     0007                     	;# 
   145     0008                     	;# 
   146     0009                     	;# 
   147     000A                     	;# 
   148     000B                     	;# 
   149     000C                     	;# 
   150     000D                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     0019                     	;# 
   165     001A                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0020                     	;# 
   172     0020                     	;# 
   173     0021                     	;# 
   174     0022                     	;# 
   175     0022                     	;# 
   176     0023                     	;# 
   177     0024                     	;# 
   178     0025                     	;# 
   179     0026                     	;# 
   180     0027                     	;# 
   181     0027                     	;# 
   182     0028                     	;# 
   183     0029                     	;# 
   184     002A                     	;# 
   185     002A                     	;# 
   186     002B                     	;# 
   187     002C                     	;# 
   188     002D                     	;# 
   189     002E                     	;# 
   190     0030                     	;# 
   191     0031                     	;# 
   192     0032                     	;# 
   193     0033                     	;# 
   194     0034                     	;# 
   195     0035                     	;# 
   196     0036                     	;# 
   197     0037                     	;# 
   198     0038                     	;# 
   199     0039                     	;# 
   200     003A                     	;# 
   201     003B                     	;# 
   202     003C                     	;# 
   203     003D                     	;# 
   204     003E                     	;# 
   205     003F                     	;# 
   206     0000                     	;# 
   207     0001                     	;# 
   208     0002                     	;# 
   209     0003                     	;# 
   210     0004                     	;# 
   211     0005                     	;# 
   212     0006                     	;# 
   213     0007                     	;# 
   214     0008                     	;# 
   215     0009                     	;# 
   216     000A                     	;# 
   217     000B                     	;# 
   218     000C                     	;# 
   219     000D                     	;# 
   220     000E                     	;# 
   221     000F                     	;# 
   222     0010                     	;# 
   223     0011                     	;# 
   224     0012                     	;# 
   225     0013                     	;# 
   226     0014                     	;# 
   227     0015                     	;# 
   228     0016                     	;# 
   229     0016                     	;# 
   230     0017                     	;# 
   231     0018                     	;# 
   232     0019                     	;# 
   233     0019                     	;# 
   234     001A                     	;# 
   235     001B                     	;# 
   236     001C                     	;# 
   237     001D                     	;# 
   238     001E                     	;# 
   239     001F                     	;# 
   240     0020                     	;# 
   241     0020                     	;# 
   242     0021                     	;# 
   243     0022                     	;# 
   244     0022                     	;# 
   245     0023                     	;# 
   246     0024                     	;# 
   247     0025                     	;# 
   248     0026                     	;# 
   249     0027                     	;# 
   250     0027                     	;# 
   251     0028                     	;# 
   252     0029                     	;# 
   253     002A                     	;# 
   254     002A                     	;# 
   255     002B                     	;# 
   256     002C                     	;# 
   257     002D                     	;# 
   258     002E                     	;# 
   259     0030                     	;# 
   260     0031                     	;# 
   261     0032                     	;# 
   262     0033                     	;# 
   263     0034                     	;# 
   264     0035                     	;# 
   265     0036                     	;# 
   266     0037                     	;# 
   267     0038                     	;# 
   268     0039                     	;# 
   269     003A                     	;# 
   270     003B                     	;# 
   271     003C                     	;# 
   272     003D                     	;# 
   273     003E                     	;# 
   274     003F                     	;# 
   275     0000                     	;# 
   276     0001                     	;# 
   277     0002                     	;# 
   278     0003                     	;# 
   279     0004                     	;# 
   280     0005                     	;# 
   281     0006                     	;# 
   282     0007                     	;# 
   283     0008                     	;# 
   284     0009                     	;# 
   285     000A                     	;# 
   286     000B                     	;# 
   287     000C                     	;# 
   288     000D                     	;# 
   289     000E                     	;# 
   290     000F                     	;# 
   291     0010                     	;# 
   292     0011                     	;# 
   293     0012                     	;# 
   294     0013                     	;# 
   295     0014                     	;# 
   296     0015                     	;# 
   297     0016                     	;# 
   298     0016                     	;# 
   299     0017                     	;# 
   300     0018                     	;# 
   301     0019                     	;# 
   302     0019                     	;# 
   303     001A                     	;# 
   304     001B                     	;# 
   305     001C                     	;# 
   306     001D                     	;# 
   307     001E                     	;# 
   308     001F                     	;# 
   309     0020                     	;# 
   310     0020                     	;# 
   311     0021                     	;# 
   312     0022                     	;# 
   313     0022                     	;# 
   314     0023                     	;# 
   315     0024                     	;# 
   316     0025                     	;# 
   317     0026                     	;# 
   318     0027                     	;# 
   319     0027                     	;# 
   320     0028                     	;# 
   321     0029                     	;# 
   322     002A                     	;# 
   323     002A                     	;# 
   324     002B                     	;# 
   325     002C                     	;# 
   326     002D                     	;# 
   327     002E                     	;# 
   328     0030                     	;# 
   329     0031                     	;# 
   330     0032                     	;# 
   331     0033                     	;# 
   332     0034                     	;# 
   333     0035                     	;# 
   334     0036                     	;# 
   335     0037                     	;# 
   336     0038                     	;# 
   337     0039                     	;# 
   338     003A                     	;# 
   339     003B                     	;# 
   340     003C                     	;# 
   341     003D                     	;# 
   342     003E                     	;# 
   343     003F                     	;# 
   344     001C                     _IOCAF	set	28
   345     000B                     _INTCON	set	11
   346     001B                     _IOCAN	set	27
   347     0009                     _WPUA	set	9
   348     000E                     _OPTION_REG	set	14
   349     001F                     _ADCON	set	31
   350     003E                     _VREGCON	set	62
   351     001D                     _FVRCON	set	29
   352     0030                     _WDTCON	set	48
   353     0026                     _CLKRCON	set	38
   354     0010                     _OSCCON	set	16
   355     0007                     _LATA	set	7
   356     0013                     _T2CON	set	19
   357     000C                     _PIR1	set	12
   358     0012                     _PR2	set	18
   359     0019                     _PWM2CON	set	25
   360     0006                     _TRISA	set	6
   361     0008                     _ANSELA	set	8
   362     0018                     _PWM2DCH	set	24
   363     0017                     _PWM2DCL	set	23
   364                           
   365                           	psect	cinit
   366     000B                     start_initialization:	
   367                           ; #config settings
   368                           
   369     000B                     __initialization:
   370                           
   371                           ; Clear objects allocated to BANK0
   372     000B  01CD               	clrf	__pbssBANK0& (0+127)
   373     000C                     end_of_initialization:	
   374                           ;End of C runtime variable initialization code
   375                           
   376     000C                     __end_of__initialization:
   377     000C  0183               	clrf	3
   378     000D  283A               	ljmp	_main	;jump to C main() function
   379                           
   380                           	psect	bssBANK0
   381     004D                     __pbssBANK0:
   382     004D                     _Button_State:
   383     004D                     	ds	1
   384                           
   385                           	psect	cstackCOMMON
   386     0000                     __pcstackCOMMON:
   387     0000                     ??_Sleep_Init:
   388     0000                     ??_Button_Get_State:	
   389                           ; 1 bytes @ 0x0
   390                           
   391     0000                     ??_PWM_Off:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0000                     ??_PWM_On_20_Percent_Duty_Cycle:	
   395                           ; 1 bytes @ 0x0
   396                           
   397     0000                     ??_PWM_On_50_Percent_Duty_Cycle:	
   398                           ; 1 bytes @ 0x0
   399                           
   400     0000                     ??_PWM_On_100_Percent_Duty_Cycle:	
   401                           ; 1 bytes @ 0x0
   402                           
   403     0000                     ??_main:	
   404                           ; 1 bytes @ 0x0
   405                           
   406     0000                     ??_Sleep_Select_Internal_8MHz_Oscillator:	
   407                           ; 1 bytes @ 0x0
   408                           
   409     0000                     ??_Sleep_Disable_FVR:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0000                     ??_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0000                     ??_Button_Interrupt_Fired:	
   416                           ; 1 bytes @ 0x0
   417                           
   418                           
   419                           	psect	cstackBANK0
   420     0040                     __pcstackBANK0:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0040                     ?_Button_Init:
   424     0040                     ?_Sleep_Init:	
   425                           ; 1 bytes @ 0x0
   426                           
   427     0040                     ?_Button_Get_State:	
   428                           ; 1 bytes @ 0x0
   429                           
   430     0040                     ?_PWM_Off:	
   431                           ; 1 bytes @ 0x0
   432                           
   433     0040                     ?_PWM_On_20_Percent_Duty_Cycle:	
   434                           ; 1 bytes @ 0x0
   435                           
   436     0040                     ?_PWM_On_50_Percent_Duty_Cycle:	
   437                           ; 1 bytes @ 0x0
   438                           
   439     0040                     ?_PWM_On_100_Percent_Duty_Cycle:	
   440                           ; 1 bytes @ 0x0
   441                           
   442     0040                     ?_Button_ISR_Executables:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0040                     ?_main:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0040                     ?_ISRs:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0040                     ?_PWM_Enable:	
   452                           ; 1 bytes @ 0x0
   453                           
   454     0040                     ?_PWM_Disable:	
   455                           ; 1 bytes @ 0x0
   456                           
   457     0040                     ?_Sleep_Select_Internal_8MHz_Oscillator:	
   458                           ; 1 bytes @ 0x0
   459                           
   460     0040                     ?_Sleep_Disable_Reference_Clock_Output:	
   461                           ; 1 bytes @ 0x0
   462                           
   463     0040                     ?_Sleep_Disable_Watchdog:	
   464                           ; 1 bytes @ 0x0
   465                           
   466     0040                     ?_Sleep_Disable_FVR:	
   467                           ; 1 bytes @ 0x0
   468                           
   469     0040                     ?_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode:	
   470                           ; 1 bytes @ 0x0
   471                           
   472     0040                     ?_Sleep_Disable_ADC:	
   473                           ; 1 bytes @ 0x0
   474                           
   475     0040                     ?_Sleep_Unused_GPIO_Config:	
   476                           ; 1 bytes @ 0x0
   477                           
   478     0040                     ?_Button_Interrupt_Fired:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0040                     Button_Interrupt_Fired@status:	
   482                           ; 1 bytes @ 0x0
   483                           
   484                           
   485                           ; 1 bytes @ 0x0
   486     0040                     	ds	1
   487     0041                     ??_Button_ISR_Executables:
   488                           
   489                           ; 1 bytes @ 0x1
   490     0041                     	ds	1
   491     0042                     Button_ISR_Executables@i:
   492                           
   493                           ; 2 bytes @ 0x2
   494     0042                     	ds	2
   495     0044                     ??_ISRs:
   496                           
   497                           ; 1 bytes @ 0x4
   498     0044                     	ds	2
   499     0046                     ??_Button_Init:
   500     0046                     ?_PWM_Set_Duty:	
   501                           ; 1 bytes @ 0x6
   502                           
   503     0046                     ??_Sleep_Disable_Reference_Clock_Output:	
   504                           ; 1 bytes @ 0x6
   505                           
   506     0046                     ??_Sleep_Disable_Watchdog:	
   507                           ; 1 bytes @ 0x6
   508                           
   509     0046                     ??_Sleep_Disable_ADC:	
   510                           ; 1 bytes @ 0x6
   511                           
   512     0046                     ??_Sleep_Unused_GPIO_Config:	
   513                           ; 1 bytes @ 0x6
   514                           
   515     0046                     PWM_Set_Duty@duty:	
   516                           ; 1 bytes @ 0x6
   517                           
   518                           
   519                           ; 2 bytes @ 0x6
   520     0046                     	ds	2
   521     0048                     ??_PWM_Set_Duty:
   522                           
   523                           ; 1 bytes @ 0x8
   524     0048                     	ds	2
   525     004A                     PWM_Set_Duty@temp:
   526                           
   527                           ; 2 bytes @ 0xA
   528     004A                     	ds	2
   529     004C                     ??_PWM_Enable:
   530     004C                     ??_PWM_Disable:	
   531                           ; 1 bytes @ 0xC
   532                           
   533                           
   534                           ; 1 bytes @ 0xC
   535     004C                     	ds	1
   536                           
   537                           	psect	maintext
   538     003A                     __pmaintext:	
   539 ;;
   540 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   541 ;;
   542 ;; *************** function _main *****************
   543 ;; Defined at:
   544 ;;		line 17 in file "main.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, status,2, status,0, pclath, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : B00/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0
   558 ;;      Params:         0       0
   559 ;;      Locals:         0       0
   560 ;;      Temps:          0       0
   561 ;;      Totals:         0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels required when called: 6
   564 ;; This function calls:
   565 ;;		_Button_Get_State
   566 ;;		_Button_Init
   567 ;;		_PWM_Off
   568 ;;		_PWM_On_100_Percent_Duty_Cycle
   569 ;;		_PWM_On_20_Percent_Duty_Cycle
   570 ;;		_PWM_On_50_Percent_Duty_Cycle
   571 ;;		_Sleep_Init
   572 ;; This function is called by:
   573 ;;		Startup code after reset
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577     003A                     _main:	
   578                           ;psect for function _main
   579                           
   580     003A                     l964:	
   581                           ;incstack = 0
   582                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   583                           
   584                           
   585                           ;main.c: 19: Button_Init();
   586     003A  2080               	fcall	_Button_Init
   587                           
   588                           ;main.c: 20: Sleep_Init();
   589     003B  20EF               	fcall	_Sleep_Init
   590     003C                     l966:
   591                           
   592                           ;main.c: 24: if(Button_Get_State() == 0){
   593     003C  2137               	fcall	_Button_Get_State
   594     003D  3A00               	xorlw	0
   595     003E  1D03               	skipz
   596     003F  2841               	goto	u311
   597     0040  2842               	goto	u310
   598     0041                     u311:
   599     0041  2845               	goto	l970
   600     0042                     u310:
   601     0042                     l968:
   602                           
   603                           ;main.c: 25: PWM_Off();
   604     0042  2135               	fcall	_PWM_Off
   605     0043  0063               	sleep	;# 
   606                           
   607                           ;main.c: 27: }else if( Button_Get_State() == 1){
   608     0044  283C               	goto	l966
   609     0045                     l970:
   610     0045  2137               	fcall	_Button_Get_State
   611     0046  3A01               	xorlw	1
   612     0047  1D03               	skipz
   613     0048  284A               	goto	u321
   614     0049  284B               	goto	u320
   615     004A                     u321:
   616     004A  284D               	goto	l974
   617     004B                     u320:
   618     004B                     l972:
   619                           
   620                           ;main.c: 28: PWM_On_20_Percent_Duty_Cycle();
   621     004B  2114               	fcall	_PWM_On_20_Percent_Duty_Cycle
   622                           
   623                           ;main.c: 29: }else if( Button_Get_State() == 2){
   624     004C  283C               	goto	l966
   625     004D                     l974:
   626     004D  2137               	fcall	_Button_Get_State
   627     004E  3A02               	xorlw	2
   628     004F  1D03               	skipz
   629     0050  2852               	goto	u331
   630     0051  2853               	goto	u330
   631     0052                     u331:
   632     0052  2855               	goto	l978
   633     0053                     u330:
   634     0053                     l976:
   635                           
   636                           ;main.c: 30: PWM_On_50_Percent_Duty_Cycle();
   637     0053  210D               	fcall	_PWM_On_50_Percent_Duty_Cycle
   638                           
   639                           ;main.c: 31: }else if( Button_Get_State() == 3){
   640     0054  283C               	goto	l966
   641     0055                     l978:
   642     0055  2137               	fcall	_Button_Get_State
   643     0056  3A03               	xorlw	3
   644     0057  1D03               	skipz
   645     0058  285A               	goto	u341
   646     0059  285B               	goto	u340
   647     005A                     u341:
   648     005A  285D               	goto	l23
   649     005B                     u340:
   650     005B                     l980:
   651                           
   652                           ;main.c: 32: PWM_On_100_Percent_Duty_Cycle();
   653     005B  211B               	fcall	_PWM_On_100_Percent_Duty_Cycle
   654     005C  283C               	goto	l966
   655     005D                     l23:
   656     005D  283C               	goto	l966
   657     005E  280A               	ljmp	start
   658     005F                     __end_of_main:
   659                           
   660                           	psect	text1
   661     00EF                     __ptext1:	
   662 ;; *************** function _Sleep_Init *****************
   663 ;; Defined at:
   664 ;;		line 77 in file "sleep.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0, pclath, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0
   678 ;;      Params:         0       0
   679 ;;      Locals:         0       0
   680 ;;      Temps:          0       0
   681 ;;      Totals:         0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: 4
   685 ;; This function calls:
   686 ;;		_Sleep_Disable_ADC
   687 ;;		_Sleep_Disable_FVR
   688 ;;		_Sleep_Disable_Reference_Clock_Output
   689 ;;		_Sleep_Disable_Watchdog
   690 ;;		_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode
   691 ;;		_Sleep_Select_Internal_8MHz_Oscillator
   692 ;;		_Sleep_Unused_GPIO_Config
   693 ;; This function is called by:
   694 ;;		_main
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698     00EF                     _Sleep_Init:	
   699                           ;psect for function _Sleep_Init
   700                           
   701     00EF                     l914:	
   702                           ;incstack = 0
   703                           ; Regs used in _Sleep_Init: [wreg+status,2+status,0+pclath+cstack]
   704                           
   705                           
   706                           ;sleep.c: 78: OPTION_REG = 0x7f;
   707     00EF  307F               	movlw	127
   708     00F0  008E               	movwf	14	;volatile
   709     00F1                     l916:
   710                           
   711                           ;sleep.c: 79: WPUA |= (1<<3);
   712     00F1  1589               	bsf	9,3	;volatile
   713     00F2                     l918:
   714                           
   715                           ;sleep.c: 80: Sleep_Select_Internal_8MHz_Oscillator();
   716     00F2  20FA               	fcall	_Sleep_Select_Internal_8MHz_Oscillator
   717     00F3                     l920:
   718                           
   719                           ;sleep.c: 81: Sleep_Disable_Reference_Clock_Output();
   720     00F3  2127               	fcall	_Sleep_Disable_Reference_Clock_Output
   721     00F4                     l922:
   722                           
   723                           ;sleep.c: 82: Sleep_Disable_Watchdog();
   724     00F4  2122               	fcall	_Sleep_Disable_Watchdog
   725     00F5                     l924:
   726                           
   727                           ;sleep.c: 83: Sleep_Disable_ADC();
   728     00F5  212C               	fcall	_Sleep_Disable_ADC
   729     00F6                     l926:
   730                           
   731                           ;sleep.c: 84: Sleep_Disable_FVR();
   732     00F6  2133               	fcall	_Sleep_Disable_FVR
   733     00F7                     l928:
   734                           
   735                           ;sleep.c: 85: Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode();
   736     00F7  2131               	fcall	_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode
   737     00F8                     l930:
   738                           
   739                           ;sleep.c: 86: Sleep_Unused_GPIO_Config();
   740     00F8  20D5               	fcall	_Sleep_Unused_GPIO_Config
   741     00F9                     l130:
   742     00F9  0008               	return
   743     00FA                     __end_of_Sleep_Init:
   744                           
   745                           	psect	text2
   746     00D5                     __ptext2:	
   747 ;; *************** function _Sleep_Unused_GPIO_Config *****************
   748 ;; Defined at:
   749 ;;		line 71 in file "sleep.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0
   763 ;;      Params:         0       0
   764 ;;      Locals:         0       0
   765 ;;      Temps:          0       1
   766 ;;      Totals:         0       1
   767 ;;Total ram usage:        1 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 3
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_Sleep_Init
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777     00D5                     _Sleep_Unused_GPIO_Config:	
   778                           ;psect for function _Sleep_Unused_GPIO_Config
   779                           
   780     00D5                     l882:	
   781                           ;incstack = 0
   782                           ; Regs used in _Sleep_Unused_GPIO_Config: [wreg+status,2+status,0]
   783                           
   784                           
   785                           ;sleep.c: 72: TRISA &=~ (1<<2);
   786     00D5  30FB               	movlw	251
   787     00D6  00C6               	movwf	??_Sleep_Unused_GPIO_Config
   788     00D7  0846               	movf	??_Sleep_Unused_GPIO_Config,w
   789     00D8  0586               	andwf	6,f	;volatile
   790                           
   791                           ;sleep.c: 73: ANSELA &=~ (1<<2);
   792     00D9  30FB               	movlw	251
   793     00DA  00C6               	movwf	??_Sleep_Unused_GPIO_Config
   794     00DB  0846               	movf	??_Sleep_Unused_GPIO_Config,w
   795     00DC  0588               	andwf	8,f	;volatile
   796                           
   797                           ;sleep.c: 74: LATA &=~ (1<<2);
   798     00DD  30FB               	movlw	251
   799     00DE  00C6               	movwf	??_Sleep_Unused_GPIO_Config
   800     00DF  0846               	movf	??_Sleep_Unused_GPIO_Config,w
   801     00E0  0587               	andwf	7,f	;volatile
   802     00E1                     l127:
   803     00E1  0008               	return
   804     00E2                     __end_of_Sleep_Unused_GPIO_Config:
   805                           
   806                           	psect	text3
   807     00FA                     __ptext3:	
   808 ;; *************** function _Sleep_Select_Internal_8MHz_Oscillator *****************
   809 ;; Defined at:
   810 ;;		line 45 in file "sleep.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0
   824 ;;      Params:         0       0
   825 ;;      Locals:         0       0
   826 ;;      Temps:          0       0
   827 ;;      Totals:         0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; Hardware stack levels required when called: 3
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_Sleep_Init
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838     00FA                     _Sleep_Select_Internal_8MHz_Oscillator:	
   839                           ;psect for function _Sleep_Select_Internal_8MHz_Oscillator
   840                           
   841     00FA                     l870:	
   842                           ;incstack = 0
   843                           ; Regs used in _Sleep_Select_Internal_8MHz_Oscillator: [wreg]
   844                           
   845                           
   846                           ;sleep.c: 46: OSCCON = (0x06<<0x04U);
   847     00FA  3060               	movlw	96
   848     00FB  0090               	movwf	16	;volatile
   849     00FC                     l103:	
   850                           ;sleep.c: 47: while((OSCCON & (0x01<<0x03U)) == 0);
   851                           
   852     00FC  1D90               	btfss	16,3	;volatile
   853     00FD  28FF               	goto	u201
   854     00FE  2900               	goto	u200
   855     00FF                     u201:
   856     00FF  28FC               	goto	l103
   857     0100                     u200:
   858     0100                     l106:
   859     0100  1C10               	btfss	16,0	;volatile
   860     0101  2903               	goto	u211
   861     0102  2904               	goto	u210
   862     0103                     u211:
   863     0103  2900               	goto	l106
   864     0104                     u210:
   865     0104                     l109:
   866     0104  0008               	return
   867     0105                     __end_of_Sleep_Select_Internal_8MHz_Oscillator:
   868                           
   869                           	psect	text4
   870     0131                     __ptext4:	
   871 ;; *************** function _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode *****************
   872 ;; Defined at:
   873 ;;		line 63 in file "sleep.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		None
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0
   887 ;;      Params:         0       0
   888 ;;      Locals:         0       0
   889 ;;      Temps:          0       0
   890 ;;      Totals:         0       0
   891 ;;Total ram usage:        0 bytes
   892 ;; Hardware stack levels used: 1
   893 ;; Hardware stack levels required when called: 3
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_Sleep_Init
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901     0131                     _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode:	
   902                           ;psect for function _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode
   903                           
   904     0131                     l878:	
   905                           ;incstack = 0
   906                           ; Regs used in _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode: []
   907                           
   908                           
   909                           ;sleep.c: 64: VREGCON |= (0x01<<0x01U);
   910     0131  14BE               	bsf	62,1	;volatile
   911     0132                     l121:
   912     0132  0008               	return
   913     0133                     __end_of_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode:
   914                           
   915                           	psect	text5
   916     0122                     __ptext5:	
   917 ;; *************** function _Sleep_Disable_Watchdog *****************
   918 ;; Defined at:
   919 ;;		line 55 in file "sleep.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0
   933 ;;      Params:         0       0
   934 ;;      Locals:         0       0
   935 ;;      Temps:          0       1
   936 ;;      Totals:         0       1
   937 ;;Total ram usage:        1 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; Hardware stack levels required when called: 3
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_Sleep_Init
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947     0122                     _Sleep_Disable_Watchdog:	
   948                           ;psect for function _Sleep_Disable_Watchdog
   949                           
   950     0122                     l874:	
   951                           ;incstack = 0
   952                           ; Regs used in _Sleep_Disable_Watchdog: [wreg+status,2+status,0]
   953                           
   954                           
   955                           ;sleep.c: 56: WDTCON &=~ (0x01<<0x00U);
   956     0122  30FE               	movlw	254
   957     0123  00C6               	movwf	??_Sleep_Disable_Watchdog
   958     0124  0846               	movf	??_Sleep_Disable_Watchdog,w
   959     0125  05B0               	andwf	48,f	;volatile
   960     0126                     l115:
   961     0126  0008               	return
   962     0127                     __end_of_Sleep_Disable_Watchdog:
   963                           
   964                           	psect	text6
   965     0127                     __ptext6:	
   966 ;; *************** function _Sleep_Disable_Reference_Clock_Output *****************
   967 ;; Defined at:
   968 ;;		line 51 in file "sleep.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, status,2, status,0
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0
   982 ;;      Params:         0       0
   983 ;;      Locals:         0       0
   984 ;;      Temps:          0       1
   985 ;;      Totals:         0       1
   986 ;;Total ram usage:        1 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 3
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_Sleep_Init
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996     0127                     _Sleep_Disable_Reference_Clock_Output:	
   997                           ;psect for function _Sleep_Disable_Reference_Clock_Output
   998                           
   999     0127                     l872:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _Sleep_Disable_Reference_Clock_Output: [wreg+status,2+status,0]
  1002                           
  1003                           
  1004                           ;sleep.c: 52: CLKRCON &=~ (0x01<<0x06U);
  1005     0127  30BF               	movlw	191
  1006     0128  00C6               	movwf	??_Sleep_Disable_Reference_Clock_Output
  1007     0129  0846               	movf	??_Sleep_Disable_Reference_Clock_Output,w
  1008     012A  05A6               	andwf	38,f	;volatile
  1009     012B                     l112:
  1010     012B  0008               	return
  1011     012C                     __end_of_Sleep_Disable_Reference_Clock_Output:
  1012                           
  1013                           	psect	text7
  1014     0133                     __ptext7:	
  1015 ;; *************** function _Sleep_Disable_FVR *****************
  1016 ;; Defined at:
  1017 ;;		line 59 in file "sleep.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		status,2
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0
  1031 ;;      Params:         0       0
  1032 ;;      Locals:         0       0
  1033 ;;      Temps:          0       0
  1034 ;;      Totals:         0       0
  1035 ;;Total ram usage:        0 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 3
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_Sleep_Init
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045     0133                     _Sleep_Disable_FVR:	
  1046                           ;psect for function _Sleep_Disable_FVR
  1047                           
  1048     0133                     l876:	
  1049                           ;incstack = 0
  1050                           ; Regs used in _Sleep_Disable_FVR: [status,2]
  1051                           
  1052                           
  1053                           ;sleep.c: 60: FVRCON = 0x00;
  1054     0133  019D               	clrf	29	;volatile
  1055     0134                     l118:
  1056     0134  0008               	return
  1057     0135                     __end_of_Sleep_Disable_FVR:
  1058                           
  1059                           	psect	text8
  1060     012C                     __ptext8:	
  1061 ;; *************** function _Sleep_Disable_ADC *****************
  1062 ;; Defined at:
  1063 ;;		line 67 in file "sleep.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0
  1077 ;;      Params:         0       0
  1078 ;;      Locals:         0       0
  1079 ;;      Temps:          0       1
  1080 ;;      Totals:         0       1
  1081 ;;Total ram usage:        1 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 3
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_Sleep_Init
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091     012C                     _Sleep_Disable_ADC:	
  1092                           ;psect for function _Sleep_Disable_ADC
  1093                           
  1094     012C                     l880:	
  1095                           ;incstack = 0
  1096                           ; Regs used in _Sleep_Disable_ADC: [wreg+status,2+status,0]
  1097                           
  1098                           
  1099                           ;sleep.c: 68: ADCON &=~ (0x01<<0x00U);
  1100     012C  30FE               	movlw	254
  1101     012D  00C6               	movwf	??_Sleep_Disable_ADC
  1102     012E  0846               	movf	??_Sleep_Disable_ADC,w
  1103     012F  059F               	andwf	31,f	;volatile
  1104     0130                     l124:
  1105     0130  0008               	return
  1106     0131                     __end_of_Sleep_Disable_ADC:
  1107                           
  1108                           	psect	text9
  1109     010D                     __ptext9:	
  1110 ;; *************** function _PWM_On_50_Percent_Duty_Cycle *****************
  1111 ;; Defined at:
  1112 ;;		line 47 in file "pwm.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, pclath, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0
  1126 ;;      Params:         0       0
  1127 ;;      Locals:         0       0
  1128 ;;      Temps:          0       0
  1129 ;;      Totals:         0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; Hardware stack levels required when called: 5
  1133 ;; This function calls:
  1134 ;;		_PWM_Enable
  1135 ;;		_PWM_Set_Duty
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141     010D                     _PWM_On_50_Percent_Duty_Cycle:	
  1142                           ;psect for function _PWM_On_50_Percent_Duty_Cycle
  1143                           
  1144     010D                     l940:	
  1145                           ;incstack = 0
  1146                           ; Regs used in _PWM_On_50_Percent_Duty_Cycle: [wreg+status,2+status,0+pclath+cstack]
  1147                           
  1148                           
  1149                           ;pwm.c: 48: PWM_Enable();
  1150     010D  20A1               	fcall	_PWM_Enable
  1151                           
  1152                           ;pwm.c: 49: PWM_Set_Duty(50);
  1153     010E  3032               	movlw	50
  1154     010F  00C6               	movwf	PWM_Set_Duty@duty
  1155     0110  3000               	movlw	0
  1156     0111  00C7               	movwf	PWM_Set_Duty@duty+1
  1157     0112  205F               	fcall	_PWM_Set_Duty
  1158     0113                     l72:
  1159     0113  0008               	return
  1160     0114                     __end_of_PWM_On_50_Percent_Duty_Cycle:
  1161                           
  1162                           	psect	text10
  1163     0114                     __ptext10:	
  1164 ;; *************** function _PWM_On_20_Percent_Duty_Cycle *****************
  1165 ;; Defined at:
  1166 ;;		line 42 in file "pwm.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0
  1180 ;;      Params:         0       0
  1181 ;;      Locals:         0       0
  1182 ;;      Temps:          0       0
  1183 ;;      Totals:         0       0
  1184 ;;Total ram usage:        0 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 5
  1187 ;; This function calls:
  1188 ;;		_PWM_Enable
  1189 ;;		_PWM_Set_Duty
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195     0114                     _PWM_On_20_Percent_Duty_Cycle:	
  1196                           ;psect for function _PWM_On_20_Percent_Duty_Cycle
  1197                           
  1198     0114                     l938:	
  1199                           ;incstack = 0
  1200                           ; Regs used in _PWM_On_20_Percent_Duty_Cycle: [wreg+status,2+status,0+pclath+cstack]
  1201                           
  1202                           
  1203                           ;pwm.c: 43: PWM_Enable();
  1204     0114  20A1               	fcall	_PWM_Enable
  1205                           
  1206                           ;pwm.c: 44: PWM_Set_Duty(20);
  1207     0115  3014               	movlw	20
  1208     0116  00C6               	movwf	PWM_Set_Duty@duty
  1209     0117  3000               	movlw	0
  1210     0118  00C7               	movwf	PWM_Set_Duty@duty+1
  1211     0119  205F               	fcall	_PWM_Set_Duty
  1212     011A                     l69:
  1213     011A  0008               	return
  1214     011B                     __end_of_PWM_On_20_Percent_Duty_Cycle:
  1215                           
  1216                           	psect	text11
  1217     011B                     __ptext11:	
  1218 ;; *************** function _PWM_On_100_Percent_Duty_Cycle *****************
  1219 ;; Defined at:
  1220 ;;		line 52 in file "pwm.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0, pclath, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0
  1234 ;;      Params:         0       0
  1235 ;;      Locals:         0       0
  1236 ;;      Temps:          0       0
  1237 ;;      Totals:         0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; Hardware stack levels required when called: 5
  1241 ;; This function calls:
  1242 ;;		_PWM_Enable
  1243 ;;		_PWM_Set_Duty
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249     011B                     _PWM_On_100_Percent_Duty_Cycle:	
  1250                           ;psect for function _PWM_On_100_Percent_Duty_Cycle
  1251                           
  1252     011B                     l942:	
  1253                           ;incstack = 0
  1254                           ; Regs used in _PWM_On_100_Percent_Duty_Cycle: [wreg+status,2+status,0+pclath+cstack]
  1255                           
  1256                           
  1257                           ;pwm.c: 53: PWM_Enable();
  1258     011B  20A1               	fcall	_PWM_Enable
  1259                           
  1260                           ;pwm.c: 54: PWM_Set_Duty(99);
  1261     011C  3063               	movlw	99
  1262     011D  00C6               	movwf	PWM_Set_Duty@duty
  1263     011E  3000               	movlw	0
  1264     011F  00C7               	movwf	PWM_Set_Duty@duty+1
  1265     0120  205F               	fcall	_PWM_Set_Duty
  1266     0121                     l75:
  1267     0121  0008               	return
  1268     0122                     __end_of_PWM_On_100_Percent_Duty_Cycle:
  1269                           
  1270                           	psect	text12
  1271     00A1                     __ptext12:	
  1272 ;; *************** function _PWM_Enable *****************
  1273 ;; Defined at:
  1274 ;;		line 17 in file "pwm.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0
  1288 ;;      Params:         0       0
  1289 ;;      Locals:         0       0
  1290 ;;      Temps:          0       1
  1291 ;;      Totals:         0       1
  1292 ;;Total ram usage:        1 bytes
  1293 ;; Hardware stack levels used: 1
  1294 ;; Hardware stack levels required when called: 4
  1295 ;; This function calls:
  1296 ;;		_PWM_Set_Duty
  1297 ;; This function is called by:
  1298 ;;		_PWM_On_20_Percent_Duty_Cycle
  1299 ;;		_PWM_On_50_Percent_Duty_Cycle
  1300 ;;		_PWM_On_100_Percent_Duty_Cycle
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304     00A1                     _PWM_Enable:	
  1305                           ;psect for function _PWM_Enable
  1306                           
  1307     00A1                     l836:	
  1308                           ;incstack = 0
  1309                           ; Regs used in _PWM_Enable: [wreg+status,2+status,0+pclath+cstack]
  1310                           
  1311                           
  1312                           ;pwm.c: 18: ANSELA &=~ (1<<0x01U);
  1313     00A1  30FD               	movlw	253
  1314     00A2  00CC               	movwf	??_PWM_Enable
  1315     00A3  084C               	movf	??_PWM_Enable,w
  1316     00A4  0588               	andwf	8,f	;volatile
  1317     00A5                     l838:
  1318                           
  1319                           ;pwm.c: 19: TRISA |= (1<<0x01U);
  1320     00A5  1486               	bsf	6,1	;volatile
  1321     00A6                     l840:
  1322                           
  1323                           ;pwm.c: 20: PWM2CON = 0x00;
  1324     00A6  0199               	clrf	25	;volatile
  1325     00A7                     l842:
  1326                           
  1327                           ;pwm.c: 21: PR2 = 100;
  1328     00A7  3064               	movlw	100
  1329     00A8  0092               	movwf	18	;volatile
  1330     00A9                     l844:
  1331                           
  1332                           ;pwm.c: 22: PWM_Set_Duty(20);
  1333     00A9  3014               	movlw	20
  1334     00AA  00C6               	movwf	PWM_Set_Duty@duty
  1335     00AB  3000               	movlw	0
  1336     00AC  00C7               	movwf	PWM_Set_Duty@duty+1
  1337     00AD  205F               	fcall	_PWM_Set_Duty
  1338     00AE                     l846:
  1339                           
  1340                           ;pwm.c: 23: PIR1 &=~ (1<<1);
  1341     00AE  30FD               	movlw	253
  1342     00AF  00CC               	movwf	??_PWM_Enable
  1343     00B0  084C               	movf	??_PWM_Enable,w
  1344     00B1  058C               	andwf	12,f	;volatile
  1345     00B2                     l848:
  1346                           
  1347                           ;pwm.c: 24: T2CON = (1<<0)|(1<<2);
  1348     00B2  3005               	movlw	5
  1349     00B3  0093               	movwf	19	;volatile
  1350     00B4                     l850:
  1351                           
  1352                           ;pwm.c: 25: PWM2CON = (1<<7);
  1353     00B4  3080               	movlw	128
  1354     00B5  0099               	movwf	25	;volatile
  1355     00B6                     l60:	
  1356                           ;pwm.c: 26: while((PIR1 & (1<<1)) == 0);
  1357                           
  1358     00B6  1C8C               	btfss	12,1	;volatile
  1359     00B7  28B9               	goto	u191
  1360     00B8  28BA               	goto	u190
  1361     00B9                     u191:
  1362     00B9  28B6               	goto	l60
  1363     00BA                     u190:
  1364     00BA                     l852:
  1365                           
  1366                           ;pwm.c: 27: TRISA &=~(1<<0x01U);
  1367     00BA  30FD               	movlw	253
  1368     00BB  00CC               	movwf	??_PWM_Enable
  1369     00BC  084C               	movf	??_PWM_Enable,w
  1370     00BD  0586               	andwf	6,f	;volatile
  1371     00BE                     l854:
  1372                           
  1373                           ;pwm.c: 28: PWM2CON |= (1<<6);
  1374     00BE  1719               	bsf	25,6	;volatile
  1375     00BF                     l63:
  1376     00BF  0008               	return
  1377     00C0                     __end_of_PWM_Enable:
  1378                           
  1379                           	psect	text13
  1380     0135                     __ptext13:	
  1381 ;; *************** function _PWM_Off *****************
  1382 ;; Defined at:
  1383 ;;		line 57 in file "pwm.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0, pclath, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0
  1397 ;;      Params:         0       0
  1398 ;;      Locals:         0       0
  1399 ;;      Temps:          0       0
  1400 ;;      Totals:         0       0
  1401 ;;Total ram usage:        0 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; Hardware stack levels required when called: 5
  1404 ;; This function calls:
  1405 ;;		_PWM_Disable
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411     0135                     _PWM_Off:	
  1412                           ;psect for function _PWM_Off
  1413                           
  1414     0135                     l936:	
  1415                           ;incstack = 0
  1416                           ; Regs used in _PWM_Off: [wreg+status,2+status,0+pclath+cstack]
  1417                           
  1418                           
  1419                           ;pwm.c: 58: PWM_Disable();
  1420     0135  20C0               	fcall	_PWM_Disable
  1421     0136                     l78:
  1422     0136  0008               	return
  1423     0137                     __end_of_PWM_Off:
  1424                           
  1425                           	psect	text14
  1426     00C0                     __ptext14:	
  1427 ;; *************** function _PWM_Disable *****************
  1428 ;; Defined at:
  1429 ;;		line 31 in file "pwm.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0, pclath, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0
  1443 ;;      Params:         0       0
  1444 ;;      Locals:         0       0
  1445 ;;      Temps:          0       1
  1446 ;;      Totals:         0       1
  1447 ;;Total ram usage:        1 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 4
  1450 ;; This function calls:
  1451 ;;		_PWM_Set_Duty
  1452 ;; This function is called by:
  1453 ;;		_PWM_Off
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457     00C0                     _PWM_Disable:	
  1458                           ;psect for function _PWM_Disable
  1459                           
  1460     00C0                     l856:	
  1461                           ;incstack = 0
  1462                           ; Regs used in _PWM_Disable: [wreg+status,2+status,0+pclath+cstack]
  1463                           
  1464                           
  1465                           ;pwm.c: 32: PWM2CON = 0x00;
  1466     00C0  0199               	clrf	25	;volatile
  1467                           
  1468                           ;pwm.c: 33: PR2 = 0;
  1469     00C1  0192               	clrf	18	;volatile
  1470     00C2                     l858:
  1471                           
  1472                           ;pwm.c: 34: PWM_Set_Duty(0);
  1473     00C2  3000               	movlw	0
  1474     00C3  00C6               	movwf	PWM_Set_Duty@duty
  1475     00C4  00C7               	movwf	PWM_Set_Duty@duty+1
  1476     00C5  205F               	fcall	_PWM_Set_Duty
  1477     00C6                     l860:
  1478                           
  1479                           ;pwm.c: 35: T2CON = 0;
  1480     00C6  0193               	clrf	19	;volatile
  1481     00C7                     l862:
  1482                           
  1483                           ;pwm.c: 36: PWM2CON = 0;
  1484     00C7  0199               	clrf	25	;volatile
  1485     00C8                     l864:
  1486                           
  1487                           ;pwm.c: 37: TRISA &=~ (1<<0x01U);
  1488     00C8  30FD               	movlw	253
  1489     00C9  00CC               	movwf	??_PWM_Disable
  1490     00CA  084C               	movf	??_PWM_Disable,w
  1491     00CB  0586               	andwf	6,f	;volatile
  1492     00CC                     l866:
  1493                           
  1494                           ;pwm.c: 38: ANSELA &=~ (1<<0x01U);
  1495     00CC  30FD               	movlw	253
  1496     00CD  00CC               	movwf	??_PWM_Disable
  1497     00CE  084C               	movf	??_PWM_Disable,w
  1498     00CF  0588               	andwf	8,f	;volatile
  1499     00D0                     l868:
  1500                           
  1501                           ;pwm.c: 39: LATA &=~ (1<<0x01U);
  1502     00D0  30FD               	movlw	253
  1503     00D1  00CC               	movwf	??_PWM_Disable
  1504     00D2  084C               	movf	??_PWM_Disable,w
  1505     00D3  0587               	andwf	7,f	;volatile
  1506     00D4                     l66:
  1507     00D4  0008               	return
  1508     00D5                     __end_of_PWM_Disable:
  1509                           
  1510                           	psect	text15
  1511     005F                     __ptext15:	
  1512 ;; *************** function _PWM_Set_Duty *****************
  1513 ;; Defined at:
  1514 ;;		line 10 in file "pwm.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  duty            2    6[BANK0 ] unsigned int 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  temp            2   10[BANK0 ] unsigned int 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0
  1528 ;;      Params:         0       2
  1529 ;;      Locals:         0       2
  1530 ;;      Temps:          0       2
  1531 ;;      Totals:         0       6
  1532 ;;Total ram usage:        6 bytes
  1533 ;; Hardware stack levels used: 1
  1534 ;; Hardware stack levels required when called: 3
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		_PWM_Enable
  1539 ;;		_PWM_Disable
  1540 ;;		_PWM_On_20_Percent_Duty_Cycle
  1541 ;;		_PWM_On_50_Percent_Duty_Cycle
  1542 ;;		_PWM_On_100_Percent_Duty_Cycle
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546     005F                     _PWM_Set_Duty:	
  1547                           ;psect for function _PWM_Set_Duty
  1548                           
  1549     005F                     l830:	
  1550                           ;incstack = 0
  1551                           ; Regs used in _PWM_Set_Duty: [wreg+status,2+status,0]
  1552                           
  1553                           
  1554                           ;pwm.c: 11: uint16_t temp=duty;
  1555     005F  0847               	movf	PWM_Set_Duty@duty+1,w
  1556     0060  00CB               	movwf	PWM_Set_Duty@temp+1
  1557     0061  0846               	movf	PWM_Set_Duty@duty,w
  1558     0062  00CA               	movwf	PWM_Set_Duty@temp
  1559                           
  1560                           ;pwm.c: 12: temp&=0x3FF;
  1561     0063  30FF               	movlw	255
  1562     0064  05CA               	andwf	PWM_Set_Duty@temp,f
  1563     0065  3003               	movlw	3
  1564     0066  05CB               	andwf	PWM_Set_Duty@temp+1,f
  1565     0067                     l832:
  1566                           
  1567                           ;pwm.c: 13: PWM2DCL=(temp&0x03)<<6;
  1568     0067  084A               	movf	PWM_Set_Duty@temp,w
  1569     0068  3903               	andlw	3
  1570     0069  00C8               	movwf	??_PWM_Set_Duty
  1571     006A  3005               	movlw	5
  1572     006B                     u185:
  1573     006B  1003               	clrc
  1574     006C  0DC8               	rlf	??_PWM_Set_Duty,f
  1575     006D  3EFF               	addlw	-1
  1576     006E  1D03               	skipz
  1577     006F  286B               	goto	u185
  1578     0070  1003               	clrc
  1579     0071  0D48               	rlf	??_PWM_Set_Duty,w
  1580     0072  0097               	movwf	23	;volatile
  1581     0073                     l834:
  1582                           
  1583                           ;pwm.c: 14: PWM2DCH=(temp>>2);
  1584     0073  084B               	movf	PWM_Set_Duty@temp+1,w
  1585     0074  00C9               	movwf	??_PWM_Set_Duty+1
  1586     0075  084A               	movf	PWM_Set_Duty@temp,w
  1587     0076  00C8               	movwf	??_PWM_Set_Duty
  1588     0077  1003               	clrc
  1589     0078  0CC9               	rrf	??_PWM_Set_Duty+1,f
  1590     0079  0CC8               	rrf	??_PWM_Set_Duty,f
  1591     007A  1003               	clrc
  1592     007B  0CC9               	rrf	??_PWM_Set_Duty+1,f
  1593     007C  0CC8               	rrf	??_PWM_Set_Duty,f
  1594     007D  0848               	movf	??_PWM_Set_Duty,w
  1595     007E  0098               	movwf	24	;volatile
  1596     007F                     l57:
  1597     007F  0008               	return
  1598     0080                     __end_of_PWM_Set_Duty:
  1599                           
  1600                           	psect	text16
  1601     0080                     __ptext16:	
  1602 ;; *************** function _Button_Init *****************
  1603 ;; Defined at:
  1604 ;;		line 37 in file "button.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0
  1618 ;;      Params:         0       0
  1619 ;;      Locals:         0       0
  1620 ;;      Temps:          0       1
  1621 ;;      Totals:         0       1
  1622 ;;Total ram usage:        1 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; Hardware stack levels required when called: 3
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632     0080                     _Button_Init:	
  1633                           ;psect for function _Button_Init
  1634                           
  1635     0080                     l896:	
  1636                           ;incstack = 0
  1637                           ; Regs used in _Button_Init: [wreg+status,2+status,0]
  1638                           
  1639                           
  1640                           ;button.c: 38: TRISA |= (0x01<<0x00U);
  1641     0080  1406               	bsf	6,0	;volatile
  1642     0081                     l898:
  1643                           
  1644                           ;button.c: 39: ANSELA&=~ (0x01<<0x00U);
  1645     0081  30FE               	movlw	254
  1646     0082  00C6               	movwf	??_Button_Init
  1647     0083  0846               	movf	??_Button_Init,w
  1648     0084  0588               	andwf	8,f	;volatile
  1649     0085                     l900:
  1650                           
  1651                           ;button.c: 40: IOCAN |= (0x01<<0x00U);
  1652     0085  141B               	bsf	27,0	;volatile
  1653     0086                     l902:
  1654                           
  1655                           ;button.c: 41: if((INTCON & (0x01<<0x03U)) == 0){
  1656     0086  198B               	btfsc	11,3	;volatile
  1657     0087  2889               	goto	u241
  1658     0088  288A               	goto	u240
  1659     0089                     u241:
  1660     0089  288B               	goto	l147
  1661     008A                     u240:
  1662     008A                     l904:
  1663                           
  1664                           ;button.c: 42: INTCON |= (0x01<<0x03U);
  1665     008A  158B               	bsf	11,3	;volatile
  1666     008B                     l147:
  1667                           
  1668                           ;button.c: 43: };button.c: 44: if((INTCON & (0x01<<0x07U)) == 0){
  1669     008B  1B8B               	btfsc	11,7	;volatile
  1670     008C  288E               	goto	u251
  1671     008D  288F               	goto	u250
  1672     008E                     u251:
  1673     008E  2890               	goto	l148
  1674     008F                     u250:
  1675     008F                     l906:
  1676                           
  1677                           ;button.c: 45: INTCON |= (0x01<<0x07U);
  1678     008F  178B               	bsf	11,7	;volatile
  1679     0090                     l148:
  1680                           
  1681                           ;button.c: 46: };button.c: 47: if((INTCON & (0x01<<0x00U)) == 0){
  1682     0090  180B               	btfsc	11,0	;volatile
  1683     0091  2893               	goto	u261
  1684     0092  2894               	goto	u260
  1685     0093                     u261:
  1686     0093  2898               	goto	l910
  1687     0094                     u260:
  1688     0094                     l908:
  1689                           
  1690                           ;button.c: 48: INTCON &=~ (0x01<<0x00U);
  1691     0094  30FE               	movlw	254
  1692     0095  00C6               	movwf	??_Button_Init
  1693     0096  0846               	movf	??_Button_Init,w
  1694     0097  058B               	andwf	11,f	;volatile
  1695     0098                     l910:
  1696                           
  1697                           ;button.c: 49: };button.c: 50: if(IOCAF & (0x01<<0x00U)){
  1698     0098  1C1C               	btfss	28,0	;volatile
  1699     0099  289B               	goto	u271
  1700     009A  289C               	goto	u270
  1701     009B                     u271:
  1702     009B  28A0               	goto	l151
  1703     009C                     u270:
  1704     009C                     l912:
  1705                           
  1706                           ;button.c: 51: IOCAF &=~ (0x01<<0x00U);
  1707     009C  30FE               	movlw	254
  1708     009D  00C6               	movwf	??_Button_Init
  1709     009E  0846               	movf	??_Button_Init,w
  1710     009F  059C               	andwf	28,f	;volatile
  1711     00A0                     l151:
  1712     00A0  0008               	return
  1713     00A1                     __end_of_Button_Init:
  1714                           
  1715                           	psect	text17
  1716     0137                     __ptext17:	
  1717 ;; *************** function _Button_Get_State *****************
  1718 ;; Defined at:
  1719 ;;		line 55 in file "button.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      unsigned char 
  1726 ;; Registers used:
  1727 ;;		wreg
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0
  1733 ;;      Params:         0       0
  1734 ;;      Locals:         0       0
  1735 ;;      Temps:          0       0
  1736 ;;      Totals:         0       0
  1737 ;;Total ram usage:        0 bytes
  1738 ;; Hardware stack levels used: 1
  1739 ;; Hardware stack levels required when called: 3
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747     0137                     _Button_Get_State:	
  1748                           ;psect for function _Button_Get_State
  1749                           
  1750     0137                     l932:	
  1751                           ;incstack = 0
  1752                           ; Regs used in _Button_Get_State: [wreg]
  1753                           
  1754                           
  1755                           ;button.c: 56: return Button_State;
  1756     0137  084D               	movf	_Button_State,w	;volatile
  1757     0138                     l154:
  1758     0138  0008               	return
  1759     0139                     __end_of_Button_Get_State:
  1760                           
  1761                           	psect	text18
  1762     0105                     __ptext18:	
  1763 ;; *************** function _ISRs *****************
  1764 ;; Defined at:
  1765 ;;		line 38 in file "main.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0, pclath, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0
  1779 ;;      Params:         0       0
  1780 ;;      Locals:         0       0
  1781 ;;      Temps:          0       2
  1782 ;;      Totals:         0       2
  1783 ;;Total ram usage:        2 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 2
  1786 ;; This function calls:
  1787 ;;		_Button_ISR_Executables
  1788 ;; This function is called by:
  1789 ;;		Interrupt level 1
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793     0105                     _ISRs:	
  1794                           ;psect for function _ISRs
  1795                           
  1796     0105                     i1l982:
  1797                           
  1798                           ;main.c: 39: Button_ISR_Executables();
  1799     0105  200E               	fcall	_Button_ISR_Executables
  1800     0106                     i1l36:
  1801     0106  0845               	movf	??_ISRs+1,w
  1802     0107  008A               	movwf	10
  1803     0108  0E44               	swapf	??_ISRs,w
  1804     0109  0083               	movwf	3
  1805     010A  0EFE               	swapf	btemp,f
  1806     010B  0E7E               	swapf	btemp,w
  1807     010C  0009               	retfie
  1808     010D                     __end_of_ISRs:
  1809                           
  1810                           	psect	intentry
  1811     0004                     __pintentry:	
  1812                           ;incstack = 0
  1813                           ; Regs used in _ISRs: [wreg+status,2+status,0+pclath+cstack]
  1814                           
  1815     0004                     interrupt_function:
  1816     007E                     saved_w	set	btemp
  1817     0004  00FE               	movwf	btemp
  1818     0005  0E03               	swapf	3,w
  1819     0006  00C4               	movwf	??_ISRs
  1820     0007  080A               	movf	10,w
  1821     0008  00C5               	movwf	??_ISRs+1
  1822     0009  2905               	ljmp	_ISRs
  1823                           
  1824                           	psect	text19
  1825     000E                     __ptext19:	
  1826 ;; *************** function _Button_ISR_Executables *****************
  1827 ;; Defined at:
  1828 ;;		line 69 in file "button.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  i               2    2[BANK0 ] unsigned int 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, pclath, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0
  1842 ;;      Params:         0       0
  1843 ;;      Locals:         0       2
  1844 ;;      Temps:          0       1
  1845 ;;      Totals:         0       3
  1846 ;;Total ram usage:        3 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 1
  1849 ;; This function calls:
  1850 ;;		_Button_Interrupt_Fired
  1851 ;; This function is called by:
  1852 ;;		_ISRs
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856     000E                     _Button_ISR_Executables:	
  1857                           ;psect for function _Button_ISR_Executables
  1858                           
  1859     000E                     i1l944:	
  1860                           ;incstack = 0
  1861                           ; Regs used in _Button_ISR_Executables: [wreg+status,2+status,0+pclath+cstack]
  1862                           
  1863                           
  1864                           ;button.c: 70: if(Button_Interrupt_Fired()){
  1865     000E  20E2               	fcall	_Button_Interrupt_Fired
  1866     000F  3A00               	xorlw	0
  1867     0010  1903               	skipnz
  1868     0011  2813               	goto	u28_21
  1869     0012  2814               	goto	u28_20
  1870     0013                     u28_21:
  1871     0013  2839               	goto	i1l166
  1872     0014                     u28_20:
  1873     0014                     i1l946:
  1874                           
  1875                           ;button.c: 76: for(uint16_t i=0; i<10000;i++){
  1876     0014  01C2               	clrf	Button_ISR_Executables@i
  1877     0015  01C3               	clrf	Button_ISR_Executables@i+1
  1878     0016                     i1l163:
  1879                           
  1880                           ;button.c: 77: __nop();
  1881     0016  0000               	nop
  1882     0017                     i1l952:
  1883     0017  3001               	movlw	1
  1884     0018  07C2               	addwf	Button_ISR_Executables@i,f
  1885     0019  1803               	skipnc
  1886     001A  0AC3               	incf	Button_ISR_Executables@i+1,f
  1887     001B  3000               	movlw	0
  1888     001C  07C3               	addwf	Button_ISR_Executables@i+1,f
  1889     001D  3027               	movlw	39
  1890     001E  0243               	subwf	Button_ISR_Executables@i+1,w
  1891     001F  3010               	movlw	16
  1892     0020  1903               	skipnz
  1893     0021  0242               	subwf	Button_ISR_Executables@i,w
  1894     0022  1C03               	skipc
  1895     0023  2825               	goto	u29_21
  1896     0024  2826               	goto	u29_20
  1897     0025                     u29_21:
  1898     0025  2816               	goto	i1l163
  1899     0026                     u29_20:
  1900     0026                     i1l954:
  1901                           
  1902                           ;button.c: 78: };button.c: 80: Button_State++;
  1903     0026  3001               	movlw	1
  1904     0027  00C1               	movwf	??_Button_ISR_Executables
  1905     0028  0841               	movf	??_Button_ISR_Executables,w
  1906     0029  07CD               	addwf	_Button_State,f	;volatile
  1907     002A                     i1l956:
  1908                           
  1909                           ;button.c: 81: if(Button_State > (4U - 1)){
  1910     002A  3004               	movlw	4
  1911     002B  024D               	subwf	_Button_State,w	;volatile
  1912     002C  1C03               	skipc
  1913     002D  282F               	goto	u30_21
  1914     002E  2830               	goto	u30_20
  1915     002F                     u30_21:
  1916     002F  2831               	goto	i1l960
  1917     0030                     u30_20:
  1918     0030                     i1l958:
  1919                           
  1920                           ;button.c: 82: Button_State = 0;
  1921     0030  01CD               	clrf	_Button_State	;volatile
  1922     0031                     i1l960:
  1923                           
  1924                           ;button.c: 83: };button.c: 84: IOCAF &=~ (0x01<<0x00U);
  1925     0031  30FE               	movlw	254
  1926     0032  00C1               	movwf	??_Button_ISR_Executables
  1927     0033  0841               	movf	??_Button_ISR_Executables,w
  1928     0034  059C               	andwf	28,f	;volatile
  1929     0035                     i1l962:
  1930                           
  1931                           ;button.c: 85: INTCON &=~ (0x01<<0x00U);
  1932     0035  30FE               	movlw	254
  1933     0036  00C1               	movwf	??_Button_ISR_Executables
  1934     0037  0841               	movf	??_Button_ISR_Executables,w
  1935     0038  058B               	andwf	11,f	;volatile
  1936     0039                     i1l166:
  1937     0039  0008               	return
  1938     003A                     __end_of_Button_ISR_Executables:
  1939                           
  1940                           	psect	text20
  1941     00E2                     __ptext20:	
  1942 ;; *************** function _Button_Interrupt_Fired *****************
  1943 ;; Defined at:
  1944 ;;		line 59 in file "button.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  status          1    0[BANK0 ] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      unsigned char 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0
  1958 ;;      Params:         0       0
  1959 ;;      Locals:         0       1
  1960 ;;      Temps:          0       0
  1961 ;;      Totals:         0       1
  1962 ;;Total ram usage:        1 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_Button_ISR_Executables
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971     00E2                     _Button_Interrupt_Fired:	
  1972                           ;psect for function _Button_Interrupt_Fired
  1973                           
  1974     00E2                     i1l884:	
  1975                           ;incstack = 0
  1976                           ; Regs used in _Button_Interrupt_Fired: [wreg+status,2]
  1977                           
  1978                           
  1979                           ;button.c: 60: uint8_t status = 0;
  1980     00E2  01C0               	clrf	Button_Interrupt_Fired@status
  1981     00E3                     i1l886:
  1982                           
  1983                           ;button.c: 61: if(INTCON & (0x01<<0x00U)){
  1984     00E3  1C0B               	btfss	11,0	;volatile
  1985     00E4  28E6               	goto	u22_21
  1986     00E5  28E7               	goto	u22_20
  1987     00E6                     u22_21:
  1988     00E6  28ED               	goto	i1l892
  1989     00E7                     u22_20:
  1990     00E7                     i1l888:
  1991                           
  1992                           ;button.c: 62: if(IOCAF & (0x01<<0x00U)){
  1993     00E7  1C1C               	btfss	28,0	;volatile
  1994     00E8  28EA               	goto	u23_21
  1995     00E9  28EB               	goto	u23_20
  1996     00EA                     u23_21:
  1997     00EA  28ED               	goto	i1l892
  1998     00EB                     u23_20:
  1999     00EB                     i1l890:
  2000                           
  2001                           ;button.c: 63: status =1;
  2002     00EB  01C0               	clrf	Button_Interrupt_Fired@status
  2003     00EC  0AC0               	incf	Button_Interrupt_Fired@status,f
  2004     00ED                     i1l892:
  2005                           
  2006                           ;button.c: 64: };button.c: 65: };button.c: 66: return status;
  2007     00ED  0840               	movf	Button_Interrupt_Fired@status,w
  2008     00EE                     i1l159:
  2009     00EE  0008               	return
  2010     00EF                     __end_of_Button_Interrupt_Fired:
  2011     007E                     btemp	set	126	;btemp
  2012     007E                     wtemp0	set	126
  2013                           
  2014                           	psect	config
  2015                           
  2016                           ;Config register CONFIG @ 0x2007
  2017                           ;	Oscillator Selection bits
  2018                           ;	FOSC = INTOSC, INTOSC oscillator: CLKIN function disabled
  2019                           ;	Brown-out Reset Enable
  2020                           ;	BOREN = OFF, Brown-out Reset disabled
  2021                           ;	Watchdog Timer Enable
  2022                           ;	WDTE = OFF, WDT disabled
  2023                           ;	Power-up Timer Enable bit
  2024                           ;	PWRTE = OFF, PWRT disabled
  2025                           ;	MCLR Pin Function Select bit
  2026                           ;	MCLRE = ON, MCLR pin function is MCLR
  2027                           ;	Code Protection bit
  2028                           ;	CP = OFF, Program memory code protection is disabled
  2029                           ;	Low-Voltage Programming Enable
  2030                           ;	LVP = ON, Low-voltage programming enabled
  2031                           ;	Brown-out Reset Selection bits
  2032                           ;	LPBOR = OFF, BOR disabled
  2033                           ;	Brown-out Reset Voltage Selection
  2034                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2035                           ;	Flash Memory Self-Write Protection
  2036                           ;	WRT = OFF, Write protection off
  2037     2007                     	org	8199
  2038     2007  3DE0               	dw	15840

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     13      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRs in COMMON

    None.

Critical Paths under _main in BANK0

    _Sleep_Init->_Sleep_Disable_ADC
    _Sleep_Init->_Sleep_Disable_Reference_Clock_Output
    _Sleep_Init->_Sleep_Disable_Watchdog
    _Sleep_Init->_Sleep_Unused_GPIO_Config
    _PWM_On_50_Percent_Duty_Cycle->_PWM_Enable
    _PWM_On_20_Percent_Duty_Cycle->_PWM_Enable
    _PWM_On_100_Percent_Duty_Cycle->_PWM_Enable
    _PWM_Enable->_PWM_Set_Duty
    _PWM_Off->_PWM_Disable
    _PWM_Disable->_PWM_Set_Duty

Critical Paths under _ISRs in BANK0

    _ISRs->_Button_ISR_Executables
    _Button_ISR_Executables->_Button_Interrupt_Fired

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3136
                   _Button_Get_State
                        _Button_Init
                            _PWM_Off
      _PWM_On_100_Percent_Duty_Cycle
       _PWM_On_20_Percent_Duty_Cycle
       _PWM_On_50_Percent_Duty_Cycle
                         _Sleep_Init
 ---------------------------------------------------------------------------------
 (1) _Sleep_Init                                           0     0      0       0
                  _Sleep_Disable_ADC
                  _Sleep_Disable_FVR
_Sleep_Disable_Reference_Clock_Outpu
             _Sleep_Disable_Watchdog
_Sleep_Enable_Voltage_Regulator_In_L
_Sleep_Select_Internal_8MHz_Oscillat
           _Sleep_Unused_GPIO_Config
 ---------------------------------------------------------------------------------
 (2) _Sleep_Unused_GPIO_Config                             1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Select_Internal_8MHz_Oscillator                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Disable_Watchdog                               1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Disable_Reference_Clock_Output                 1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Disable_FVR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Disable_ADC                                    1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_On_50_Percent_Duty_Cycle                         0     0      0     896
                         _PWM_Enable
                       _PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (1) _PWM_On_20_Percent_Duty_Cycle                         0     0      0     896
                         _PWM_Enable
                       _PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (1) _PWM_On_100_Percent_Duty_Cycle                        0     0      0     896
                         _PWM_Enable
                       _PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (2) _PWM_Enable                                           1     1      0     448
                                             12 BANK0      1     1      0
                       _PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (1) _PWM_Off                                              0     0      0     448
                        _PWM_Disable
 ---------------------------------------------------------------------------------
 (2) _PWM_Disable                                          1     1      0     448
                                             12 BANK0      1     1      0
                       _PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (2) _PWM_Set_Duty                                         6     4      2     448
                                              6 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Button_Init                                          1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Button_Get_State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISRs                                                 2     2      0      70
                                              4 BANK0      2     2      0
             _Button_ISR_Executables
 ---------------------------------------------------------------------------------
 (5) _Button_ISR_Executables                               3     3      0      70
                                              1 BANK0      3     3      0
             _Button_Interrupt_Fired
 ---------------------------------------------------------------------------------
 (6) _Button_Interrupt_Fired                               1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Button_Get_State
   _Button_Init
   _PWM_Off
     _PWM_Disable
       _PWM_Set_Duty
   _PWM_On_100_Percent_Duty_Cycle
     _PWM_Enable
       _PWM_Set_Duty
     _PWM_Set_Duty
   _PWM_On_20_Percent_Duty_Cycle
     _PWM_Enable
     _PWM_Set_Duty
   _PWM_On_50_Percent_Duty_Cycle
     _PWM_Enable
     _PWM_Set_Duty
   _Sleep_Init
     _Sleep_Disable_ADC
     _Sleep_Disable_FVR
     _Sleep_Disable_Reference_Clock_Output
     _Sleep_Disable_Watchdog
     _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode
     _Sleep_Select_Internal_8MHz_Oscillator
     _Sleep_Unused_GPIO_Config

 _ISRs (ROOT)
   _Button_ISR_Executables
     _Button_Interrupt_Fired

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               3E      D       E       3       22.6%
ABS                  0      0       E       4        0.0%
DATA                 0      0       E       5        0.0%
BITBANK0            3E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 09 00:32:38 2023

                                  _Button_ISR_Executables 000E  
                                              _PWM_Enable 00A1  
                                                      l23 005D  
                                                      l60 00B6  
                                                      l63 00BF  
                                                      l72 0113  
                                                      l57 007F  
                                                      l66 00D4  
                                                      l75 0121  
                                                      l69 011A  
                                                      l78 0136  
                                             _PWM_Disable 00C0  
                                                     l103 00FC  
                                                     l112 012B  
                                                     l121 0132  
                                                     l106 0100  
                                                     l130 00F9  
                                                     l115 0126  
                                                     l124 0130  
                                                     l109 0104  
                                                     l118 0134  
                                                     l151 00A0  
                                                     l127 00E1  
                                                     l154 0138  
                                                     l147 008B  
                                                     l148 0090  
                                                     l900 0085  
                                                     l910 0098  
                                                     l902 0086  
                                                     l830 005F  
                                                     l912 009C  
                                                     l904 008A  
                                                     l832 0067  
                                                     l840 00A6  
                                                     l920 00F3  
                                                     l906 008F  
                                                     l834 0073  
                                                     l850 00B4  
                                                     l842 00A7  
                                                     l930 00F8  
                                                     l922 00F4  
                                                     l914 00EF  
                                                     l932 0137  
                                                     l908 0094  
                                                     l860 00C6  
                                                     l852 00BA  
                                                     l844 00A9  
                                                     l836 00A1  
                                                     l940 010D  
                                                     l924 00F5  
                                                     l916 00F1  
                                                     l862 00C7  
                                                     l854 00BE  
                                                     l846 00AE  
                                                     l838 00A5  
                                                     l942 011B  
                                                     l870 00FA  
                                                     l926 00F6  
                                                     l918 00F2  
                                                     l864 00C8  
                                                     l856 00C0  
                                                     l936 0135  
                                                     l848 00B2  
                                                     l880 012C  
                                                     l872 0127  
                                                     l928 00F7  
                                                     l866 00CC  
                                                     l858 00C2  
                                                     l938 0114  
                                                     l874 0122  
                                                     l882 00D5  
                                                     l970 0045  
                                                     l868 00D0  
                                                     l876 0133  
                                                     l980 005B  
                                                     l972 004B  
                                                     l964 003A  
                                                     l878 0131  
                                                     l974 004D  
                                                     l966 003C  
                                                     l896 0080  
                                                     l976 0053  
                                                     l968 0042  
                                                     l898 0081  
                                                     l978 0055  
                                                     u200 0100  
                                                     u201 00FF  
                                                     u210 0104  
                                                     u211 0103  
                                                     u310 0042  
                                                     u311 0041  
                                                     u240 008A  
                                                     u320 004B  
                                                     u241 0089  
                                                     u321 004A  
                                                     u250 008F  
                                                     u330 0053  
                                                     u251 008E  
                                                     u331 0052  
                                                     u260 0094  
                                                     u340 005B  
                                                     u261 0093  
                                                     u341 005A  
                                                     u270 009C  
                                                     u190 00BA  
                                                     _PR2 0012  
                                                     u271 009B  
                                                     u191 00B9  
                                                     u185 006B  
                                       _Sleep_Disable_ADC 012C  
                                       _Sleep_Disable_FVR 0133  
                                      ?_Sleep_Disable_ADC 0040  
                                      ?_Sleep_Disable_FVR 0040  
                                                    _LATA 0007  
                                                    i1l36 0106  
                                                    _PIR1 000C  
                                                    _ISRs 0105  
                                                    _WPUA 0009  
                                                    _main 003A  
                                                    btemp 007E  
                                         __end_of_PWM_Off 0137  
                                     ??_Sleep_Disable_ADC 0046  
                                     ??_Sleep_Disable_FVR 0000  
                                                    start 000A  
                                            _PWM_Set_Duty 005F  
                    __end_of_PWM_On_20_Percent_Duty_Cycle 011B  
                            _PWM_On_20_Percent_Duty_Cycle 0114  
                    __end_of_PWM_On_50_Percent_Duty_Cycle 0114  
                            _PWM_On_50_Percent_Duty_Cycle 010D  
                                                   ?_ISRs 0040  
                                           ??_Button_Init 0046  
                                        _Button_Get_State 0137  
                                                   ?_main 0040  
                                                   _ADCON 001F  
           __end_of_Sleep_Select_Internal_8MHz_Oscillator 0105  
                  ?_Sleep_Select_Internal_8MHz_Oscillator 0040  
                 ??_Sleep_Select_Internal_8MHz_Oscillator 0000  
                   _Sleep_Select_Internal_8MHz_Oscillator 00FA  
                                                   _T2CON 0013  
                                                   _IOCAF 001C  
                                                   _IOCAN 001B  
                                        PWM_Set_Duty@duty 0046  
                                                   i1l163 0016  
                                                   i1l166 0039  
                                                   i1l159 00EE  
                                        PWM_Set_Duty@temp 004A  
                                                   i1l960 0031  
                                                   i1l952 0017  
                                                   i1l944 000E  
                                                   i1l890 00EB  
                                                   i1l962 0035  
                                                   i1l954 0026  
                                                   i1l946 0014  
                                                   i1l892 00ED  
                                                   i1l884 00E2  
                                                   i1l956 002A  
                                                   i1l886 00E3  
                                                   i1l958 0030  
                                                   i1l982 0105  
                                                   i1l888 00E7  
                                                   u22_20 00E7  
                                                   u30_20 0030  
                                                   u22_21 00E6  
                                                   u30_21 002F  
                               __end_of_Sleep_Disable_ADC 0131  
                                                   u23_20 00EB  
                                                   u23_21 00EA  
                                                   u28_20 0014  
                                                   u28_21 0013  
                                                   u29_20 0026  
                                                   u29_21 0025  
                               __end_of_Sleep_Disable_FVR 0135  
                                                   _TRISA 0006  
                                                   pclath 000A  
                                                   status 0003  
                                                   wtemp0 007E  
                                            __end_of_ISRs 010D  
                         ??_PWM_On_100_Percent_Duty_Cycle 0000  
                                         __initialization 000B  
                                            __end_of_main 005F  
                                             ?_PWM_Enable 0040  
                                                  ??_ISRs 0044  
                                                  ??_main 0000  
            __end_of_Sleep_Disable_Reference_Clock_Output 012C  
                  ??_Sleep_Disable_Reference_Clock_Output 0046  
                   ?_Sleep_Disable_Reference_Clock_Output 0040  
                    _Sleep_Disable_Reference_Clock_Output 0127  
                                     __end_of_Button_Init 00A1  
                                                  _ANSELA 0008  
                                               ??_PWM_Off 0000  
                              ??_Sleep_Unused_GPIO_Config 0046  
                                                  _INTCON 000B  
                                                  _FVRCON 001D  
                                  _Sleep_Disable_Watchdog 0122  
                                                  _OSCCON 0010  
                                                  _WDTCON 0030  
                                              _Sleep_Init 00EF  
                                 ?_Button_Interrupt_Fired 0040  
                                                  saved_w 007E  
                                 __end_of__initialization 000C  
                                 ?_Button_ISR_Executables 0040  
                                          __pcstackCOMMON 0000  
                          __end_of_Button_Interrupt_Fired 00EF  
                   __end_of_PWM_On_100_Percent_Duty_Cycle 0122  
                           _PWM_On_100_Percent_Duty_Cycle 011B  
                                            ?_PWM_Disable 0040  
                                             _Button_Init 0080  
                                              __pbssBANK0 004D  
                                __end_of_Button_Get_State 0139  
                          __end_of_Button_ISR_Executables 003A  
                                             ?_Sleep_Init 0040  
                                              __pmaintext 003A  
                                              __pintentry 0004  
                                                 _CLKRCON 0026  
                                                 _PWM2DCH 0018  
                                                 _PWM2DCL 0017  
                                                 _PWM2CON 0019  
                                                 _VREGCON 003E  
                                                 _PWM_Off 0135  
                                            ??_PWM_Enable 004C  
                                                 __ptext1 00EF  
                                                 __ptext2 00D5  
                                                 __ptext3 00FA  
                                                 __ptext4 0131  
                                                 __ptext5 0122  
                                                 __ptext6 0127  
                                                 __ptext7 0133  
                                                 __ptext8 012C  
                                                 __ptext9 010D  
                                 ?_Sleep_Disable_Watchdog 0040  
                                    end_of_initialization 000C  
                                      __end_of_PWM_Enable 00C0  
                          __end_of_Sleep_Disable_Watchdog 0127  
                               ?_Sleep_Unused_GPIO_Config 0040  
                                            ?_Button_Init 0040  
                           ?_PWM_On_20_Percent_Duty_Cycle 0040  
                           ?_PWM_On_50_Percent_Duty_Cycle 0040  
                                     start_initialization 000B  
                                            _Button_State 004D  
                                 Button_ISR_Executables@i 0042  
                                       ?_Button_Get_State 0040  
                                           ?_PWM_Set_Duty 0046  
                                            ??_Sleep_Init 0000  
                                      ??_Button_Get_State 0000  
                                               ___latbits 0000  
                                           __pcstackBANK0 0040  
                                      __end_of_Sleep_Init 00FA  
                            Button_Interrupt_Fired@status 0040  
                                                ?_PWM_Off 0040  
                                          ??_PWM_Set_Duty 0048  
                          ??_PWM_On_20_Percent_Duty_Cycle 0000  
                          ??_PWM_On_50_Percent_Duty_Cycle 0000  
                                       interrupt_function 0004  
                                ??_Button_Interrupt_Fired 0000  
                                ??_Button_ISR_Executables 0041  
                        __end_of_Sleep_Unused_GPIO_Config 00E2  
                                           ??_PWM_Disable 004C  
                                    __end_of_PWM_Set_Duty 0080  
                          ?_PWM_On_100_Percent_Duty_Cycle 0040  
                                                __ptext10 0114  
                                                __ptext11 011B  
                                                __ptext20 00E2  
                                                __ptext12 00A1  
                                                __ptext13 0135  
                                                __ptext14 00C0  
                                                __ptext15 005F  
                                                __ptext16 0080  
                                                __ptext17 0137  
                                                __ptext18 0105  
                                                __ptext19 000E  
                                     __end_of_PWM_Disable 00D5  
                                                intlevel1 0000  
                                _Sleep_Unused_GPIO_Config 00D5  
__end_of_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode 0133  
       ?_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode 0040  
      ??_Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode 0000  
        _Sleep_Enable_Voltage_Regulator_In_Low_Power_Mode 0131  
                                ??_Sleep_Disable_Watchdog 0046  
                                  _Button_Interrupt_Fired 00E2  
                                              _OPTION_REG 000E  
